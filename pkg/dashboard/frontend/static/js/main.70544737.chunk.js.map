{"version":3,"sources":["factories/serviceFactory.ts","services/webSocketService.ts","assets sync /^/.//.*//brand/.json$","assets lazy /^/.//.*//logo/-navigation/.svg$/ groupOptions: {} namespace object","assets lazy /^/.//.*//banner/.svg$/ groupOptions: {} namespace object","assets/explorer.svg","assets/home.svg","assets/moon.svg","assets/padlock-unlocked.svg","assets/padlock.svg","assets/peers.svg","assets/plugins.svg","assets/sun.svg","assets/visualizer.svg","models/websocket/webSocketTopic.ts","services/eventAggregator.ts","utils/brandHelper.ts","app/components/layout/AsyncComponent.tsx","app/components/layout/Breakpoint.tsx","utils/formatHelper.ts","assets/health-bad.svg","assets/health-good.svg","assets/search.svg","app/components/layout/HealthIndicator.tsx","app/components/layout/MicroGraph.tsx","assets/confirmation.svg","app/components/layout/SearchInput.tsx","app/components/layout/Header.tsx","app/components/layout/NavMenu.tsx","app/components/layout/NavPanel.tsx","assets/milestone.svg","assets/uptime.svg","assets/chevron-left.svg","app/components/layout/InfoPanel.tsx","app/routes/Explorer.tsx","utils/bech32AddressHelper.ts","utils/nameHelper.ts","app/components/layout/Pagination.tsx","assets/copy.svg","app/components/layout/Spinner.tsx","utils/clipboardHelper.ts","assets/dropdown-arrow.svg","app/components/layout/BlockButton.tsx","app/components/tangle/Bech32Address.tsx","assets/chevron-down.svg","app/components/tangle/Feature.tsx","app/components/tangle/Token.tsx","app/components/tangle/UnlockCondition.tsx","app/components/tangle/Output.tsx","app/routes/explorer/Address.tsx","assets/download.svg","assets/chevron-right.svg","utils/downloadHelper.ts","app/components/tangle/BlockTangleState.tsx","app/components/tangle/InclusionState.tsx","app/components/tangle/ProtocolParamsMilestonOption.tsx","app/components/tangle/MigratedFund.tsx","app/components/tangle/ReceiptMilestoneOption.tsx","app/components/tangle/MilestonePayload.tsx","app/components/tangle/TaggedDataPayload.tsx","app/components/tangle/UTXOInput.tsx","app/components/tangle/TransactionPayload.tsx","app/routes/explorer/Block.tsx","assets/banner-curve.svg","app/routes/explorer/Milestone.tsx","app/routes/explorer/OutputRoute.tsx","assets/db-icon.svg","assets/memory.svg","assets/pruning.svg","assets/eye-closed.svg","app/components/layout/Graph.tsx","assets/eye.svg","assets/health-warning.svg","utils/dataHelper.ts","app/components/tangle/PeersSummaryPanel.tsx","app/routes/Home.tsx","app/routes/Login.tsx","app/routes/Peer.tsx","app/components/layout/Dialog.tsx","app/routes/Peers.tsx","app/components/layout/TabPanel.tsx","utils/fetchHelper.ts","app/components/plugins/Participation.tsx","assets/toggle.svg","app/components/layout/ToggleButton.tsx","app/components/plugins/Spammer.tsx","assets/close.svg","app/routes/Plugins.tsx","app/routes/Search.tsx","app/routes/Unavailable.tsx","assets/pause.svg","assets/play.svg","app/routes/Visualizer.tsx","app/App.tsx","services/authService.ts","services/localStorageService.ts","services/metricsService.ts","services/nodeConfigService.ts","services/sessionStorageService.ts","services/settingsService.ts","services/tangleService.ts","services/themeService.ts","services/visualizerService.ts","index.tsx"],"names":["ServiceFactory","name","instanceCallback","this","_services","_instances","WebSocketService","_reconnectTimer","_lastMessage","_webSocket","_subscriptions","_authService","get","topic","requiresAuth","callback","isSubscribed","subs","subscriptionId","Converter","bytesToHex","RandomHelper","generate","push","readyState","WebSocket","OPEN","subscribeTopic","connectSocket","Object","keys","map","k","Number","subscriptionIdx","findIndex","s","splice","length","unsubscribeTopic","clearTimer","disconnectSocket","topics","uri","window","location","protocol","hostname","process","REACT_APP_SOCKET","port","onopen","onclose","onerror","err","console","error","onmessage","msg","Date","now","handleMessage","data","setInterval","reconnect","close","undefined","clearInterval","topicId","jwt","isLoggedIn","arrayBuf","ArrayBuffer","view","Uint8Array","set","Buffer","from","send","message","JSON","parse","type","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports","webpackAsyncContext","Promise","then","ids","_path","_excluded","_extends","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgExplorer","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","d","ForwardRef","SvgHome","SvgMoon","_path2","_path3","_path4","SvgPadlockUnlocked","SvgPadlock","SvgPeers","fillRule","clipRule","SvgPlugins","_path5","_path6","_path7","_path8","_path9","SvgSun","SvgVisualizer","WebSocketTopic","EventAggregator","eventName","subscriberId","handler","setTimeout","BrandHelper","_brandId","_brandConfiguration","require","document","theme","default","AsyncComponent","_isMounted","state","Component","Breakpoint","_resize","resize","isVisible","calculateVisible","addEventListener","removeEventListener","children","setState","windowSize","Math","max","documentElement","clientWidth","innerWidth","aboveBelow","SIZE_BREAKPOINTS","size","FormatHelper","_baseToken","nodeConfigService","getBaseToken","value","formatFull","decimalPlaces","subunit","unit","baseTokeValue","pow","decimals","amount","useMetricPrefix","UnitsHelper","formatBest","parseFloat","toFixed","instance","milliseconds","humanize","largest","round","bytes","index","floor","log","units","toString","valueInMs","human","timeMoment","moment","formatted","format","postDate","duration","diff","outputId","HexHelper","toBigInt256","eq","bigInt","zero","addPrefix","Blake2b","sum256","hexToBytes","stripPrefix","_circle","_circle2","SvgHealthBad","opacity","cx","cy","r","SvgHealthGood","HealthIndicator","className","classNames","healthy","label","MicroGraph","_graphWidth","_graphHeight","graphWidth","graphHeight","calculateGraph","prevProps","values","graphPoints","g","x","y","join","stroke","strokeWidth","circle","min","graphPointCount","lastItems","slice","circleX","circleY","range","scale","lastY","xIncrement","SvgSearch","SearchInput","query","compact","onClick","onSearch","onChange","onKeyDown","placeholder","Header","_metricsService","_nodeStatusSubscription","_publicNodeStatusSubscription","_databaseSizeSubscription","_bpsMetricsSubscription","syncHealth","nodeHealth","bps","bpsValues","memorySizeFormatted","memorySize","dbLedgerSizeFormatted","dbLedgerSize","dbTangleSizeFormatted","dbTangleSize","Boolean","online","subscribe","PublicNodeStatus","isHealthy","isSynced","NodeStatus","iSize","memUsage","allData","nonNull","filter","DBSizeMetric","utxo","tangle","dbLedgerSizeValues","dbTangleSizeValues","BPSMetrics","new","bpsFormatted","unsubscribe","Fragment","history","withRouter","NavMenu","_themeService","logoSrc","isOpen","getLogoNavigation","a","src","NavPanel","fullWidth","to","middle","b","hidden","route","pathname","startsWith","icon","function","end","SvgConfirmation","SvgMilestone","SvgUptime","InfoPanel","backgroundStyle","caption","Peers","_milestonesSubscription","_confirmedMsMetricsSubscription","milestones","rbps","referencedRate","Milestone","m","milestoneId","sort","m1","m2","ConfirmedMsMetrics","blocksPerSecond","referencedBlocksPerSecond","ms","idx","SvgChevronLeft","Bech32AddressHelper","address","hrp","addressType","bech32","hex","Bech32Helper","matches","result","fromBech32","addressBytes","parseInt","toBech32","typeLabel","ED25519_ADDRESS_TYPE","ALIAS_ADDRESS_TYPE","NFT_ADDRESS_TYPE","NameHelper","UTXO_INPUT_TYPE","TREASURY_INPUT_TYPE","BASIC_OUTPUT_TYPE","ALIAS_OUTPUT_TYPE","NFT_OUTPUT_TYPE","FOUNDRY_OUTPUT_TYPE","TREASURY_OUTPUT_TYPE","SIGNATURE_UNLOCK_TYPE","REFERENCE_UNLOCK_TYPE","ALIAS_UNLOCK_TYPE","NFT_UNLOCK_TYPE","ADDRESS_UNLOCK_CONDITION_TYPE","STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_TYPE","TIMELOCK_UNLOCK_CONDITION_TYPE","EXPIRATION_UNLOCK_CONDITION_TYPE","STATE_CONTROLLER_ADDRESS_UNLOCK_CONDITION_TYPE","GOVERNOR_ADDRESS_UNLOCK_CONDITION_TYPE","IMMUTABLE_ALIAS_UNLOCK_CONDITION_TYPE","SENDER_FEATURE_TYPE","ISSUER_FEATURE_TYPE","METADATA_FEATURE_TYPE","TAG_FEATURE_TYPE","Pagination","paginationRange","lastPage","isMobile","updatePaginationRange","bind","isMobileViewPort","currentPage","disabled","onPageChange","pageNumber","DOTS","selected","totalPageCount","ceil","totalCount","pageSize","siblingsCount","leftSiblingIndex","rightSiblingIndex","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftItemCount","leftRange","rightItemCount","rightRange","middleRange","rightRemainingPages","leftRemainingPages","extraPageRangeLimit","remainderMidPoint","rMiddleRange","lastItemIndex","lMiddleRange","unshift","start","Array","_","Spinner","ClipboardHelper","text","textArea","createElement","style","fontSize","border","padding","margin","position","left","yPosition","pageYOffset","scrollTop","top","setAttribute","body","append","select","execCommand","remove","SvgCopy","BlockButton","active","buttonType","activate","labelPosition","Bech32Address","hash","pubKeyHash","aliasId","nftId","addressDetails","buildAddress","getBech32Hrp","getAddressTypeName","activeLinks","copy","showHexAddress","SvgDropdownArrow","FeatureBlock","hexData","utf8Data","jsonData","feature","matchHexData","match","hexToUtf8","stringify","showDetails","getFeatureBlockTypeName","replace","tag","Token","token","UnlockCondition","getUnlockConditionTypeName","unlockCondition","returnAddress","unixTime","date","Output","isGenesis","isOutputResponse","output","metadata","blockId","repeat","showTokens","getOutputTypeName","getInstance","transactionId","outputIndex","isSpent","resolveId","stateIndex","stateMetadata","foundryCounter","buildFoundryId","serialNumber","tokenScheme","SIMPLE_TOKEN_SCHEME_TYPE","mintedTokens","meltedTokens","maximumSupply","unlockConditions","features","Feature","immutableFeatures","immutableFeature","nativeTokens","object","typeWS","WriteStream","writeUInt8","aliasAddress","finalHex","serialNumberWS","writeUInt32","serialNumberHex","tokenSchemeTypeWS","tokenSchemeTypeHex","Address","_tangleService","_bech32Hrp","params","statusBusy","status","outputs","search","balance","outputIds","addressOutputIds","outputDetails","outputResult","unavailable","currentPageOutputs","page","SvgChevronDown","_rect","_rect2","_rect3","_rect4","SvgDownload","xmlnsXlink","isolation","DownloadHelper","b64","bytesToBase64","utf8ToBytes","BlockTangleState","updateMilestone","milestoneIndex","timestamp","milestoneDetails","dateShort","InclusionState","ProtocolParamsMilestonOption","option","targetMilestoneIndex","protocolVersion","MigratedFund","fund","tailTransactionHash","deposit","ReceiptMilestoneOption","showReceiptDetails","migratedAt","final","funds","transaction","input","MilestonePayload","showSignatures","showOptions","payload","previousMilestoneId","parents","parent","inclusionMerkleRoot","appliedMerkleRoot","options","RECEIPT_MILESTONE_OPTION_TYPE","PROTOCOL_PARAMETERS_MILESTONE_OPTION_TYPE","signatures","sig","publicKey","signature","TaggedDataPayload","utf8Index","matchHexIndex","hexIndex","indexLengthBytes","dataLengthBytes","UTXOInput","getInputTypeName","unlockAddress","transactionOutputIndex","TransactionPayload","signatureBlocks","unlocks","sigUnlockBlock","refUnlockBlock","reference","unlockAddresses","Ed25519Address","toAddress","writeStream","serializeTransactionPayload","finalBytes","essence","inputs","String","padStart","padEnd","Block","_timerId","dataUrls","selectedDataUrl","block","serializeBlock","json","createJsonDataUrl","bin","createBinaryDataUrl","base64","createBase64DataUrl","createHexDataUrl","updateBlockDetails","clearTimeout","blockTangleStatus","referencedByMilestoneIndex","nonce","metadataStatus","isSolid","ledgerInclusionState","conflictReason","TRANSACTION_PAYLOAD_TYPE","MILESTONE_PAYLOAD_TYPE","TAGGED_DATA_PAYLOAD_TYPE","href","download","filename","role","blockDetails","details","calculateConflictReason","calculateStatus","CONFLICT_REASON_STRINGS","SvgChevronRight","nextIndex","previousIndex","hasPrevious","hasNext","loadIndex","milestone","updateUrl","tangleService","info","blockIdFromMilestonePayload","checkForAdjacentMilestones","replaceState","OutputRoute","outputResponse","updateOutputDetails","SvgBannerCurve","SvgDbIcon","strokeLinecap","strokeLinejoin","SvgMemory","SvgPruning","Graph","_graphElement","dataEqual","series","ArrayHelper","equal","setElement","paths","path","t","textAnchor","anchor","content","element","axis","baseVal","seriesMaxLength","actualSeriesValues","maxY","maxItems","j","yScale","barWidth","axisSpacing","axisLabelWidth","timeInterval","endTime","numTimeEntries","timeMarkers","startTime","timePerInterval","dt","marginLeft","getHours","getMinutes","getSeconds","val","calculatePath","reverse","scaledVal","pathSegments","SvgEyeClosed","SvgEye","SvgHealthWarning","DataHelper","peer","multiAddresses","extractAddress","addr","extractIp4","extractIp6","extractDns","parts","exec","peers","health","alias","localeCompare","confirmedMilestoneIndex","latestMilestoneIndex","connected","calculateIsSynced","gossip","heartbeat","prunedMilestoneIndex","latestKnownMilestoneIndex","solidMilestoneIndex","PeersSummaryPanel","_settingsService","_peerSubscription","_syncStatusSubscription","blindMode","getBlindMode","PeerMetric","handleData","SyncStatus","cmi","lmi","toggleBlindMode","p","sortedPeers","sortPeers","calculateHealth","formatPeerAddress","setBlindMode","Home","_networkId","getNetworkId","nodeName","nodeId","displayVersion","displayLatestVersion","pruningIndex","memory","uptime","lastReceivedBpsTime","bpsIncoming","bpsOutgoing","bannerSrc","getBanner","nodeAlias","getConfiguration","checkVersion","version","latestVersion","incoming","outgoing","currentVersion","comparison","compareVersions","first","second","partsFirst","split","partsSecond","na","nb","firstAlphabet","secondAlphabet","firstIndex","charCodeAt","secondIndex","Login","user","password","isBusy","redirect","autoComplete","autoFocus","trim","login","success","Peer","_peersSubscription","isConnected","hasPeers","latestSolidMilestoneIndex","syncedPeers","connectedPeers","newBlocksDiff","sentBlocksDiff","relation","lastUpdateTime","gossipMetrics","newBlocksTotal","sentBlocksTotal","allDataPeers","find","nodeLmi","metrics","newBlocks","sentBlocks","nodeCmi","toUpperCase","knownBlocks","receivedBlocks","receivedBlockRequests","sentBlockRequests","receivedHeartbeats","sentHeartbeats","receivedMilestoneRequests","sentMilestoneRequests","droppedPackets","Dialog","actions","dialogPeerAddress","dialogPeerAlias","finalPeerIds","Set","has","originalAddress","dialogType","dialogIsEdit","dialogPeerId","dialogStatus","dialogBusy","dialogPeerIdOriginal","peerConfigure","peerDelete","endsWith","peerAdd","TabPanel","activeTab","toLowerCase","tabs","l","onTabChanged","flat","c","React","isValidElement","FetchHelper","baseUrl","method","headers","timeout","controller","AbortController","timerId","abort","fetch","signal","res","catch","statusText","urlParams","encodeURIComponent","Participation","events","eventIds","eventInfo","fetchEvents","prevState","difference","includes","fetchEventInfo","fetchEventStatus","milestoneIndexCommence","milestoneIndexStart","milestoneIndexEnd","dialogDetailsEvent","deleteId","submitEvent","eventDelete","validateJsonOrUrl","questions","q","answers","idy","current","accumulated","staking","symbol","staked","rewarded","host","buildAuthHeaders","response","eventAdd","url","URL","fetchEventJsonConfig","config","eventId","origin","_isAvailable","routes","PLUGIN_TITLE","description","PLUGIN_DESCRIPTION","settings","authService","Authorization","csrf","_g","_defs","SvgToggle","filterUnits","colorInterpolationFilters","floodOpacity","in","dy","stdDeviation","mode","in2","ToggleButton","onChanged","Spammer","isRunning","cpu","workers","workersMax","pluginStatus","pluginStart","pluginStop","onBlur","validateSettings","running","bpsRateLimit","cpuMaxUsage","spammerWorkers","spammerWorkersMax","isNaN","numWorkers","Plugins","plugins","pluginDetailsSpammer","pluginDetails","pluginDetailsParticipation","rel","Search","trySearch","objParam","objType","Unavailable","SvgClose","SvgPause","SvgPlay","Visualizer","_graph","_renderer","_graphics","_vizualizerService","_enteredVertexId","total","tips","referenced","transactions","conflicting","solid","isActive","vertex","op","updateVertex","deleteVertex","counts","referencedId","excludedIds","referenceVertex","styleAllLinks","setupGraph","toggleActivity","selectNode","fullId","calculateBlockLink","calculateTotal","graphElement","Viva","graph","View","webglGraphics","layout","Layout","forceDirected","springLength","springCoeff","stableThreshold","gravity","dragCoeff","timeStep","theta","node","webglSquare","calculateSize","STATE_COLOR_MAP","calculateState","link","webglLine","THEME_COLOR_LINKS","renderer","container","graphics","renderLinks","webglInputEvents","click","dblClick","open","mouseEnter","connectedLinkStyle","shortId","mouseLeave","run","clientHeight","zoomOut","updateNodeUI","addNode","added","links","some","toId","addLink","getNode","nodeUI","getNodeUI","color","isMilestone","isTip","isConflicting","isReferenced","isTransaction","isSelected","removeNode","startNode","dfsIterator","nodeCallback","linkCallback","up","seenNodes","pointer","fromId","linkNode","updateSize","pause","resume","payloadTitle","vertexId","highlight","linkId","linkUI","getLinkUI","COLOR_LINK_CHILDREN","COLOR_LINK_PARENTS","forEachLink","Solid","Unsolid","Referenced","Conflicting","Transaction","Tip","Unknown","dark","light","App","_statusSubscription","_alias","_lmi","_cmi","_lastStatus","_statusTimer","updateTitle","smi","publish","sections","logout","endSections","exact","component","AuthService","_jwt","_csrf","cookie","storageService","load","save","LocalStorageService","obj","localStorage","getItem","item","setItem","removeItem","rootKey","keysToRemove","len","clear","MetricsService","_webSocketService","_webSocketSubscriptions","_cached","isPublic","triggerCallbacks","singleCallback","multipleCallback","isArray","subscriber","NodeConfigService","_storageService","tickerSymbol","setBech32Hrp","bech32HRP","setNetworkId","networkName","setBaseToken","baseToken","bech32Hrp","networkId","SessionStorageService","sessionStorage","SettingsService","_blindMode","TangleService","_nodeInfo","client","buildClient","queryLower","queryLowerNoPrefix","indexerPlugin","IndexerPluginClient","BECH32_DEFAULT_HRP_MAIN","test","milestoneByIndex","ClientError","checkForUnavailable","addressBalance","addrBalance","addressBech32","basicOutputs","aliases","stateControllerBech32","aliasOutputs","nfts","nftOutputs","items","concat","aliasOutput","foundries","aliasAddressBech32","foundryOutputs","nft","nftOutput","isHex","transactionIncludedBlock","milestoneById","queryLowerNoType","foundryId","foundry","tagHex","blockMetadata","peerAddress","peerAlias","peerId","SingleNodeClient","basePath","httpStatus","ThemeService","_theme","currentTheme","classList","add","VisualizerService","_vertices","_verticesOrder","_counts","_verticesLimit","_vertexCallback","_countsCallback","_referencedCallback","vertexCallback","countsCallback","referencedCallback","Vertex","updateVertices","MilestoneInfo","updateMilestoneInfo","TipInfo","updateTipInfo","ConfirmedInfo","updateConfirmedInfo","SolidInfo","updateSolidInfo","subscription","vert","shortVertId","checkLimit","shift","removeVertex","register","settingsService","initialize","webSocketService","themeService","metricsService","resubscribe","initPlugin","initServices","brandConfiguration","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.70544737.chunk.js","sourcesContent":["/**\n * Factory for creating services.\n */\nexport class ServiceFactory {\n    /**\n     * Store the service callbacks.\n     */\n    private static readonly _services: { [name: string]: (serviceName: string) => unknown } = {};\n\n    /**\n     * Store the created instances.\n     */\n    private static readonly _instances: { [name: string]: unknown } = {};\n\n    /**\n     * Register a new service.\n     * @param name The name of the service.\n     * @param instanceCallback The callback to create an instance.\n     */\n    public static register(name: string, instanceCallback: (serviceName: string) => unknown): void {\n        this._services[name] = instanceCallback;\n    }\n\n    /**\n     * Unregister a service.\n     * @param name The name of the service to unregister.\n     */\n    public static unregister(name: string): void {\n        delete this._services[name];\n    }\n\n    /**\n     * Get a service instance.\n     * @param name The name of the service to get.\n     * @returns An instance of the service.\n     */\n    public static get<T>(name: string): T {\n        if (!this._instances[name] && this._services[name]) {\n            this._instances[name] = this._services[name](name);\n        }\n        return this._instances[name] as T;\n    }\n}\n","/* eslint-disable unicorn/prefer-add-event-listener */\nimport { Converter, RandomHelper } from \"@iota/util.js\";\nimport { ServiceFactory } from \"../factories/serviceFactory\";\nimport { IWebSocketMessage } from \"../models/websocket/IWebSocketMessage\";\nimport { WebSocketTopic } from \"../models/websocket/webSocketTopic\";\nimport { AuthService } from \"./authService\";\n\n/**\n * Service to handle the websocket connection.\n */\nexport class WebSocketService {\n    /**\n     * Timer to retry failed connections.\n     */\n    private _reconnectTimer?: NodeJS.Timer;\n\n    /**\n     * The last time we received a message.\n     */\n    private _lastMessage: number;\n\n    /**\n     * The web socket connection.\n     */\n    private _webSocket?: WebSocket;\n\n    /**\n     * Subscribers to the messages.\n     */\n    private readonly _subscriptions: {\n        [topic: number]:\n        {\n            requiresAuth: boolean;\n            isSubscribed: boolean;\n            subs: {\n                subscriptionId: string;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                callback: (data: any) => void;\n            }[];\n        };\n    };\n\n    /**\n     * The auth service.\n     */\n    private readonly _authService: AuthService;\n\n    /**\n     * Create a new instance of WebSocketService.\n     */\n    constructor() {\n        this._authService = ServiceFactory.get<AuthService>(\"auth\");\n\n        this._subscriptions = {};\n        this._lastMessage = 0;\n    }\n\n    /**\n     * Subscribe to a topic.\n     * @param topic The topic to subscribe to.\n     * @param requiresAuth Requires authentication.\n     * @param callback The callback to send the data to.\n     * @returns The subscription id.\n     */\n    public subscribe<T>(topic: WebSocketTopic, requiresAuth: boolean, callback: (data: T) => void): string {\n        if (!this._subscriptions[topic]) {\n            this._subscriptions[topic] = {\n                requiresAuth,\n                isSubscribed: false,\n                subs: []\n            };\n        }\n\n        const subscriptionId = Converter.bytesToHex(RandomHelper.generate(32));\n\n        this._subscriptions[topic].subs.push({\n            subscriptionId,\n            callback\n        });\n\n        if (this._webSocket && this._webSocket.readyState === WebSocket.OPEN) {\n            // If we are already connected just subscribe to the topic.\n            this.subscribeTopic(topic);\n        } else if (!this._webSocket) {\n            // Otherwise connect the socket which will in turn subscribe to\n            // all the topics with callbacks.\n            this.connectSocket();\n        }\n\n        return subscriptionId;\n    }\n\n    /**\n     * Unsubscribe from a topic.\n     * @param subscriptionId The subscription to unsubscribe.\n     */\n    public unsubscribe(subscriptionId: string): void {\n        for (const topic of Object.keys(this._subscriptions).map(k => Number(k))) {\n            const subscriptionIdx = this._subscriptions[topic].subs.findIndex(s => s.subscriptionId === subscriptionId);\n            if (subscriptionIdx >= 0) {\n                this._subscriptions[topic].subs.splice(subscriptionIdx, 1);\n\n                if (this._subscriptions[topic].subs.length === 0) {\n                    this.unsubscribeTopic(topic);\n                    // No more subscriptions for this topic so unsubscribe the topic.\n                    delete this._subscriptions[topic];\n                    break;\n                }\n            }\n        }\n\n        // No more subscriptions so disconnect the socket.\n        if (Object.keys(this._subscriptions).length === 0) {\n            this.clearTimer();\n            this.disconnectSocket();\n        }\n    }\n\n    /**\n     * We resubscribe if the authentication, jwt token has been updated.\n     */\n    public resubscribe(): void {\n        const topics = Object.keys(this._subscriptions).map(k => Number(k));\n        for (const topic of topics) {\n            this.unsubscribeTopic(topic);\n        }\n\n        // If the socket is not yet open dont subscribe again\n        // when the socket open completes the subscribeTopics will\n        // be called automatically\n        if (this._webSocket && this._webSocket.readyState === WebSocket.OPEN) {\n            for (const topic of topics) {\n                this.subscribeTopic(topic);\n            }\n        }\n    }\n\n    /**\n     * Connect the web socket.\n     */\n    private connectSocket(): void {\n        this.clearTimer();\n        this.disconnectSocket();\n\n        let uri = \"ws:\";\n\n        if (window.location.protocol === \"https:\") {\n            uri = \"wss:\";\n        }\n        uri += `//${window.location.hostname}:${process.env.REACT_APP_SOCKET ?? window.location.port}/dashboard/ws`;\n\n        this._webSocket = new WebSocket(uri);\n\n        this._webSocket.onopen = () => {\n            // Socket has opened so subscribe for all the registered subscription topics\n            for (const topic of Object.keys(this._subscriptions).map(k => Number(k))) {\n                this.subscribeTopic(topic);\n            }\n        };\n\n        this._webSocket.onclose = () => {\n            this.disconnectSocket();\n        };\n\n        this._webSocket.onerror = err => {\n            console.error(\"Socket error\", err);\n        };\n\n        this._webSocket.onmessage = msg => {\n            this._lastMessage = Date.now();\n            this.handleMessage(msg.data as string);\n        };\n\n        this._lastMessage = Date.now();\n        this._reconnectTimer = setInterval(() => this.reconnect(), 5000);\n    }\n\n    /**\n     * Disconnect the web socket.\n     */\n    private disconnectSocket(): void {\n        if (this._webSocket) {\n            try {\n                if (this._webSocket.readyState === WebSocket.OPEN) {\n                    this._webSocket.close();\n                }\n            } catch {}\n            this._webSocket = undefined;\n        }\n    }\n\n    /**\n     * Clear the timer.\n     */\n    private clearTimer(): void {\n        if (this._reconnectTimer) {\n            clearInterval(this._reconnectTimer);\n            this._reconnectTimer = undefined;\n        }\n    }\n\n    /**\n     * Subscribe to a topic.\n     * @param topicId The topic to subscribe to.\n     */\n    private subscribeTopic(topicId: number) {\n        if (this._subscriptions[topicId]) {\n            const requiresAuth = this._subscriptions[topicId].requiresAuth;\n            const jwt = this._authService.isLoggedIn();\n\n            if (!requiresAuth || (requiresAuth && jwt)) {\n                this._subscriptions[topicId].isSubscribed = true;\n\n                const arrayBuf = new ArrayBuffer(2 + (jwt && requiresAuth ? jwt.length : 0));\n                const view = new Uint8Array(arrayBuf);\n                view[0] = 0; // register\n                view[1] = topicId;\n\n                if (jwt && requiresAuth) {\n                    view.set(Buffer.from(jwt), 2);\n                }\n\n                if (this._webSocket) {\n                    this._webSocket.send(arrayBuf);\n                }\n            }\n        }\n    }\n\n    /**\n     * Unsubscribe from a topic.\n     * @param topicId The topic to unsubscribe from.\n     */\n    private unsubscribeTopic(topicId: number) {\n        if (this._subscriptions[topicId]?.isSubscribed) {\n            this._subscriptions[topicId].isSubscribed = false;\n\n            const arrayBuf = new ArrayBuffer(2);\n            const view = new Uint8Array(arrayBuf);\n            view[0] = 1; // unregister\n            view[1] = topicId;\n\n            if (this._webSocket && this._webSocket.readyState === WebSocket.OPEN) {\n                this._webSocket.send(arrayBuf);\n            }\n        }\n    }\n\n    /**\n     * Handle the messages.\n     * @param msg The mesage data.\n     */\n    private handleMessage(msg: string): void {\n        const message = JSON.parse(msg) as IWebSocketMessage;\n\n        if (this._subscriptions[message.type]) {\n            for (const subscriber of this._subscriptions[message.type].subs) {\n                subscriber.callback(message.data);\n            }\n        }\n    }\n\n    /**\n     * Reconnect if we have not received messages.\n     */\n    private reconnect(): void {\n        // Only reconnect if we have subscriptions.\n        if (Object.keys(this._subscriptions)) {\n            const now = Date.now();\n            if (now - this._lastMessage > 10000) {\n                this.connectSocket();\n            }\n        }\n    }\n}\n","var map = {\n\t\"./bee/brand.json\": 89,\n\t\"./hornet/brand.json\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 88;","var map = {\n\t\"./bee/themes/dark/logo-navigation.svg\": [\n\t\t185,\n\t\t4\n\t],\n\t\"./bee/themes/light/logo-navigation.svg\": [\n\t\t186,\n\t\t6\n\t],\n\t\"./hornet/themes/dark/logo-navigation.svg\": [\n\t\t187,\n\t\t8\n\t],\n\t\"./hornet/themes/light/logo-navigation.svg\": [\n\t\t188,\n\t\t10\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 91;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./bee/themes/dark/banner.svg\": [\n\t\t189,\n\t\t3\n\t],\n\t\"./bee/themes/light/banner.svg\": [\n\t\t190,\n\t\t5\n\t],\n\t\"./hornet/themes/dark/banner.svg\": [\n\t\t191,\n\t\t7\n\t],\n\t\"./hornet/themes/light/banner.svg\": [\n\t\t192,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 92;\nmodule.exports = webpackAsyncContext;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgExplorer(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.252 8C2.08416 8.6534 1.99949 9.32538 2 10C2 10.69 2.088 11.36 2.252 12H5.1C4.96518 10.6701 4.96518 9.32993 5.1 8H2.252ZM3.07 6H5.416C5.682 4.783 6.066 3.693 6.537 2.786C5.08518 3.48542 3.87722 4.60523 3.07 6ZM17.748 8H14.9C15.0348 9.32993 15.0348 10.6701 14.9 12H17.748C17.912 11.36 18 10.69 18 10C18 9.31 17.912 8.64 17.748 8ZM16.93 6C16.1228 4.60523 14.9148 3.48542 13.463 2.786C13.935 3.693 14.318 4.783 14.584 6H16.93ZM7.112 8C7.03708 8.66403 6.99968 9.33176 7 10C7 10.685 7.038 11.355 7.112 12H12.888C13.0386 10.6709 13.0386 9.32908 12.888 8H7.112ZM7.47 6H12.53C12.348 5.2483 12.0855 4.51841 11.747 3.823C11.119 2.568 10.447 2 10 2C9.552 2 8.881 2.568 8.253 3.823C7.938 4.455 7.673 5.19 7.47 6ZM3.07 14C3.87722 15.3948 5.08518 16.5146 6.537 17.214C6.065 16.307 5.682 15.217 5.416 14H3.07ZM16.93 14H14.584C14.318 15.217 13.934 16.307 13.463 17.214C14.9148 16.5146 16.1228 15.3948 16.93 14ZM7.47 14C7.673 14.81 7.938 15.545 8.253 16.177C8.881 17.432 9.553 18 10 18C10.448 18 11.119 17.432 11.747 16.177C12.062 15.545 12.327 14.81 12.53 14H7.47ZM10 20C4.477 20 0 15.523 0 10C0 4.477 4.477 0 10 0C15.523 0 20 4.477 20 10C20 15.523 15.523 20 10 20Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgExplorer);\nexport default __webpack_public_path__ + \"static/media/explorer.e52d7b00.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHome(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 18V6.80002L10 2.00002L2 6.80002V18H6V14.918C6 13.8572 6.42143 12.8397 7.17157 12.0896C7.92172 11.3394 8.93913 10.918 10 10.918C11.0609 10.918 12.0783 11.3394 12.8284 12.0896C13.5786 12.8397 14 13.8572 14 14.918V18H18ZM12 20V14.918C12 14.3876 11.7893 13.8789 11.4142 13.5038C11.0391 13.1287 10.5304 12.918 10 12.918C9.46957 12.918 8.96086 13.1287 8.58579 13.5038C8.21071 13.8789 8 14.3876 8 14.918V20H2C1.46957 20 0.960859 19.7893 0.585786 19.4142C0.210714 19.0391 0 18.5304 0 18L0 6.80002C-3.32274e-06 6.45465 0.0894306 6.11516 0.259593 5.81462C0.429755 5.51407 0.674847 5.26271 0.971 5.08502L8.971 0.285019C9.28183 0.0985175 9.63751 0 10 0C10.3625 0 10.7182 0.0985175 11.029 0.285019L19.029 5.08502C19.3252 5.26271 19.5702 5.51407 19.7404 5.81462C19.9106 6.11516 20 6.45465 20 6.80002V18C20 18.5304 19.7893 19.0391 19.4142 19.4142C19.0391 19.7893 18.5304 20 18 20H12Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/home.cddfeea5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMoon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m19.49261,11.36231c-0.20411,-0.05103 -0.40822,0 -0.58682,0.12757c-0.66336,0.56131 -1.42878,1.02056 -2.27074,1.32672c-0.79093,0.30617 -1.6584,0.45925 -2.5769,0.45925c-2.06662,0 -3.95465,-0.84196 -5.30689,-2.19419c-1.35224,-1.35224 -2.19419,-3.24026 -2.19419,-5.30689c0,-0.86747 0.15308,-1.70943 0.40822,-2.47485c0.28065,-0.81644 0.68887,-1.55635 1.22467,-2.19419c0.22962,-0.28065 0.1786,-0.68887 -0.10206,-0.9185c-0.1786,-0.12757 -0.38271,-0.1786 -0.58682,-0.12757c-2.16868,0.58682 -4.05671,1.88803 -5.40894,3.62297c-1.30121,1.70943 -2.09214,3.82708 -2.09214,6.14885c0,2.78101 1.12261,5.30689 2.95961,7.14389s4.36287,2.95961 7.14389,2.95961c2.34728,0 4.51596,-0.81644 6.2509,-2.16868c1.76046,-1.37775 3.03615,-3.34232 3.57194,-5.58754c0.12757,-0.38271 -0.07654,-0.7399 -0.43374,-0.81644zm-3.90362,5.3324c-1.47981,1.17364 -3.36783,1.88803 -5.43446,1.88803c-2.42382,0 -4.61801,-0.99504 -6.19987,-2.5769c-1.58186,-1.58186 -2.5769,-3.77605 -2.5769,-6.19987c0,-2.0156 0.66336,-3.8526 1.81149,-5.3324c0.79093,-1.02056 1.78597,-1.86251 2.9341,-2.44933c-0.12757,0.28065 -0.25514,0.56131 -0.35719,0.86747c-0.33168,0.9185 -0.48476,1.88803 -0.48476,2.90858c0,2.42382 0.99504,4.64353 2.5769,6.22539s3.80157,2.5769 6.22539,2.5769c1.07158,0 2.09214,-0.1786 3.03615,-0.53579c0.33168,-0.12757 0.66336,-0.25514 0.96953,-0.40822c-0.61233,1.17364 -1.45429,2.21971 -2.50036,3.03615z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMoon);\nexport default __webpack_public_path__ + \"static/media/moon.02520db6.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPadlockUnlocked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m21.87281,24l-12.02632,0c-1.10464,0 -2.00439,-1.009 -2.00439,-2.25l0,-10.5c0,-1.241 0.89975,-2.25 2.00439,-2.25l12.02632,0c1.10464,0 2.00439,1.009 2.00439,2.25l0,10.5c0,1.241 -0.89975,2.25 -2.00439,2.25zm-12.02632,-13.5c-0.36792,0 -0.66813,0.336 -0.66813,0.75l0,10.5c0,0.414 0.30021,0.75 0.66813,0.75l12.02632,0c0.36792,0 0.66813,-0.336 0.66813,-0.75l0,-10.5c0,-0.414 -0.30021,-0.75 -0.66813,-0.75l-12.02632,0z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m11.35526,10.5c-0.414,0 -0.75,-0.336 -0.75,-0.75l0,-3.75c0,-2.481 -2.019,-4.5 -4.5,-4.5s-4.5,2.019 -4.5,4.5l0,3.75c0,0.414 -0.336,0.75 -0.75,0.75s-0.75,-0.336 -0.75,-0.75l0,-3.75c0,-3.309 2.691,-6 6,-6s6,2.691 6,6l0,3.75c0,0.414 -0.336,0.75 -0.75,0.75z\",\n    fill: \"currentColor\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m15.7193,17c-1.103,0 -2,-0.897 -2,-2s0.897,-2 2,-2s2,0.897 2,2s-0.897,2 -2,2zm0,-2.5c-0.275,0 -0.5,0.224 -0.5,0.5s0.225,0.5 0.5,0.5s0.5,-0.224 0.5,-0.5s-0.225,-0.5 -0.5,-0.5z\",\n    fill: \"currentColor\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m15.7193,20c-0.414,0 -0.75,-0.336 -0.75,-0.75l0,-2.75c0,-0.414 0.336,-0.75 0.75,-0.75s0.75,0.336 0.75,0.75l0,2.75c0,0.414 -0.336,0.75 -0.75,0.75z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPadlockUnlocked);\nexport default __webpack_public_path__ + \"static/media/padlock-unlocked.75e5a880.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPadlock(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m18.75,24l-13.5,0c-1.24,0 -2.25,-1.009 -2.25,-2.25l0,-10.5c0,-1.241 1.01,-2.25 2.25,-2.25l13.5,0c1.24,0 2.25,1.009 2.25,2.25l0,10.5c0,1.241 -1.01,2.25 -2.25,2.25zm-13.5,-13.5c-0.413,0 -0.75,0.336 -0.75,0.75l0,10.5c0,0.414 0.337,0.75 0.75,0.75l13.5,0c0.413,0 0.75,-0.336 0.75,-0.75l0,-10.5c0,-0.414 -0.337,-0.75 -0.75,-0.75l-13.5,0z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m17.25,10.5c-0.414,0 -0.75,-0.336 -0.75,-0.75l0,-3.75c0,-2.481 -2.019,-4.5 -4.5,-4.5s-4.5,2.019 -4.5,4.5l0,3.75c0,0.414 -0.336,0.75 -0.75,0.75s-0.75,-0.336 -0.75,-0.75l0,-3.75c0,-3.309 2.691,-6 6,-6s6,2.691 6,6l0,3.75c0,0.414 -0.336,0.75 -0.75,0.75z\",\n    fill: \"currentColor\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m12,17c-1.103,0 -2,-0.897 -2,-2s0.897,-2 2,-2s2,0.897 2,2s-0.897,2 -2,2zm0,-2.5c-0.275,0 -0.5,0.224 -0.5,0.5s0.225,0.5 0.5,0.5s0.5,-0.224 0.5,-0.5s-0.225,-0.5 -0.5,-0.5z\",\n    fill: \"currentColor\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m12,20c-0.414,0 -0.75,-0.336 -0.75,-0.75l0,-2.75c0,-0.414 0.336,-0.75 0.75,-0.75s0.75,0.336 0.75,0.75l0,2.75c0,0.414 -0.336,0.75 -0.75,0.75z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPadlock);\nexport default __webpack_public_path__ + \"static/media/padlock.5326d93a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPeers(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7.6569 5.62329C7.03439 7.02356 5.63123 8 4 8C1.79086 8 0 6.20914 0 4C0 1.79086 1.79086 0 4 0C6.09134 0 7.80782 1.60496 7.98493 3.65037L12.3431 4.37673C12.9656 2.97645 14.3688 2 16 2C18.2091 2 20 3.79086 20 6C20 8.20914 18.2091 10 16 10C14.9749 10 14.04 9.61443 13.3321 8.9804L7.77815 12.6831C7.88518 12.9902 7.95583 13.3143 7.98493 13.6504L12.3431 14.3767C12.9656 12.9764 14.3688 12 16 12C18.2091 12 20 13.7909 20 16C20 18.2091 18.2091 20 16 20C13.9087 20 12.1922 18.3951 12.0151 16.3497L7.6569 15.6233C7.03439 17.0236 5.63123 18 4 18C1.79086 18 0 16.2091 0 14C0 11.7909 1.79086 10 4 10C5.02504 10 5.96002 10.3856 6.66784 11.0196L12.2218 7.3169C12.1148 7.00981 12.0442 6.68568 12.0151 6.34965L7.6569 5.62329ZM6 4C6 5.10457 5.10457 6 4 6C2.89543 6 2 5.10457 2 4C2 2.89543 2.89543 2 4 2C5.10457 2 6 2.89543 6 4ZM16 8C17.1046 8 18 7.10457 18 6C18 4.89543 17.1046 4 16 4C14.8954 4 14 4.89543 14 6C14 7.10457 14.8954 8 16 8ZM6 14C6 15.1046 5.10457 16 4 16C2.89543 16 2 15.1046 2 14C2 12.8954 2.89543 12 4 12C5.10457 12 6 12.8954 6 14ZM16 18C17.1046 18 18 17.1046 18 16C18 14.8954 17.1046 14 16 14C14.8954 14 14 14.8954 14 16C14 17.1046 14.8954 18 16 18Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPeers);\nexport default __webpack_public_path__ + \"static/media/peers.a62e2ab1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlugins(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 20,\n    viewBox: \"0 5 32 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 13V8C18 7.73478 18.1054 7.48043 18.2929 7.29289C18.4804 7.10536 18.7348 7 19 7C19.2652 7 19.5196 7.10536 19.7071 7.29289C19.8946 7.48043 20 7.73478 20 8V13C20.5304 13 21.0391 13.2107 21.4142 13.5858C21.7893 13.9609 22 14.4696 22 15V18.5C21.9999 19.7247 21.5911 20.9144 20.8385 21.8805C20.0859 22.8467 19.0324 23.5342 17.845 23.834C17.9584 24.0628 18.0114 24.3167 17.9992 24.5717C17.987 24.8267 17.9099 25.0744 17.7753 25.2913C17.6406 25.5082 17.4528 25.6871 17.2296 25.8111C17.0064 25.9352 16.7553 26.0002 16.5 26H15.5C15.2447 26.0002 14.9936 25.9352 14.7704 25.8111C14.5472 25.6871 14.3594 25.5082 14.2247 25.2913C14.0901 25.0744 14.013 24.8267 14.0008 24.5717C13.9886 24.3167 14.0416 24.0628 14.155 23.834C12.9676 23.5342 11.9141 22.8467 11.1615 21.8805C10.4089 20.9144 10.0001 19.7247 10 18.5V15C10 14.4696 10.2107 13.9609 10.5858 13.5858C10.9609 13.2107 11.4696 13 12 13V8C12 7.73478 12.1054 7.48043 12.2929 7.29289C12.4804 7.10536 12.7348 7 13 7C13.2652 7 13.5196 7.10536 13.7071 7.29289C13.8946 7.48043 14 7.73478 14 8V13H18Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlugins);\nexport default __webpack_public_path__ + \"static/media/plugins.3fb2b1e8.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSun(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m13.48664,6.42723c-0.8956,-0.8956 -2.15997,-1.4751 -3.52971,-1.4751s-2.63411,0.55316 -3.52971,1.4751c-0.8956,0.8956 -1.4751,2.15997 -1.4751,3.52971s0.5795,2.63411 1.4751,3.52971c0.8956,0.8956 2.15997,1.4751 3.52971,1.4751s2.63411,-0.55316 3.52971,-1.4751c0.8956,-0.8956 1.4751,-2.15997 1.4751,-3.52971s-0.55316,-2.63411 -1.4751,-3.52971zm-0.94828,6.11114c-0.65853,0.65853 -1.58047,1.05364 -2.58143,1.05364s-1.9229,-0.39512 -2.58143,-1.05364s-1.05364,-1.58047 -1.05364,-2.58143s0.39512,-1.9229 1.05364,-2.58143s1.58047,-1.05364 2.58143,-1.05364s1.9229,0.39512 2.58143,1.05364s1.05364,1.58047 1.05364,2.58143s-0.39512,1.9229 -1.05364,2.58143z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m19.229,9.27207l-2.02826,0c-0.36878,0 -0.68487,0.31609 -0.68487,0.68487c0,0.36878 0.31609,0.68487 0.68487,0.68487l2.02826,0c0.36878,0 0.68487,-0.31609 0.68487,-0.68487c0,-0.36878 -0.31609,-0.68487 -0.68487,-0.68487z\",\n    fill: \"currentColor\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m9.95694,16.51587c-0.36878,0 -0.68487,0.31609 -0.68487,0.68487l0,2.02826c0,0.36878 0.31609,0.68487 0.68487,0.68487c0.36878,0 0.68487,-0.31609 0.68487,-0.68487l0,-2.02826c0,-0.36878 -0.31609,-0.68487 -0.68487,-0.68487z\",\n    fill: \"currentColor\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m16.99001,16.04173l-1.44876,-1.44876c-0.23707,-0.26341 -0.68487,-0.26341 -0.94828,0s-0.26341,0.68487 0,0.94828l1.44876,1.44876c0.26341,0.26341 0.68487,0.26341 0.94828,0s0.26341,-0.68487 0,-0.94828z\",\n    fill: \"currentColor\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m9.95694,0c-0.36878,0 -0.68487,0.31609 -0.68487,0.68487l0,2.02826c0,0.36878 0.31609,0.68487 0.68487,0.68487c0.36878,0 0.68487,-0.31609 0.68487,-0.68487l0,-2.02826c0,-0.36878 -0.31609,-0.68487 -0.68487,-0.68487z\",\n    fill: \"currentColor\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m17.01635,2.92386c-0.26341,-0.26341 -0.68487,-0.26341 -0.94828,0l-1.44876,1.44876c-0.26341,0.26341 -0.26341,0.68487 0,0.94828c0.23707,0.26341 0.68487,0.26341 0.94828,0l1.44876,-1.44876c0.26341,-0.26341 0.26341,-0.68487 0,-0.94828z\",\n    fill: \"currentColor\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m2.71313,9.27207l-2.02826,0c-0.36878,0 -0.68487,0.31609 -0.68487,0.68487s0.28975,0.68487 0.68487,0.68487l2.02826,0c0.36878,0 0.68487,-0.31609 0.68487,-0.68487c0,-0.36878 -0.31609,-0.68487 -0.68487,-0.68487z\",\n    fill: \"currentColor\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29456,14.59297c-0.23707,-0.26341 -0.68487,-0.26341 -0.94828,0l-1.44876,1.44876c-0.26341,0.26341 -0.26341,0.68487 0,0.94828s0.68487,0.26341 0.94828,0l1.44876,-1.44876c0.26341,-0.26341 0.26341,-0.68487 0,-0.94828z\",\n    fill: \"currentColor\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m5.29456,4.37262l-1.44876,-1.44876c-0.26341,-0.26341 -0.68487,-0.26341 -0.94828,0s-0.26341,0.68487 0,0.94828l1.44876,1.44876c0.26341,0.26341 0.68487,0.26341 0.94828,0s0.26341,-0.68487 0,-0.94828z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSun);\nexport default __webpack_public_path__ + \"static/media/sun.b34d19d4.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgVisualizer(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.694333 17.3063C-1.21567 15.3943 0.952333 10.1263 5.53933 5.53935C10.1263 0.952348 15.3943 -1.21665 17.3063 0.694348C19.2163 2.60635 17.0483 7.87435 12.4613 12.4613C7.87433 17.0483 2.60633 19.2173 0.694333 17.3063ZM2.08033 15.9203C2.89533 16.7363 7.18233 14.9703 11.0773 11.0753C14.9723 7.18035 16.7373 2.89335 15.9223 2.07835C15.1073 1.26235 10.8203 3.02835 6.92533 6.92335C3.03033 10.8183 1.26533 15.1053 2.08033 15.9203ZM5.54033 12.4603C0.952333 7.87435 -1.21667 2.60635 0.694333 0.694348C2.60633 -1.21565 7.87433 0.952348 12.4613 5.53935C17.0483 10.1263 19.2173 15.3943 17.3063 17.3063C15.3943 19.2163 10.1263 17.0483 5.53933 12.4613L5.54033 12.4603ZM6.92533 11.0753C10.8203 14.9703 15.1073 16.7353 15.9223 15.9203C16.7383 15.1053 14.9723 10.8183 11.0773 6.92335C7.18233 3.02835 2.89533 1.26335 2.08033 2.07835C1.26433 2.89335 3.03033 7.18035 6.92533 11.0753ZM9.00033 11.0003C8.4699 11.0003 7.96119 10.7896 7.58612 10.4146C7.21105 10.0395 7.00033 9.53078 7.00033 9.00035C7.00033 8.46992 7.21105 7.96121 7.58612 7.58613C7.96119 7.21106 8.4699 7.00035 9.00033 7.00035C9.53077 7.00035 10.0395 7.21106 10.4145 7.58613C10.7896 7.96121 11.0003 8.46992 11.0003 9.00035C11.0003 9.53078 10.7896 10.0395 10.4145 10.4146C10.0395 10.7896 9.53077 11.0003 9.00033 11.0003Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgVisualizer);\nexport default __webpack_public_path__ + \"static/media/visualizer.66663d33.svg\";\nexport { ForwardRef as ReactComponent };","export enum WebSocketTopic {\n    SyncStatus = 0,\n    PublicNodeStatus = 1,\n    NodeStatus = 2,\n    BPSMetrics = 3,\n    Milestone = 4,\n    PeerMetric = 5,\n    ConfirmedMsMetrics = 6,\n    Vertex = 7,\n    SolidInfo = 8,\n    ConfirmedInfo = 9,\n    MilestoneInfo = 10,\n    TipInfo = 11,\n    DBSizeMetric = 12,\n}\n","/**\n * Class to manage event aggregation.\n */\nexport class EventAggregator {\n    /**\n     * The stored subscriptions.\n     */\n    private static readonly _subscriptions: {\n        [eventName: string]: {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            [subscriberId: string]: (data: any) => void;\n        };\n    } = {};\n\n    /**\n     * Subscribe to an event.\n     * @param eventName The name of the event to subscribe to.\n     * @param subscriberId The id of the subscriber.\n     * @param handler The handle to call on a publish.\n     */\n    public static subscribe(\n        eventName: string,\n        subscriberId: string,\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        handler: (data: any) => void | Promise<void>): void {\n        EventAggregator._subscriptions[eventName] = EventAggregator._subscriptions[eventName] || {};\n        EventAggregator._subscriptions[eventName][subscriberId] = handler;\n    }\n\n    /**\n     * Unsubscribe from an event.\n     * @param eventName The name of the event to subscribe to.\n     * @param subscriberId The id of the subscriber.\n     */\n    public static unsubscribe(eventName: string, subscriberId: string): void {\n        if (EventAggregator._subscriptions[eventName]) {\n            delete EventAggregator._subscriptions[eventName][subscriberId];\n        }\n    }\n\n    /**\n     * Publish the event.\n     * @param eventName The name of the event to publish.\n     * @param data The data to publish with the event.\n     */\n    public static publish(eventName: string, data?: unknown): void {\n        setTimeout(\n            () => {\n                if (EventAggregator._subscriptions[eventName]) {\n                    for (const subscriberId in EventAggregator._subscriptions[eventName]) {\n                        EventAggregator._subscriptions[eventName][subscriberId](data);\n                    }\n                }\n            },\n            0);\n    }\n}\n","/* eslint-disable @typescript-eslint/no-require-imports */\n/* eslint-disable @typescript-eslint/no-unsafe-return */\nimport { IBrandConfiguration } from \"../models/IBrandConfiguration\";\n\nexport class BrandHelper {\n    /**\n     * The brand id from the environment.\n     */\n    private static readonly _brandId?: string = process.env.REACT_APP_BRAND_ID;\n\n    /**\n     * The brand configuration.\n     */\n    private static _brandConfiguration: IBrandConfiguration;\n\n    /**\n     * Initialize the branding.\n     * @returns The brand configuration.\n     */\n    public static initialize(): IBrandConfiguration | undefined {\n        if (BrandHelper._brandId) {\n            BrandHelper._brandConfiguration = require(`../assets/${BrandHelper._brandId}/brand.json`);\n            document.title = `${BrandHelper._brandConfiguration.name} Dashboard`;\n\n            return BrandHelper._brandConfiguration;\n        }\n    }\n\n    /**\n     * Get the configuration.\n     * @returns The configuration.\n     */\n    public static getConfiguration(): IBrandConfiguration {\n        return BrandHelper._brandConfiguration;\n    }\n\n    /**\n     * Get the logo for the navigation panel.\n     * @param theme The current theme.\n     * @returns The navigation panel logo.\n     */\n    public static async getLogoNavigation(theme: string): Promise<string> {\n        return (await import(`../assets/${BrandHelper._brandId}/themes/${theme}/logo-navigation.svg`)).default;\n    }\n\n    /**\n     * Get the logo for the home page banner.\n     * @param theme The current theme.\n     * @returns The banner panel logo.\n     */\n    public static async getBanner(theme: string): Promise<string> {\n        return (await import(`../assets/${BrandHelper._brandId}/themes/${theme}/banner.svg`)).default;\n    }\n}\n","import { Component } from \"react\";\n\n/**\n * Base component for component with async requests.\n */\nclass AsyncComponent<P, S = unknown> extends Component<P, S> {\n    /**\n     * Is the component mounted.\n     */\n    protected _isMounted?: boolean;\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        this._isMounted = true;\n    }\n\n    /**\n     * The component will unmount so update flag.\n     */\n    public componentWillUnmount(): void {\n        this._isMounted = false;\n    }\n\n    /**\n     * Set the state if the component is still mounted.\n     * @param state The state to set.\n     * @param callback The callback for the setState.\n     */\n    public setState<K extends keyof S>(\n        state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null)) | (Pick<S, K> | S | null),\n        callback?: () => void\n    ): void {\n        if (this._isMounted) {\n            super.setState(state, callback);\n        }\n    }\n}\n\nexport default AsyncComponent;\n","import { Component, ReactNode } from \"react\";\nimport { BreakpointProps } from \"./BreakpointProps\";\nimport { BreakpointState } from \"./BreakpointState\";\n\n/**\n * Component to show/hide children based on media size breakpoints.\n */\nclass Breakpoint extends Component<BreakpointProps, BreakpointState> {\n    /**\n     * The size for the breakpoints.\n     */\n    private static readonly SIZE_BREAKPOINTS = {\n        \"phone\": 480,\n        \"tablet\": 768,\n        \"desktop\": 1024\n    };\n\n    /**\n     * The resize method\n     */\n    private readonly _resize: () => void;\n\n    /**\n     * Create a new instance of Breakpoint.\n     * @param props The props.\n     */\n    constructor(props: BreakpointProps) {\n        super(props);\n\n        this._resize = () => this.resize();\n\n        this.state = {\n            isVisible: this.calculateVisible()\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        window.addEventListener(\"resize\", this._resize);\n    }\n\n    /**\n     * The component will unmount so update flag.\n     */\n    public componentWillUnmount(): void {\n        window.removeEventListener(\"resize\", this._resize);\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return this.state.isVisible\n            ? this.props.children\n            : null;\n    }\n\n    /**\n     * Handle the window resize.\n     */\n    private resize(): void {\n        const isVisible = this.calculateVisible();\n\n        this.setState({\n            isVisible\n        });\n    }\n\n    /**\n     * Calculate if the child components should be visible.\n     * @returns True if the children should be visible.\n     */\n    private calculateVisible(): boolean {\n        const windowSize = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n        return this.props.aboveBelow === \"above\"\n            ? windowSize >= Breakpoint.SIZE_BREAKPOINTS[this.props.size]\n            : windowSize < Breakpoint.SIZE_BREAKPOINTS[this.props.size];\n    }\n}\n\nexport default Breakpoint;\n","import { Blake2b } from \"@iota/crypto.js\";\nimport { INodeInfoBaseToken, UnitsHelper } from \"@iota/iota.js\";\nimport { Converter, HexHelper } from \"@iota/util.js\";\nimport bigInt from \"big-integer\";\nimport humanize from \"humanize-duration\";\nimport moment from \"moment\";\nimport { ServiceFactory } from \"../factories/serviceFactory\";\nimport { NodeConfigService } from \"../services/nodeConfigService\";\n\n/**\n * Class to help formatting values.\n */\nexport class FormatHelper {\n    /**\n     * The singleton instance.\n     */\n    private static instance: FormatHelper;\n\n    /**\n     * The base token of the node.\n     */\n    private readonly _baseToken: INodeInfoBaseToken;\n\n    /**\n     * Create a new instance FormatHelper.\n     */\n    private constructor() {\n        const nodeConfigService = ServiceFactory.get<NodeConfigService>(\"node-config\");\n        this._baseToken = nodeConfigService.getBaseToken();\n    }\n\n    /**\n     * Get the FormatHelper singleton instance.\n     * @returns The FormatHelper instance.\n     */\n    public static getInstance(): FormatHelper {\n        if (!FormatHelper.instance) {\n            FormatHelper.instance = new FormatHelper();\n        }\n\n        return FormatHelper.instance;\n    }\n\n    /**\n     * Format the duration as human readable.\n     * @param milliseconds The milliseconds total for the duration.\n     * @returns The formatted duration.\n     */\n    public static duration(milliseconds: number): string {\n        if (milliseconds < 3600000) {\n            return humanize(milliseconds, { largest: 1, round: true });\n        }\n\n        return humanize(milliseconds, { largest: 2, round: true });\n    }\n\n    /**\n     * Format the bytes to a human readable size. (SI standard)\n     * @param bytes The bytes to format.\n     * @param decimalPlaces The number of decimal places.\n     * @returns The formatted string.\n     */\n    public static size(bytes: number, decimalPlaces: number = 2): string {\n        if (!bytes) {\n            return \"0 bytes\";\n        }\n\n        const index = Math.floor(Math.log(bytes) / Math.log(1000));\n        const units = [\"bytes\", \"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n\n        const value = Number((bytes / Math.pow(1000, index)).toFixed(decimalPlaces));\n        let unit = units[index];\n\n        if (unit === \"bytes\" && value === 1) {\n            unit = \"byte\";\n        }\n\n        if (unit === undefined) {\n            return bytes.toFixed(decimalPlaces).toString();\n        }\n\n        return `${value} ${unit}`;\n    }\n\n    /**\n     * Format the bytes to a human readable size. (IEC standard)\n     * @param bytes The bytes to format.\n     * @param decimalPlaces The number of decimal places.\n     * @returns The formatted string.\n     */\n     public static iSize(bytes: number, decimalPlaces: number = 2): string {\n        if (!bytes) {\n            return \"0 bytes\";\n        }\n\n        const index = Math.floor(Math.log(bytes) / Math.log(1024));\n        const units = [\"bytes\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"];\n\n        const value = Number((bytes / Math.pow(1024, index)).toFixed(decimalPlaces));\n        let unit = units[index];\n\n        if (unit === \"bytes\" && value === 1) {\n            unit = \"byte\";\n        }\n\n        if (unit === undefined) {\n            return bytes.toFixed(decimalPlaces).toString();\n        }\n\n        return `${value} ${unit}`;\n    }\n\n    /**\n     * Format the date.\n     * @param valueInMs The value to format in milliseconds.\n     * @param human Humanize the date.\n     * @returns The formated value.\n     */\n    public static date(valueInMs: number, human: boolean = true): string {\n        valueInMs = FormatHelper.milliseconds(valueInMs);\n\n        const timeMoment = moment(valueInMs);\n        let formatted = timeMoment.format(\"LLLL\");\n\n        if (human) {\n            const postDate = valueInMs > Date.now() ? \"in the future\" : \"ago\";\n\n            formatted += ` - ${moment.duration(moment().diff(timeMoment)).humanize()} ${postDate}`;\n        }\n        return formatted;\n    }\n\n    /**\n     * Format the date in short format.\n     * @param valueInMs The value to format in milliseconds.\n     * @returns The formated value.\n     */\n    public static dateShort(valueInMs: number): string {\n        return moment(FormatHelper.milliseconds(valueInMs)).format(\"YYYY-MM-DD HH:mm\");\n    }\n\n    /**\n     * Check the value is in ms if not scale accordingly.\n     * @param valueInMs The value to format in milliseconds.\n     * @returns The updated value.\n     */\n    public static milliseconds(valueInMs: number): number {\n        const asStringLength = valueInMs.toString().length;\n\n        // If there are less than 13 digits this must be in seconds\n        // https://stackoverflow.com/questions/23929145/how-to-test-if-a-given-time-stamp-is-in-seconds-or-milliseconds\n        if (asStringLength < 13) {\n            return valueInMs * 1000;\n        }\n        return valueInMs;\n    }\n\n    /**\n     * Check if id is all 0 because it hasn't moved and compute it as a hash of the outputId.\n     * @param id The id to resolve.\n     * @param outputId The output id to hash if nft/alias id is all 0.\n     * @returns The correct id.\n     */\n    public static resolveId(id: string, outputId: string): string {\n        return !HexHelper.toBigInt256(id).eq(bigInt.zero)\n            ? id\n            : HexHelper.addPrefix(Converter.bytesToHex(\n                Blake2b.sum256(Converter.hexToBytes(HexHelper.stripPrefix(outputId)))\n            ));\n    }\n\n    /**\n     * Format amount.\n     * @param value The value to format.\n     * @param formatFull Return full format.\n     * @param decimalPlaces The number of decimal places.\n     * @returns The formatted amount.\n     */\n    public amount(value: number, formatFull: boolean, decimalPlaces: number = 2): string {\n        if (formatFull) {\n            return `${value} ${this._baseToken.subunit ? this._baseToken.subunit : this._baseToken.unit}`;\n        }\n        const baseTokeValue = value / Math.pow(10, this._baseToken.decimals);\n        const amount = this._baseToken.useMetricPrefix\n                    ? UnitsHelper.formatBest(baseTokeValue)\n                    : `${Number.parseFloat(baseTokeValue.toFixed(decimalPlaces))} `;\n\n        return `${amount}${this._baseToken.unit}`;\n    }\n}\n","var _circle, _circle2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHealthBad(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    opacity: 0.4,\n    cx: 8,\n    cy: 8,\n    r: 8,\n    fill: \"#FF6755\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8,\n    cy: 8,\n    r: 4,\n    fill: \"#FF6755\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHealthBad);\nexport default __webpack_public_path__ + \"static/media/health-bad.f6b3a99f.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _circle2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHealthGood(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    opacity: 0.4,\n    cx: 8,\n    cy: 8,\n    r: 8,\n    fill: \"#61E884\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8,\n    cy: 8,\n    r: 4,\n    fill: \"#61E884\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHealthGood);\nexport default __webpack_public_path__ + \"static/media/health-good.c06d31b2.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 19,\n    height: 19,\n    viewBox: \"0 0 19 19\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.0005 14.0005C8.78843 14.0005 9.56865 13.8453 10.2966 13.5438C11.0246 13.2423 11.686 12.8003 12.2431 12.2431C12.8003 11.686 13.2423 11.0246 13.5438 10.2966C13.8453 9.56865 14.0005 8.78843 14.0005 8.0005C14.0005 7.21257 13.8453 6.43236 13.5438 5.7044C13.2423 4.97645 12.8003 4.31501 12.2431 3.75786C11.686 3.20071 11.0246 2.75875 10.2966 2.45723C9.56865 2.1557 8.78843 2.0005 8.0005 2.0005C6.4092 2.0005 4.88308 2.63264 3.75786 3.75786C2.63264 4.88308 2.0005 6.4092 2.0005 8.0005C2.0005 9.5918 2.63264 11.1179 3.75786 12.2431C4.88308 13.3684 6.4092 14.0005 8.0005 14.0005ZM14.3205 12.9065L17.9005 16.4865C17.9959 16.5788 18.072 16.6892 18.1244 16.8113C18.1767 16.9333 18.2042 17.0645 18.2052 17.1973C18.2063 17.3301 18.1809 17.4618 18.1305 17.5846C18.0802 17.7075 18.0058 17.8191 17.9119 17.9129C17.8179 18.0067 17.7062 18.0809 17.5833 18.1311C17.4604 18.1813 17.3287 18.2065 17.1959 18.2052C17.0631 18.204 16.9319 18.1763 16.8099 18.1238C16.688 18.0713 16.5777 17.9951 16.4855 17.8995L12.9055 14.3195C11.298 15.5674 9.2753 16.1557 7.24926 15.9647C5.22322 15.7737 3.34611 14.8178 2.00005 13.2916C0.654 11.7653 -0.0598121 9.78345 0.00392902 7.74943C0.0676701 5.7154 0.904173 3.78213 2.34315 2.34315C3.78213 0.904173 5.7154 0.0676701 7.74943 0.00392902C9.78345 -0.0598121 11.7653 0.654 13.2916 2.00005C14.8178 3.34611 15.7737 5.22322 15.9647 7.24926C16.1557 9.2753 15.5674 11.298 14.3195 12.9055L14.3205 12.9065Z\",\n    fill: \"#9AADCE\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.806d14fa.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ReactComponent as HealthBadIcon } from \"../../../assets/health-bad.svg\";\nimport { ReactComponent as HealthGoodIcon } from \"../../../assets/health-good.svg\";\nimport \"./HealthIndicator.scss\";\nimport { HealthIndicatorProps } from \"./HealthIndicatorProps\";\n\n/**\n * Health Indicator.\n */\nclass HealthIndicator extends Component<HealthIndicatorProps> {\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className={classNames(\"health-indicator\", this.props.className)}>\n                {this.props.healthy ? <HealthGoodIcon /> : <HealthBadIcon />}\n                <span className=\"label\">{this.props.label}</span>\n            </div>\n        );\n    }\n}\n\nexport default HealthIndicator;\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport \"./MicroGraph.scss\";\nimport { MicroGraphProps } from \"./MicroGraphProps\";\nimport { MicroGraphState } from \"./MicroGraphState\";\n\n/**\n * Micro Graph.\n */\nclass MicroGraph extends Component<MicroGraphProps, MicroGraphState> {\n    /**\n     * The graph width.\n     */\n    private readonly _graphWidth: number;\n\n    /**\n     * The graph height.\n     */\n    private readonly _graphHeight: number;\n\n    /**\n     * Create a new instance of MicroGraph.\n     * @param props The props.\n     */\n    constructor(props: MicroGraphProps) {\n        super(props);\n\n        this._graphWidth = this.props.graphWidth ?? 80;\n        this._graphHeight = this.props.graphHeight ?? 10;\n\n        this.state = {\n            ...this.calculateGraph()\n        };\n    }\n\n    /**\n     * The component updated.\n     * @param prevProps The previous properties.\n     */\n    public componentDidUpdate(prevProps: MicroGraphProps): void {\n        if (this.props.values !== prevProps.values) {\n            this.setState(this.calculateGraph());\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className={classNames(\"micro-graph\", this.props.className)}>\n                <span className=\"label\">{this.props.label}</span>\n                <span className=\"value\">{this.props.value}</span>\n                <span className=\"canvas\">\n                    <svg\n                        width={this._graphWidth}\n                        height={this._graphHeight}\n                    >\n                        {this.state.graphPoints && this.state.graphPoints.length > 0 && (\n                            <path\n                                d={this.state.graphPoints.map(g => `${g.type} ${g.x} ${g.y}`).join(\" \")}\n                                stroke=\"currentColor\"\n                                strokeWidth=\"2\"\n                                fill=\"none\"\n                            />\n                        )}\n                        {this.state.circle && this.state.circle.x >= 0 && (\n                            <circle\n                                cx={this.state.circle.x}\n                                cy={this.state.circle.y}\n                                r=\"3\"\n                                fill=\"currentColor\"\n                            />\n                        )}\n                    </svg>\n                </span>\n            </div>\n        );\n    }\n\n    /**\n     * Calculate the graph points.\n     * @returns The graph points.\n     */\n    private calculateGraph(): {\n        graphPoints: {\n            type: string;\n            x: number;\n            y: number;\n        }[];\n        circle: {\n            x: number;\n            y: number;\n        };\n    } {\n        const graphPointCount = this._graphWidth / 2;\n\n        const lastItems = this.props.values.slice(-graphPointCount);\n        let min;\n        let max;\n        let circleX = -1;\n        let circleY = -1;\n\n        for (let i = 0; i < lastItems.length; i++) {\n            if (min === undefined || lastItems[i] < min) {\n                min = lastItems[i];\n            }\n            if (max === undefined || lastItems[i] > max) {\n                max = lastItems[i];\n            }\n        }\n\n        const graphPoints = [];\n        if (max !== undefined && min !== undefined) {\n            const range = max - min;\n            const scale = range === 0 ? 1 : range / this._graphHeight;\n\n            let lastY = (lastItems[0] - min) / scale;\n            graphPoints.push({\n                type: \"M\",\n                x: 0,\n                y: this._graphHeight - lastY\n            });\n\n            const xIncrement = (graphPointCount / lastItems.length) * 2;\n            for (let i = 1; i < lastItems.length; i++) {\n                const y = (lastItems[i] - min) / scale;\n                graphPoints.push({\n                    type: \"l\",\n                    x: xIncrement,\n                    y: (y - lastY) * -1\n                });\n                lastY = y;\n            }\n\n            circleX = (lastItems.length - 1) * xIncrement;\n            circleY = 10 - lastY;\n        }\n\n        return {\n            graphPoints,\n            circle: { x: circleX, y: circleY }\n        };\n    }\n}\n\nexport default MicroGraph;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgConfirmation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 20 20\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.6569 5.62329C7.03439 7.02356 5.63123 8 4 8C1.79086 8 0 6.20914 0 4C0 1.79086 1.79086 0 4 0C6.09134 0 7.80782 1.60496 7.98493 3.65037L12.3431 4.37673C12.9656 2.97645 14.3688 2 16 2C18.2091 2 20 3.79086 20 6C20 8.20914 18.2091 10 16 10C14.9749 10 14.04 9.61443 13.3321 8.9804L7.77815 12.6831C7.88518 12.9902 7.95583 13.3143 7.98493 13.6504L12.3431 14.3767C12.9656 12.9764 14.3688 12 16 12C18.2091 12 20 13.7909 20 16C20 18.2091 18.2091 20 16 20C13.9087 20 12.1922 18.3951 12.0151 16.3497L7.6569 15.6233C7.03439 17.0236 5.63123 18 4 18C1.79086 18 0 16.2091 0 14C0 11.7909 1.79086 10 4 10C5.02504 10 5.96002 10.3856 6.66784 11.0196L12.2218 7.3169C12.1148 7.00981 12.0442 6.68568 12.0151 6.34965L7.6569 5.62329Z\",\n    fill: \"#666AF6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgConfirmation);\nexport default __webpack_public_path__ + \"static/media/confirmation.11145892.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ReactComponent as SearchIcon } from \"../../../assets/search.svg\";\nimport \"./SearchInput.scss\";\nimport { SearchInputProps } from \"./SearchInputProps\";\nimport { SearchInputState } from \"./SearchInputState\";\n\n/**\n * Search Input panel.\n */\nclass SearchInput extends Component<SearchInputProps, SearchInputState> {\n    /**\n     * Create a new instance of SearchInput.\n     * @param props The properties.\n     */\n    constructor(props: SearchInputProps) {\n        super(props);\n\n        this.state = {\n            query: \"\"\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div\n                className={classNames(\n                    \"search-input\",\n                    { \"search-input--compact\": this.props.compact },\n                    this.props.className\n                )}\n            >\n                <button\n                    type=\"button\"\n                    className=\"icon-button\"\n                    onClick={() => this.props.onSearch(this.state.query)}\n                >\n                    <SearchIcon />\n                </button>\n                <input\n                    type=\"text\"\n                    value={this.state.query}\n                    onChange={e => this.setState({ query: e.target.value })}\n                    onKeyDown={e => {\n                        if (e.key === \"Enter\") {\n                            this.props.onSearch(this.state.query);\n                        }\n                    }}\n                    placeholder={\n                        this.props.compact\n                            ? \"Search the Tangle\"\n                            : \"Search blocks, addresses, outputs, milestones, indexes\"\n                    }\n                />\n            </div>\n        );\n    }\n}\n\nexport default SearchInput;\n","import React, { ReactNode } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { IBpsMetrics } from \"../../../models/websocket/IBpsMetrics\";\nimport { IDBSizeMetric } from \"../../../models/websocket/IDBSizeMetric\";\nimport { INodeStatus } from \"../../../models/websocket/INodeStatus\";\nimport { IPublicNodeStatus } from \"../../../models/websocket/IPublicNodeStatus\";\nimport { WebSocketTopic } from \"../../../models/websocket/webSocketTopic\";\nimport { AuthService } from \"../../../services/authService\";\nimport { EventAggregator } from \"../../../services/eventAggregator\";\nimport { MetricsService } from \"../../../services/metricsService\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport AsyncComponent from \"./AsyncComponent\";\nimport Breakpoint from \"./Breakpoint\";\nimport \"./Header.scss\";\nimport { HeaderProps } from \"./HeaderProps\";\nimport { HeaderState } from \"./HeaderState\";\nimport HealthIndicator from \"./HealthIndicator\";\nimport MicroGraph from \"./MicroGraph\";\nimport SearchInput from \"./SearchInput\";\n\n/**\n * Header panel.\n */\nclass Header extends AsyncComponent<RouteComponentProps & HeaderProps, HeaderState> {\n    /**\n     * The auth service.\n     */\n    private readonly _authService: AuthService;\n\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The node status subscription id.\n     */\n    private _nodeStatusSubscription?: string;\n\n    /**\n     * The public node status subscription id.\n     */\n    private _publicNodeStatusSubscription?: string;\n\n    /**\n     * The database size metrics subscription id.\n     */\n    private _databaseSizeSubscription?: string;\n\n    /**\n     * The bps metrics subscription id.\n     */\n    private _bpsMetricsSubscription?: string;\n\n    /**\n     * Create a new instance of Header.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps & HeaderProps) {\n        super(props);\n\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n        this._authService = ServiceFactory.get<AuthService>(\"auth\");\n\n        this.state = {\n            syncHealth: false,\n            nodeHealth: false,\n            bps: \"-\",\n            bpsValues: [],\n            memorySizeFormatted: \"-\",\n            memorySize: [],\n            dbLedgerSizeFormatted: \"-\",\n            dbLedgerSize: [],\n            dbTangleSizeFormatted: \"-\",\n            dbTangleSize: [],\n            isLoggedIn: Boolean(this._authService.isLoggedIn()),\n            online: false\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        super.componentDidMount();\n\n        EventAggregator.subscribe(\"auth-state\", \"header\", isLoggedIn => {\n            this.setState({\n                isLoggedIn\n            });\n        });\n\n        EventAggregator.subscribe(\"online\", \"header\", online => {\n            if (online !== this.state.online) {\n                this.setState({\n                    online\n                });\n            }\n        });\n\n        this._publicNodeStatusSubscription = this._metricsService.subscribe<IPublicNodeStatus>(\n            WebSocketTopic.PublicNodeStatus,\n            data => {\n                if (data) {\n                    if (!this.state.online) {\n                        this.setState({\n                            online: true\n                        });\n                    }\n                    if (data.isHealthy !== this.state.nodeHealth) {\n                        this.setState({ nodeHealth: data.isHealthy });\n                    }\n                    if (data.isSynced !== this.state.syncHealth) {\n                        this.setState({ syncHealth: data.isSynced });\n                    }\n                }\n            });\n\n        this._nodeStatusSubscription = this._metricsService.subscribe<INodeStatus>(\n            WebSocketTopic.NodeStatus,\n            data => {\n                if (data) {\n                    const memorySizeFormatted = FormatHelper.iSize(data.memUsage, 1);\n\n                    if (memorySizeFormatted !== this.state.memorySizeFormatted) {\n                        this.setState({ memorySizeFormatted });\n                    }\n                }\n            },\n            allData => {\n                const nonNull = allData.filter(d => d !== undefined && d !== null);\n                this.setState({\n                    memorySize: nonNull\n                        .map(d => d.memUsage)\n                });\n            });\n\n        this._databaseSizeSubscription = this._metricsService.subscribe<IDBSizeMetric>(\n            WebSocketTopic.DBSizeMetric,\n            data => {\n                if (data) {\n                    const dbLedgerSizeFormatted = FormatHelper.size(data.utxo);\n\n                    if (dbLedgerSizeFormatted !== this.state.dbLedgerSizeFormatted) {\n                        this.setState({ dbLedgerSizeFormatted });\n                    }\n\n                    const dbTangleSizeFormatted = FormatHelper.size(data.tangle);\n\n                    if (dbTangleSizeFormatted !== this.state.dbTangleSizeFormatted) {\n                        this.setState({ dbTangleSizeFormatted });\n                    }\n                }\n            },\n            allData => {\n                const nonNull = allData.filter(d => d !== undefined && d !== null);\n\n                const dbLedgerSizeValues = nonNull\n                    .map(d => d.utxo);\n\n                this.setState({ dbLedgerSize: dbLedgerSizeValues });\n\n                const dbTangleSizeValues = nonNull\n                    .map(d => d.tangle);\n\n                this.setState({ dbTangleSize: dbTangleSizeValues });\n            });\n\n        this._bpsMetricsSubscription = this._metricsService.subscribe<IBpsMetrics>(\n            WebSocketTopic.BPSMetrics,\n            data => {\n                if (data) {\n                    const bpsValues = this.state.bpsValues.slice(-40);\n                    bpsValues.push(data.new);\n\n                    const bpsFormatted = bpsValues[bpsValues.length - 1].toString();\n\n                    if (bpsFormatted !== this.state.bps) {\n                        this.setState({ bps: bpsFormatted });\n                    }\n                    this.setState({ bpsValues });\n                }\n            });\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n\n        EventAggregator.unsubscribe(\"auth-state\", \"header\");\n        EventAggregator.unsubscribe(\"online\", \"header\");\n\n        if (this._publicNodeStatusSubscription) {\n            this._metricsService.unsubscribe(this._publicNodeStatusSubscription);\n            this._publicNodeStatusSubscription = undefined;\n        }\n\n        if (this._nodeStatusSubscription) {\n            this._metricsService.unsubscribe(this._nodeStatusSubscription);\n            this._nodeStatusSubscription = undefined;\n        }\n\n        if (this._databaseSizeSubscription) {\n            this._metricsService.unsubscribe(this._databaseSizeSubscription);\n            this._databaseSizeSubscription = undefined;\n        }\n\n        if (this._bpsMetricsSubscription) {\n            this._metricsService.unsubscribe(this._bpsMetricsSubscription);\n            this._bpsMetricsSubscription = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <header className=\"header\">\n                <div className=\"content\">\n                    {this.state.online && (\n                        <React.Fragment>\n                            {this.props.children}\n                            <SearchInput\n                                compact={true}\n                                onSearch={query => this.props.history.push(`/explorer/search/${query}`)}\n                                className=\"child child-fill\"\n                            />\n                            <Breakpoint size=\"tablet\" aboveBelow=\"above\">\n                                <HealthIndicator\n                                    label=\"Health\"\n                                    healthy={this.state.nodeHealth}\n                                    className=\"child\"\n                                />\n                                <HealthIndicator\n                                    label=\"Sync\"\n                                    healthy={this.state.syncHealth}\n                                    className=\"child\"\n                                />\n                            </Breakpoint>\n                            <Breakpoint size=\"desktop\" aboveBelow=\"above\">\n                                <MicroGraph\n                                    label=\"BPS\"\n                                    value={this.state.bps}\n                                    values={this.state.bpsValues}\n                                    className=\"child\"\n                                />\n                                {this.state.isLoggedIn && (\n                                    <React.Fragment>\n                                        <MicroGraph\n                                            label=\"Ledger db\"\n                                            value={this.state.dbLedgerSizeFormatted}\n                                            values={this.state.dbLedgerSize}\n                                            className=\"child\"\n                                        />\n                                        <MicroGraph\n                                            label=\"Tangle db\"\n                                            value={this.state.dbTangleSizeFormatted}\n                                            values={this.state.dbTangleSize}\n                                            className=\"child\"\n                                        />\n                                        <MicroGraph\n                                            label=\"Memory\"\n                                            value={this.state.memorySizeFormatted}\n                                            values={this.state.memorySize}\n                                            className=\"child\"\n                                        />\n                                    </React.Fragment>\n                                )}\n                            </Breakpoint>\n                        </React.Fragment>\n                    )}\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default withRouter(Header);\n","import React, { Component, ReactNode } from \"react\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { EventAggregator } from \"../../../services/eventAggregator\";\nimport { ThemeService } from \"../../../services/themeService\";\nimport { BrandHelper } from \"../../../utils/brandHelper\";\nimport \"./NavMenu.scss\";\nimport { NavMenuProps } from \"./NavMenuProps\";\nimport { NavMenuState } from \"./NavMenuState\";\n\n/**\n * Navigation menu.\n */\nclass NavMenu extends Component<RouteComponentProps & NavMenuProps, NavMenuState> {\n    /**\n     * The theme service.\n     */\n    private readonly _themeService: ThemeService;\n\n    /**\n     * Create a new instance of NavMenu;\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps & NavMenuProps) {\n        super(props);\n\n        this._themeService = ServiceFactory.get<ThemeService>(\"theme\");\n\n        this.state = {\n            logoSrc: \"\",\n            isOpen: false\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        this.setState({\n            logoSrc: await BrandHelper.getLogoNavigation(this._themeService.get())\n        });\n\n        EventAggregator.subscribe(\"theme\", \"navmenu\", async (theme: string) => {\n            this.setState({\n                logoSrc: await BrandHelper.getLogoNavigation(theme)\n            });\n        });\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        EventAggregator.unsubscribe(\"theme\", \"navmenu\");\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div\n                className=\"nav-menu\"\n                onClick={() => this.state.isOpen && this.setState({ isOpen: false })}\n            >\n                <button\n                    type=\"button\"\n                    onClick={() => this.setState({ isOpen: !this.state.isOpen })}\n                >\n                    <img src={this.state.logoSrc} className=\"logo\" />\n                </button>\n                {this.state.isOpen && (\n                    <div className=\"popup-container\">\n                        {this.props.children}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NavMenu);\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { EventAggregator } from \"../../../services/eventAggregator\";\nimport { ThemeService } from \"../../../services/themeService\";\nimport { BrandHelper } from \"../../../utils/brandHelper\";\nimport \"./NavPanel.scss\";\nimport { NavPanelProps } from \"./NavPanelProps\";\nimport { NavPanelState } from \"./NavPanelState\";\n\n/**\n * Navigation panel.\n */\nclass NavPanel extends Component<RouteComponentProps & NavPanelProps, NavPanelState> {\n    /**\n     * The theme service.\n     */\n    private readonly _themeService: ThemeService;\n\n    /**\n     * Create a new instance of NavPanel;\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps & NavPanelProps) {\n        super(props);\n\n        this._themeService = ServiceFactory.get<ThemeService>(\"theme\");\n\n        this.state = {\n            logoSrc: \"\"\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        this.setState({\n            logoSrc: await BrandHelper.getLogoNavigation(this._themeService.get())\n        });\n\n        EventAggregator.subscribe(\"theme\", \"navpanel\", async (theme: string) => {\n            this.setState({\n                logoSrc: await BrandHelper.getLogoNavigation(theme)\n            });\n        });\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        EventAggregator.unsubscribe(\"theme\", \"navpanel\");\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className={classNames(\"nav-panel\", { \"full-width\": this.props.fullWidth })}>\n                <Link\n                    to=\"/\"\n                >\n                    <img src={this.state.logoSrc} className=\"logo\" />\n                </Link>\n\n                <div className=\"nav-panel-middle\">\n                    {this.props.middle.map(b => (\n                        <React.Fragment key={b.label}>\n                            {!b.hidden && b.route && (\n                                <Link\n                                    to={b.route}\n                                    className={classNames(\n                                        \"nav-panel--button\",\n                                        {\n                                            \"nav-panel--button__selected\":\n                                                (b.route.length > 1 &&\n                                                    this.props.location.pathname.startsWith(b.route)) ||\n                                                b.route === this.props.location.pathname\n                                        }\n                                    )}\n                                >\n                                    {b.icon}\n                                    <span className=\"nav-panel-button-label\">{b.label}</span>\n                                </Link>\n                            )}\n                            {!b.hidden && b.function && (\n                                <button\n                                    type=\"button\"\n                                    onClick={() => b.function?.()}\n                                    className={classNames(\n                                        \"nav-panel--button\"\n                                    )}\n                                >\n                                    {b.icon}\n                                    <span className=\"nav-panel-button-label\">{b.label}</span>\n                                </button>\n                            )}\n                        </React.Fragment>\n                    ))}\n                </div>\n\n                <div className=\"nav-panel-end\">\n                    {this.props.end.map(b => (\n                        <React.Fragment key={b.label}>\n                            {!b.hidden && b.route && (\n                                <Link\n                                    to={b.route}\n                                    className={classNames(\n                                        \"nav-panel--button\",\n                                        {\n                                            \"nav-panel--button__selected\":\n                                                (b.route.length > 1 &&\n                                                    this.props.location.pathname.startsWith(b.route)) ||\n                                                b.route === this.props.location.pathname\n                                        }\n                                    )}\n                                >\n                                    {b.icon}\n                                    <span className=\"nav-panel-button-label\">{b.label}</span>\n                                </Link>\n                            )}\n                            {!b.hidden && b.function && (\n                                <button\n                                    type=\"button\"\n                                    onClick={() => b.function?.()}\n                                    className={classNames(\n                                        \"nav-panel--button\"\n                                    )}\n                                >\n                                    {b.icon}\n                                    <span className=\"nav-panel-button-label\">{b.label}</span>\n                                </button>\n                            )}\n                        </React.Fragment>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(NavPanel);\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMilestone(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 26,\n    viewBox: \"0 0 22 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1.5 0C0.671573 0 0 0.671572 0 1.5V24.5C0 25.3284 0.671573 26 1.5 26C2.32843 26 3 25.3284 3 24.5V17H19C20.6569 17 22 15.6569 22 14V5C22 3.34315 20.6569 2 19 2H3V1.5C3 0.671573 2.32843 0 1.5 0Z\",\n    fill: \"#16E1D5\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMilestone);\nexport default __webpack_public_path__ + \"static/media/milestone.cc04134a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgUptime(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 26,\n    viewBox: \"0 0 26 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M13 26C20.1797 26 26 20.1797 26 13C26 5.8203 20.1797 0 13 0C5.8203 0 0 5.8203 0 13C0 20.1797 5.8203 26 13 26ZM12 5C12 4.44772 12.4477 4 13 4C13.5523 4 14 4.44772 14 5V12H19C19.5523 12 20 12.4477 20 13C20 13.5523 19.5523 14 19 14H13C12.4477 14 12 13.5523 12 13V5Z\",\n    fill: \"#4CAAFF\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUptime);\nexport default __webpack_public_path__ + \"static/media/uptime.a9b43f09.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronLeft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.51794 6.98708L7.68154 12.1921C7.78117 12.2891 7.86064 12.4052 7.91531 12.5334C7.96998 12.6617 7.99876 12.7997 7.99996 12.9393C8.00116 13.079 7.97477 13.2174 7.92232 13.3467C7.86987 13.4759 7.79241 13.5933 7.69447 13.692C7.59652 13.7907 7.48005 13.8688 7.35185 13.9217C7.22365 13.9746 7.08629 14.0012 6.94778 14C6.80928 13.9987 6.67239 13.9697 6.54513 13.9146C6.41786 13.8595 6.30275 13.7794 6.20652 13.679L0.30542 7.73051C0.10986 7.53332 0 7.26591 0 6.98708C0 6.70825 0.10986 6.44084 0.30542 6.24365L6.20652 0.295175C6.40326 0.103632 6.66677 -0.00235606 6.94028 3.97504e-05C7.21379 0.00243556 7.47542 0.113023 7.66883 0.307985C7.86224 0.502946 7.97195 0.766681 7.97432 1.04239C7.9767 1.31809 7.87156 1.58371 7.68154 1.78203L2.51794 6.98708Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronLeft);\nexport default __webpack_public_path__ + \"static/media/chevron-left.ab1f7871.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport \"./InfoPanel.scss\";\nimport { InfoPanelProps } from \"./InfoPanelProps\";\n\n/**\n * Info panel.\n */\nclass InfoPanel extends Component<InfoPanelProps> {\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className={classNames(\"card\", \"info-panel\", this.props.className)}>\n                <div className=\"icon-container\">\n                    <div className={`icon-background icon-background--${this.props.backgroundStyle}`} />\n                    {this.props.icon}\n                </div>\n                <div className=\"col info--labels\">\n                    <h4>{this.props.caption}</h4>\n                    <div className=\"value\">{this.props.value ?? \"-\"}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default InfoPanel;\n","import React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ReactComponent as ConfirmationIcon } from \"../../assets/confirmation.svg\";\nimport { ReactComponent as MilestoneIcon } from \"../../assets/milestone.svg\";\nimport { ReactComponent as UptimeIcon } from \"../../assets/uptime.svg\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { IConfirmedMsMetrics } from \"../../models/websocket/IConfirmedMsMetrics\";\nimport { IMs } from \"../../models/websocket/IMs\";\nimport { WebSocketTopic } from \"../../models/websocket/webSocketTopic\";\nimport { MetricsService } from \"../../services/metricsService\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport InfoPanel from \"../components/layout/InfoPanel\";\nimport SearchInput from \"../components/layout/SearchInput\";\nimport \"./Explorer.scss\";\nimport { ExplorerState } from \"./ExplorerState\";\n\n/**\n * Explorer panel.\n */\nclass Peers extends AsyncComponent<RouteComponentProps, ExplorerState> {\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The milestones subscription id.\n     */\n    private _milestonesSubscription?: string;\n\n    /**\n     * The confirmed metrics subscription id.\n     */\n    private _confirmedMsMetricsSubscription?: string;\n\n    /**\n     * Create a new instance of Peers.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps) {\n        super(props);\n\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n\n        this.state = {\n            milestones: [],\n            bps: \"-\",\n            rbps: \"-\",\n            referencedRate: \"-\"\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        super.componentDidMount();\n\n        this._milestonesSubscription = this._metricsService.subscribe<IMs>(\n            WebSocketTopic.Milestone,\n            undefined,\n            allData => {\n                const nonNull = allData.filter(d => d !== undefined && d !== null);\n\n                this.setState({\n                    milestones: nonNull\n                        .map(m => ({ index: m.index, milestoneId: m.milestoneId }))\n                        .sort((m1, m2) => m2.index - m1.index)\n                        .slice(0, 10)\n                });\n            }\n        );\n\n        this._confirmedMsMetricsSubscription = this._metricsService.subscribe<IConfirmedMsMetrics>(\n            WebSocketTopic.ConfirmedMsMetrics,\n            data => {\n                if (data) {\n                    this.setState({\n                        bps: data.blocksPerSecond.toFixed(1).toString(),\n                        rbps: data.referencedBlocksPerSecond.toFixed(1).toString(),\n                        referencedRate: `${data.referencedRate.toFixed(1).toString()}%`\n                    });\n                }\n            }\n        );\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n\n        if (this._milestonesSubscription) {\n            this._metricsService.unsubscribe(this._milestonesSubscription);\n            this._milestonesSubscription = undefined;\n        }\n\n        if (this._confirmedMsMetricsSubscription) {\n            this._metricsService.unsubscribe(this._confirmedMsMetricsSubscription);\n            this._confirmedMsMetricsSubscription = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"explorer\">\n                <div className=\"content\">\n                    <h2>Explorer</h2>\n                    <div className=\"card search-panel\">\n                        <SearchInput\n                            compact={false}\n                            onSearch={query => this.props.history.push(`/explorer/search/${query}`)}\n                        />\n                    </div>\n                    <div className=\"row tablet-down-column info margin-t-s\">\n                        <InfoPanel\n                            caption=\"Blocks per Second\"\n                            value={this.state.bps}\n                            icon={<MilestoneIcon />}\n                            backgroundStyle=\"green\"\n                        />\n                        <InfoPanel\n                            caption=\"Referenced Blocks per Second\"\n                            value={this.state.rbps}\n                            icon={<UptimeIcon />}\n                            backgroundStyle=\"blue\"\n                        />\n                        <InfoPanel\n                            caption=\"Referenced Rate\"\n                            value={this.state.referencedRate}\n                            icon={<ConfirmationIcon />}\n                            backgroundStyle=\"purple\"\n                        />\n                    </div>\n                    <div className=\"card milestones-panel margin-t-s\">\n                        <h4 className=\"margin-b-l\">Latest Milestones</h4>\n                        {this.state.milestones.length === 0 && (\n                            <p className=\"margin-t-s\">There are no milestones.</p>\n                        )}\n\n                        {this.state.milestones.map((ms, idx) => (\n                            <div key={idx} className=\"milestones-panel--milestone\">\n                                <div className=\"index\">{ms.index}</div>\n                                <Link\n                                    to={`/explorer/milestone/${ms.index}`}\n                                >\n                                    {ms.milestoneId}\n                                </Link>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Peers);\n","import { Bech32Helper, ALIAS_ADDRESS_TYPE, ED25519_ADDRESS_TYPE, NFT_ADDRESS_TYPE } from \"@iota/iota.js\";\nimport { Converter } from \"@iota/util.js\";\nimport { IBech32AddressDetails } from \"../models/IBech32AddressDetails\";\n\nexport class Bech32AddressHelper {\n    /**\n     * Build the address details.\n     * @param address The address to source the data from.\n     * @param hrp The human readable part of the address.\n     * @param addressType The address type\n     * @returns The parts of the address.\n     */\n    public static buildAddress(address: string, hrp: string, addressType?: number): IBech32AddressDetails {\n        let bech32;\n        let hex;\n        let type;\n\n        if (Bech32Helper.matches(address, hrp)) {\n            try {\n                const result = Bech32Helper.fromBech32(address, hrp);\n                if (result) {\n                    bech32 = address;\n                    type = result.addressType;\n                    hex = Converter.bytesToHex(result.addressBytes);\n                }\n            } catch {}\n        }\n\n        if (!bech32) {\n            type = addressType !== undefined ? addressType : Number.parseInt(address.slice(0, 2), 16);\n            hex = address;\n            bech32 = Bech32Helper.toBech32(type, Converter.hexToBytes(hex), hrp);\n        }\n\n        return {\n            bech32,\n            hex,\n            type,\n            typeLabel: Bech32AddressHelper.typeLabel(type)\n        };\n    }\n\n    /**\n     * Convert the address type number to a label.\n     * @param addressType The address type to get the label for.\n     * @returns The label.\n     */\n    public static typeLabel(addressType?: number): string | undefined {\n        if (addressType === ED25519_ADDRESS_TYPE) {\n            return \"Ed25519\";\n        } else if (addressType === ALIAS_ADDRESS_TYPE) {\n            return \"Alias\";\n        } else if (addressType === NFT_ADDRESS_TYPE) {\n            return \"Nft\";\n        }\n            return \"Unknown address type\";\n    }\n}\n","import { SIGNATURE_UNLOCK_TYPE, REFERENCE_UNLOCK_TYPE, ALIAS_UNLOCK_TYPE, NFT_UNLOCK_TYPE,\n    UTXO_INPUT_TYPE, TREASURY_INPUT_TYPE,\n    BASIC_OUTPUT_TYPE, ALIAS_OUTPUT_TYPE, NFT_OUTPUT_TYPE, FOUNDRY_OUTPUT_TYPE, TREASURY_OUTPUT_TYPE,\n    ADDRESS_UNLOCK_CONDITION_TYPE, STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_TYPE,\n    TIMELOCK_UNLOCK_CONDITION_TYPE, EXPIRATION_UNLOCK_CONDITION_TYPE,\n    STATE_CONTROLLER_ADDRESS_UNLOCK_CONDITION_TYPE, GOVERNOR_ADDRESS_UNLOCK_CONDITION_TYPE,\n    IMMUTABLE_ALIAS_UNLOCK_CONDITION_TYPE,\n    ED25519_ADDRESS_TYPE, ALIAS_ADDRESS_TYPE, NFT_ADDRESS_TYPE,\n    ISSUER_FEATURE_TYPE, METADATA_FEATURE_TYPE,\n    SENDER_FEATURE_TYPE, TAG_FEATURE_TYPE } from \"@iota/iota.js\";\n\nexport class NameHelper {\n    /**\n     * Get the name for the address type.\n     * @param type The type to get the name for.\n     * @returns The address type name.\n     */\n     public static getAddressTypeName(type: number): string {\n        if (type === ED25519_ADDRESS_TYPE) {\n            return \"Address\";\n        } else if (type === ALIAS_ADDRESS_TYPE) {\n            return \"Alias address\";\n        } else if (type === NFT_ADDRESS_TYPE) {\n            return \"NFT address\";\n        }\n        return \"Unknown Address Type\";\n    }\n\n    /**\n     * Get the name for the input type.\n     * @param type The type to get the name for.\n     * @returns The input type name.\n     */\n    public static getInputTypeName(type: number): string {\n        if (type === UTXO_INPUT_TYPE) {\n            return \"UTXO Input\";\n        } else if (type === TREASURY_INPUT_TYPE) {\n            return \"Treasury Input\";\n        }\n        return \"Unknown Input\";\n    }\n\n    /**\n     * Get the name for the output type.\n     * @param type The type to get the name for.\n     * @returns The output type name.\n     */\n    public static getOutputTypeName(type: number): string {\n        if (type === BASIC_OUTPUT_TYPE) {\n            return \"Basic Output\";\n        } else if (type === ALIAS_OUTPUT_TYPE) {\n            return \"Alias Output\";\n        } else if (type === NFT_OUTPUT_TYPE) {\n            return \"Nft Output\";\n        } else if (type === FOUNDRY_OUTPUT_TYPE) {\n            return \"Foundry Output\";\n        } else if (type === TREASURY_OUTPUT_TYPE) {\n            return \"Treasury Output\";\n        }\n        return \"Unknown Output\";\n    }\n\n    /**\n     * Get the name for the unlock block type.\n     * @param type The type to get the name for.\n     * @returns The unlock block type name.\n     */\n    public static getUnlockBlockTypeName(type: number): string {\n        if (type === SIGNATURE_UNLOCK_TYPE) {\n            return \"Signature Unlock Block\";\n        } else if (type === REFERENCE_UNLOCK_TYPE) {\n            return \"Reference Unlock Block\";\n        } else if (type === ALIAS_UNLOCK_TYPE) {\n            return \"Alias Unlock Block\";\n        } else if (type === NFT_UNLOCK_TYPE) {\n            return \"Nft Unlock Block\";\n        }\n        return \"Unknown Unlock Block\";\n    }\n\n    /**\n     * Get the name for the unlock condition type.\n     * @param type The type to get the name for.\n     * @returns The unlock condition type name.\n     */\n    public static getUnlockConditionTypeName(type: number): string {\n        if (type === ADDRESS_UNLOCK_CONDITION_TYPE) {\n            return \"Address Unlock Condition\";\n        } else if (type === STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_TYPE) {\n            return \"Storage Desposit Return Unlock Condition\";\n        } else if (type === TIMELOCK_UNLOCK_CONDITION_TYPE) {\n            return \"Timelock Unlock Condition\";\n        } else if (type === EXPIRATION_UNLOCK_CONDITION_TYPE) {\n            return \"Expiration Unlock Condition\";\n        } else if (type === STATE_CONTROLLER_ADDRESS_UNLOCK_CONDITION_TYPE) {\n            return \"State Controller Address Unlock Condition\";\n        } else if (type === GOVERNOR_ADDRESS_UNLOCK_CONDITION_TYPE) {\n            return \"Governor Unlock Condition\";\n        } else if (type === IMMUTABLE_ALIAS_UNLOCK_CONDITION_TYPE) {\n            return \"Immutable Alias Unlock Condition\";\n        }\n        return \"Unknown Unlock Condition\";\n    }\n\n    /**\n     * Get the name for the feature block type.\n     * @param type The type to get the name for.\n     * @returns The feature block type name.\n     */\n    public static getFeatureBlockTypeName(type: number): string {\n        if (type === SENDER_FEATURE_TYPE) {\n            return \"Sender Feature\";\n        } else if (type === ISSUER_FEATURE_TYPE) {\n            return \"Issuer Feature\";\n        } else if (type === METADATA_FEATURE_TYPE) {\n            return \"Metadata Feature\";\n        } else if (type === TAG_FEATURE_TYPE) {\n            return \"Tag Feature\";\n        }\n        return \"Unknown Feature\";\n    }\n}\n","import classNames from \"classnames\";\nimport React, { ReactNode, Component } from \"react\";\nimport \"./Pagination.scss\";\nimport { PaginationProps } from \"./PaginationProps\";\nimport { PaginationState } from \"./PaginationState\";\n\n/**\n * Component which will display pagination.\n */\nclass Pagination extends Component<PaginationProps, PaginationState> {\n    /**\n     * Dots for pagination.\n     */\n    private static readonly DOTS: string = \"...\";\n\n    /**\n     * Is the component mounted.\n     */\n    private _isMounted?: boolean;\n\n    /**\n     * Create a new instance of Pagination.\n     * @param props The props.\n     */\n    constructor(props: PaginationProps) {\n        super(props);\n        this.state = {\n            paginationRange: [],\n            lastPage: 0,\n            isMobile: false\n        };\n    }\n\n    /**\n     * The component updated.\n     * @param prevProps previous props\n     */\n    public componentDidUpdate(prevProps: PaginationProps): void {\n        if (this.props !== prevProps) {\n            this.setState(\n                { paginationRange: this.updatePaginationRange() },\n                () => this.setState(\n                    { lastPage: this.state.paginationRange[this.state.paginationRange.length - 1] as number }\n                )\n            );\n        }\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        this._isMounted = true;\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n    }\n\n    public resize() {\n        const isMobileViewPort = window.innerWidth < 768;\n\n        if (this.state.isMobile !== isMobileViewPort && this._isMounted) {\n            this.setState(\n                { isMobile: isMobileViewPort },\n                () => this.setState({ paginationRange: this.updatePaginationRange() })\n            );\n        }\n    }\n\n    /**\n     * The component will unmounted.\n     */\n    public async componentWillUnmount(): Promise<void> {\n        this._isMounted = false;\n        window.removeEventListener(\"resize\", this.resize.bind(this));\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <ul\n                className={classNames(\"pagination\", {\n                    [this.props.classNames as string]: this.props.classNames !== undefined,\n                    \"d-none\": (this.props.currentPage === 0 || this.state.paginationRange.length < 2)\n                })}\n            >\n                <li\n                    className={classNames(\"pagination-item\", {\n                        disabled: this.props.currentPage < 11,\n                        \"d-none\": this.state.isMobile\n                    })}\n                    onClick={() => {\n                        this.props.onPageChange(this.props.currentPage - 10);\n                    }}\n                >\n                    <div className=\"arrow left\" />\n                    <div className=\"arrow left\" />\n                </li>\n                <li\n                    className={classNames(\"pagination-item\", {\n                        disabled: this.props.currentPage === 1\n                    })}\n                    onClick={() => {\n                        this.props.onPageChange(this.props.currentPage - 1);\n                    }}\n                >\n                    <div className=\"arrow left\" />\n                </li>\n                {this.state.paginationRange.map((pageNumber: (number|string), idx: number) => {\n                    if (pageNumber === Pagination.DOTS) {\n                        return <li key={idx} className=\"pagination-item dots\">{pageNumber}</li>;\n                    }\n\n                    return (\n                        <li\n                            key={idx}\n                            className={classNames(\"pagination-item\", {\n                                selected: pageNumber === this.props.currentPage\n                            })}\n                            onClick={() => this.props.onPageChange(pageNumber as number)}\n                        >\n                            {pageNumber}\n                        </li>\n                    );\n                })}\n                <li\n                    className={classNames(\"pagination-item\", {\n                        disabled: this.props.currentPage === this.state.lastPage\n                    })}\n                    onClick={() => {\n                        this.props.onPageChange(this.props.currentPage + 1);\n                    }}\n                >\n                    <div className=\"arrow right\" />\n                </li>\n                <li\n                    className={classNames(\"pagination-item\", {\n                        disabled: this.props.currentPage > this.state.lastPage - 10,\n                        \"d-none\": this.state.isMobile\n                    })}\n                    onClick={() => {\n                        this.props.onPageChange(this.props.currentPage + 10);\n                    }}\n                >\n                    <div className=\"arrow right\" />\n                    <div className=\"arrow right\" />\n                </li>\n            </ul>\n        );\n    }\n\n\n    /**\n     * Update pagination range.\n     * @returns The range of available pages.\n     */\n    protected updatePaginationRange(): (string|number)[] {\n        let paginationRange: (string|number)[] = [];\n\n        const totalPageCount: number = Math.ceil(this.props.totalCount / this.props.pageSize);\n\n        // Min page range is determined as siblingsCount + firstPage + lastPage + currentPage + 2*DOTS\n        const minPageRangeCount: number = this.props.siblingsCount + 5;\n\n        if (minPageRangeCount >= totalPageCount) {\n            paginationRange = this.range(1, totalPageCount);\n        }\n\n        const leftSiblingIndex = Math.max(this.props.currentPage - this.props.siblingsCount, 1);\n        const rightSiblingIndex = Math.min(\n            this.props.currentPage + this.props.siblingsCount,\n            totalPageCount\n        );\n\n        /*\n         *  Do not show dots if there is only one position left\n         *  after/before the left/right page count.\n         */\n        const shouldShowLeftDots = leftSiblingIndex > 2;\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n        const firstPageIndex = 1;\n        const lastPageIndex = totalPageCount;\n\n        if (!shouldShowLeftDots && shouldShowRightDots) {\n            const leftItemCount = 3 + (2 * this.props.siblingsCount);\n            const leftRange = this.range(1, leftItemCount);\n\n            paginationRange = [...leftRange, Pagination.DOTS, totalPageCount];\n        }\n\n        if (shouldShowLeftDots && !shouldShowRightDots) {\n            const rightItemCount = 3 + (2 * this.props.siblingsCount);\n            const rightRange = this.range(\n              totalPageCount - rightItemCount + 1,\n              totalPageCount\n            );\n\n            paginationRange = [firstPageIndex, Pagination.DOTS, ...rightRange];\n        }\n\n        if (shouldShowLeftDots && shouldShowRightDots) {\n            const middleRange = this.range(leftSiblingIndex, rightSiblingIndex);\n\n            paginationRange = [firstPageIndex, Pagination.DOTS, ...middleRange, Pagination.DOTS, lastPageIndex];\n        }\n\n        /*\n         *  Add extra range for large number of pages\n         */\n        const rightRemainingPages = totalPageCount - (this.props.currentPage + this.props.siblingsCount);\n        const leftRemainingPages = this.props.currentPage - this.props.siblingsCount;\n\n        if (!this.state.isMobile &&\n            this.props.extraPageRangeLimit &&\n            rightRemainingPages > this.props.extraPageRangeLimit) {\n            const remainderMidPoint = Math.floor((rightRemainingPages) / 2) + this.props.currentPage;\n            const rMiddleRange: (string|number)[] = this.range(remainderMidPoint - 1, remainderMidPoint + 1);\n            rMiddleRange.push(Pagination.DOTS);\n            const lastItemIndex = paginationRange.length - 1;\n            paginationRange.splice(lastItemIndex, 0, ...rMiddleRange);\n        }\n\n        if (!this.state.isMobile &&\n            this.props.extraPageRangeLimit &&\n            leftRemainingPages > this.props.extraPageRangeLimit) {\n            const remainderMidPoint = Math.floor(leftRemainingPages / 2);\n            const lMiddleRange: (string|number)[] = this.range(remainderMidPoint - 1, remainderMidPoint + 1);\n            lMiddleRange.unshift(Pagination.DOTS);\n            paginationRange.splice(1, 0, ...lMiddleRange);\n        }\n\n        return paginationRange;\n    }\n\n    /**\n     * Creates an array of elements from start value to end value.\n     * @param start Start value.\n     * @param end End value.\n     * @returns Array of elements from start to end value.\n     */\n    private range(start: number, end: number): number[] {\n        const length = end - start + 1;\n        return Array.from({ length }, (_, idx) => idx + start);\n    }\n}\n\nexport default Pagination;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCopy(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 9 1 L 16 1 C 16.552 1 17 1.448 17 2 L 17 9 C 17 9.552 16.552 10 16 10 L 9 10 C 8.448 10 8 9.552 8 9 L 8 2 C 8 1.448 8.448 1 9 1 Z\",\n    stroke: \"currentColor\",\n    strokeWidth: 2\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \" M 5.125 6 L 4 6 C 2.895 6 2 6.895 2 8 L 2 14 C 2 15.105 2.895 16 4 16 L 10 16 C 11.105 16 12 15.105 12 14 L 12 12.875\",\n    stroke: \"currentColor\",\n    strokeWidth: 2\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCopy);\nexport default __webpack_public_path__ + \"static/media/copy.c627cf0b.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport \"./Spinner.scss\";\nimport { SpinnerProps } from \"./SpinnerProps\";\n\n/**\n * Component which will display a spinner.\n */\nclass Spinner extends Component<SpinnerProps> {\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className={\n                classNames(\"spinner\", { \"spinner--compact\": this.props.compact })\n            }\n            />\n        );\n    }\n}\n\nexport default Spinner;\n","/**\n * Helper methods for clipboard.\n */\nexport class ClipboardHelper {\n    /**\n     * Copy the text to the clipboard.\n     * @param text The text to copy.\n     * @returns True id the text was copied.\n     */\n    public static copy(text: string | undefined): boolean {\n        if (text !== undefined && text !== null) {\n            try {\n                const textArea = document.createElement(\"textarea\");\n\n                // Prevent zooming on iOS\n                textArea.style.fontSize = \"12pt\";\n                // Reset box model\n                textArea.style.border = \"0\";\n                textArea.style.padding = \"0\";\n                textArea.style.margin = \"0\";\n                // Move element out of screen horizontally\n                textArea.style.position = \"absolute\";\n                textArea.style.left = \"-9999px\";\n                // Move element to the same position vertically\n                const yPosition = window.pageYOffset || document.documentElement.scrollTop;\n                textArea.style.top = `${yPosition}px`;\n\n                textArea.setAttribute(\"readonly\", \"\");\n                textArea.value = text;\n\n                document.body.append(textArea);\n\n                textArea.select();\n                document.execCommand(\"Copy\");\n                textArea.remove();\n\n                return true;\n            } catch {\n                // Not much we can do\n                return false;\n            }\n        } else {\n            return false;\n        }\n    }\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDropdownArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 5,\n    height: 10,\n    viewBox: \"0 0 5 10\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 10L5 5L0 0V10Z\",\n    fill: \"#485776\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdownArrow);\nexport default __webpack_public_path__ + \"static/media/dropdown-arrow.dc7cfa60.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ReactComponent as CopyIcon } from \"../../../assets/copy.svg\";\nimport \"./BlockButton.scss\";\nimport { BlockButtonProps } from \"./BlockButtonProps\";\nimport { BlockButtonState } from \"./BlockButtonState\";\n\n/**\n * Component which will display a block button.\n */\nclass BlockButton extends Component<BlockButtonProps, BlockButtonState> {\n    /**\n     * Create a new instance of BlockButton.\n     * @param props The props.\n     */\n    constructor(props: BlockButtonProps) {\n        super(props);\n\n        this.state = {\n            active: false,\n            message: props.buttonType === \"copy\" ? \"Copied\" : \"\"\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"block-button\">\n                <button\n                    type=\"button\"\n                    className={classNames(\n                        \"block-button-btn\",\n                        { \"block-button-btn--active\": this.state.active }\n                    )}\n                    onClick={() => this.activate()}\n                >\n                    {this.props.buttonType === \"copy\" && (\n                        <CopyIcon />\n                    )}\n                </button>\n                {this.state.active && this.state.message && (\n                    <span\n                        className={classNames(\n                            \"block-button--message\",\n                            { \"block-button--message--right\": this.props.labelPosition === \"right\" },\n                            { \"block-button--message--top\": this.props.labelPosition === \"top\" }\n                        )}\n                    >\n                        {this.state.message}\n                    </span>\n                )}\n            </div>\n        );\n    }\n\n    /**\n     * Activate the button.\n     */\n    private activate(): void {\n        this.props.onClick();\n\n        this.setState({ active: true });\n        setTimeout(\n            () => {\n                this.setState({ active: false });\n            },\n            2000);\n    }\n}\n\nexport default BlockButton;\n","import { ALIAS_ADDRESS_TYPE, ED25519_ADDRESS_TYPE } from \"@iota/iota.js\";\nimport React, { Component, ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { NodeConfigService } from \"../../../services/nodeConfigService\";\nimport { Bech32AddressHelper } from \"../../../utils/bech32AddressHelper\";\nimport { ClipboardHelper } from \"../../../utils/clipboardHelper\";\nimport { NameHelper } from \"../../../utils/nameHelper\";\nimport BlockButton from \"../layout/BlockButton\";\nimport { Bech32AddressProps } from \"./Bech32AddressProps\";\nimport { Bech32AddressState } from \"./Bech32AddressState\";\n\n/**\n * Component which will display an Bech32Address.\n */\nclass Bech32Address extends Component<Bech32AddressProps, Bech32AddressState> {\n    /**\n     * Create a new instance of Bech 32 Address\n     * @param props The props.\n     */\n    constructor(props: Bech32AddressProps) {\n        super(props);\n\n        if (this.props.address) {\n            const nodeConfigService = ServiceFactory.get<NodeConfigService>(\"node-config\");\n\n            const hash = this.props.address.type === ED25519_ADDRESS_TYPE\n                        ? this.props.address?.pubKeyHash\n                        : (this.props.address.type === ALIAS_ADDRESS_TYPE\n                            ? this.props.address?.aliasId\n                            : this.props.address?.nftId);\n\n            this.state = {\n                addressDetails: Bech32AddressHelper.buildAddress(\n                                    hash,\n                                    nodeConfigService.getBech32Hrp(),\n                                    this.props.address.type\n                                )\n            };\n        } else if (this.props.addressDetails) {\n            this.state = {\n                addressDetails: this.props.addressDetails\n            };\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"bech32-address\">\n                {this.state.addressDetails.bech32 && (\n                    <React.Fragment>\n                        <div className=\"card--label\">\n                            {this.state.addressDetails.type\n                                ? NameHelper.getAddressTypeName(this.state.addressDetails.type)\n                                : \"Address\"}\n                        </div>\n                        <div className=\"card--value card--value__mono row\">\n                            {this.props.activeLinks && (\n                                <Link\n                                    className=\"margin-r-t\"\n                                    to={`/explorer/address/${this.state.addressDetails?.bech32}`}\n                                >\n                                    {this.state.addressDetails.bech32}\n                                </Link>\n                            )}\n                            {!this.props.activeLinks && (\n                                <span className=\"margin-r-t\">{this.state.addressDetails.bech32}</span>\n                            )}\n                            <BlockButton\n                                onClick={() => ClipboardHelper.copy(this.props.addressDetails?.bech32)}\n                                buttonType=\"copy\"\n                                labelPosition=\"top\"\n                            />\n                        </div>\n                    </React.Fragment>\n                )}\n                {this.props.showHexAddress &&\n                this.state.addressDetails?.hex && (\n                    <React.Fragment>\n                        <div className=\"card--label\">\n                            {this.state.addressDetails.typeLabel} Address\n                        </div>\n                        <div className=\"card--value card--value__mono row\">\n                            {this.props.activeLinks && (\n                                <Link\n                                    className=\"margin-r-t\"\n                                    to={`/explorer/address/${this.state.addressDetails?.hex}`}\n                                >\n                                    {this.state.addressDetails?.hex}\n                                </Link>\n                            )}\n                            {!this.props.activeLinks && (\n                                <span className=\"margin-r-t\">{this.state.addressDetails?.hex}</span>\n                            )}\n                            <BlockButton\n                                onClick={() => ClipboardHelper.copy(this.props.addressDetails?.hex)}\n                                buttonType=\"copy\"\n                                labelPosition=\"top\"\n                            />\n                        </div>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Bech32Address;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronDown(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 8,\n    viewBox: \"0 0 12 8\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 1L6 6L11 1\",\n    stroke: \"currentColor\",\n    strokeWidth: 1.72854\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronDown);\nexport default __webpack_public_path__ + \"static/media/chevron-down.7aa53193.svg\";\nexport { ForwardRef as ReactComponent };","import { ISSUER_FEATURE_TYPE, METADATA_FEATURE_TYPE, SENDER_FEATURE_TYPE, TAG_FEATURE_TYPE } from \"@iota/iota.js\";\nimport { Converter } from \"@iota/util.js\";\nimport classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ClipboardHelper } from \"../../../utils/clipboardHelper\";\nimport { NameHelper } from \"../../../utils/nameHelper\";\nimport BlockButton from \"../layout/BlockButton\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport Bech32Address from \"./Bech32Address\";\nimport { FeatureProps } from \"./FeatureProps\";\nimport { FeatureState } from \"./FeatureState\";\n\n/**\n * Component which will display an Feature.\n */\nclass FeatureBlock extends Component<FeatureProps, FeatureState> {\n    /**\n     * Create a new instance of Feature.\n     * @param props The props.\n     */\n     constructor(props: FeatureProps) {\n        super(props);\n\n        let hexData;\n        let utf8Data;\n        let jsonData;\n\n        if (this.props.feature.type === METADATA_FEATURE_TYPE) {\n            const matchHexData = this.props.feature.data.match(/.{1,2}/g);\n\n            hexData = matchHexData ? matchHexData.join(\" \") : this.props.feature.data;\n            utf8Data = Converter.hexToUtf8(this.props.feature.data);\n\n            try {\n                jsonData = JSON.stringify(JSON.parse(utf8Data), undefined, \"  \");\n            } catch {}\n        }\n\n\n        this.state = {\n            showDetails: false,\n            utf8Data,\n            hexData,\n            jsonData\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"feature padding-t-s\">\n                <div\n                    className=\"card--content__input\"\n                    onClick={() => this.setState({ showDetails: !this.state.showDetails })}\n                >\n\n                    <div className={classNames(\n                            \"margin-r-t\",\n                            \"card--content__input--dropdown\",\n                            { \"opened\": this.state.showDetails }\n                        )}\n                    >\n                        <DropdownIcon />\n                    </div>\n                    <h3 className=\"card--content__input--label\">\n                        {NameHelper.getFeatureBlockTypeName(this.props.feature.type)}\n                    </h3>\n                </div>\n\n                {this.state.showDetails && (\n                    <div className=\"card--content--border-l\">\n                        {(this.props.feature.type === SENDER_FEATURE_TYPE ||\n                        this.props.feature.type === ISSUER_FEATURE_TYPE) && (\n                            <Bech32Address\n                                activeLinks={false}\n                                showHexAddress={true}\n                                address={this.props.feature.address}\n                            />\n                        )}\n                        {this.props.feature.type === METADATA_FEATURE_TYPE && (\n                            <React.Fragment>\n                                {!this.state.jsonData && this.state.utf8Data && (\n                                    <React.Fragment>\n                                        <div className=\"card--label row bottom spread\">\n                                            <span className=\"margin-r-t\">Data UTF8</span>\n                                            <BlockButton\n                                                onClick={() => ClipboardHelper.copy(\n                                                    this.state.utf8Data\n                                                )}\n                                                buttonType=\"copy\"\n                                                labelPosition=\"top\"\n                                            />\n                                        </div>\n                                        <div className=\"card--value card--value-textarea card--value-textarea__utf8\">\n                                            {this.state.utf8Data}\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                                {this.state.jsonData && (\n                                    <React.Fragment>\n                                        <div className=\"card--label row bottom spread\">\n                                            Data JSON\n                                            <BlockButton\n                                                onClick={() => ClipboardHelper.copy(\n                                                    this.state.jsonData\n                                                )}\n                                                buttonType=\"copy\"\n                                                labelPosition=\"top\"\n                                            />\n                                        </div>\n                                        <div className=\"card--value card--value-textarea card--value-textarea__json\">\n                                            {this.state.jsonData}\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                                {this.state.hexData && (\n                                    <React.Fragment>\n                                        <div className=\"card--label row middle\">\n                                            <span className=\"margin-r-t\">Data Hex</span>\n                                            <BlockButton\n                                                onClick={() => ClipboardHelper.copy(\n                                                    this.state.hexData?.replace(/ /g, \"\")\n                                                )}\n                                                buttonType=\"copy\"\n                                                labelPosition=\"right\"\n                                            />\n                                        </div>\n                                        <div className=\"card--value card--value-textarea card--value-textarea__hex\">\n                                            {this.state.hexData}\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                            </React.Fragment>\n                        )}\n                        {this.props.feature.type === TAG_FEATURE_TYPE && (\n                            <React.Fragment>\n                                <div className=\"card--label\">\n                                    Tag:\n                                </div>\n                                <div className=\"card--value row\">\n                                    {this.props.feature.tag}\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </div>\n                )}\n\n            </div>\n        );\n    }\n}\n\nexport default FeatureBlock;\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport { TokenProps } from \"./TokenProps\";\nimport { TokenState } from \"./TokenState\";\n\n\n/**\n * Component which will display an Token.\n */\nclass Token extends Component<TokenProps, TokenState> {\n    /**\n     * Create a new instance of Token.\n     * @param props The props.\n     */\n     constructor(props: TokenProps) {\n        super(props);\n\n        this.state = {\n            showDetails: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"native-token padding-t-s\">\n                <div\n                    className=\"card--content__input\"\n                    onClick={() => this.setState({ showDetails: !this.state.showDetails })}\n                >\n                    <div className={classNames(\n                            \"margin-r-t\",\n                            \"card--content__input--dropdown\",\n                            { \"opened\": this.state.showDetails }\n                        )}\n                    >\n                        <DropdownIcon />\n                    </div>\n                    <h3 className=\"card--content__input--label\">\n                        Token {this.props.index}\n                    </h3>\n                </div>\n                {this.state.showDetails && (\n                    <div className=\"card--content--border-l\">\n                        <div className=\"card--label\">\n                            Token Id\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            {this.props.token.id}\n                        </div>\n                        <div className=\"card--label\">\n                            Amount\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            {this.props.token.amount}\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default Token;\n","import { ADDRESS_UNLOCK_CONDITION_TYPE, EXPIRATION_UNLOCK_CONDITION_TYPE, STATE_CONTROLLER_ADDRESS_UNLOCK_CONDITION_TYPE, GOVERNOR_ADDRESS_UNLOCK_CONDITION_TYPE, IMMUTABLE_ALIAS_UNLOCK_CONDITION_TYPE, STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_TYPE, TIMELOCK_UNLOCK_CONDITION_TYPE } from \"@iota/iota.js\";\nimport classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport { NameHelper } from \"../../../utils/nameHelper\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport Bech32Address from \"./Bech32Address\";\nimport { UnlockConditionProps } from \"./UnlockConditionProps\";\nimport { UnlockCondtionState } from \"./UnlockConditionState\";\n\n/**\n * Component which will display an unlock condition.\n */\nclass UnlockCondition extends Component<UnlockConditionProps, UnlockCondtionState > {\n    /**\n     * Create a new instance of Output.\n     * @param props The props.\n     */\n     constructor(props: UnlockConditionProps) {\n        super(props);\n\n        this.state = {\n            showDetails: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"unlock-condition padding-t-s\">\n                <div\n                    className=\"card--content__input\"\n                    onClick={() => this.setState({ showDetails: !this.state.showDetails })}\n                >\n\n\n                    <div className={classNames(\n                            \"margin-r-t\",\n                            \"card--content__input--dropdown\",\n                            { \"opened\": this.state.showDetails }\n                        )}\n                    >\n                        <DropdownIcon />\n                    </div>\n                    <h3 className=\"card--content__input--label\">\n                        {NameHelper.getUnlockConditionTypeName(this.props.unlockCondition.type)}\n                    </h3>\n                </div>\n\n                {this.state.showDetails && (\n                    <div className=\"card--content--border-l\">\n                        {(this.props.unlockCondition.type === ADDRESS_UNLOCK_CONDITION_TYPE ||\n                        this.props.unlockCondition.type === STATE_CONTROLLER_ADDRESS_UNLOCK_CONDITION_TYPE ||\n                        this.props.unlockCondition.type === GOVERNOR_ADDRESS_UNLOCK_CONDITION_TYPE ||\n                        this.props.unlockCondition.type === IMMUTABLE_ALIAS_UNLOCK_CONDITION_TYPE) && (\n                            <Bech32Address\n                                activeLinks={true}\n                                showHexAddress={false}\n                                address={this.props.unlockCondition.address}\n                            />\n                        )}\n                        {this.props.unlockCondition.type === STORAGE_DEPOSIT_RETURN_UNLOCK_CONDITION_TYPE && (\n                            <React.Fragment>\n                                <Bech32Address\n                                    activeLinks={true}\n                                    showHexAddress={false}\n                                    address={this.props.unlockCondition.returnAddress}\n                                />\n                                <div className=\"card--label\">\n                                    Amount:\n                                </div>\n                                <div className=\"card--value row\">\n                                    {this.props.unlockCondition.amount}\n                                </div>\n                            </React.Fragment>\n                        )}\n                        {(this.props.unlockCondition.type === TIMELOCK_UNLOCK_CONDITION_TYPE ||\n                        this.props.unlockCondition.type === EXPIRATION_UNLOCK_CONDITION_TYPE) && (\n                            <React.Fragment>\n                                {this.props.unlockCondition.type === EXPIRATION_UNLOCK_CONDITION_TYPE && (\n                                    <Bech32Address\n                                        activeLinks={true}\n                                        showHexAddress={false}\n                                        address={this.props.unlockCondition.returnAddress}\n                                    />\n                                )}\n                                {this.props.unlockCondition.unixTime && (\n                                    <React.Fragment>\n                                        <div className=\"card--label\">\n                                            Unix time\n                                        </div>\n                                        <div className=\"card--value row\">\n                                            {FormatHelper.date(this.props.unlockCondition.unixTime * 1000)}\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                            </React.Fragment>\n                        )}\n                        <div className=\"card--label\">\n                            Type:\n                        </div>\n                        <div className=\"card--value row\">\n                            {this.props.unlockCondition.type}\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default UnlockCondition;\n","import { BASIC_OUTPUT_TYPE, ALIAS_OUTPUT_TYPE, FOUNDRY_OUTPUT_TYPE, NFT_OUTPUT_TYPE, TREASURY_OUTPUT_TYPE, IOutputResponse, SIMPLE_TOKEN_SCHEME_TYPE, ALIAS_ADDRESS_TYPE, NFT_ADDRESS_TYPE, IImmutableAliasUnlockCondition, IAliasAddress } from \"@iota/iota.js\";\nimport { HexHelper, WriteStream } from \"@iota/util.js\";\nimport classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ClipboardHelper } from \"../../../utils/clipboardHelper\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport { NameHelper } from \"../../../utils/nameHelper\";\nimport BlockButton from \"../layout/BlockButton\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport Bech32Address from \"./Bech32Address\";\nimport Feature from \"./Feature\";\nimport { OutputProps } from \"./OutputProps\";\nimport { OutputState } from \"./OutputState\";\nimport Token from \"./Token\";\nimport UnlockCondition from \"./UnlockCondition\";\n\n/**\n * Component which will display an output.\n */\nclass Output extends Component<OutputProps, OutputState> {\n    /**\n     * Create a new instance of Output.\n     * @param props The props.\n     */\n    constructor(props: OutputProps) {\n        super(props);\n\n        this.state = {\n            formatFull: false,\n            isGenesis: (this.isOutputResponse(props.output)) ? props.output.metadata.blockId === \"0\".repeat(64) : false,\n            output: (this.isOutputResponse(props.output)) ? props.output.output : props.output,\n            showDetails: this.props.showDetails ?? false,\n            showTokens: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"output margin-t-m\">\n                <div className=\"card--content padding-0\">\n                    <div className=\"card--header row spread\">\n                        <div\n                            className=\"card--content__input\"\n                            onClick={() => this.setState({ showDetails: !this.state.showDetails })}\n                        >\n                            <div className={classNames(\n                                    \"margin-r-t\",\n                                    \"card--content__input--dropdown\",\n                                    { \"opened\": this.state.showDetails }\n                                )}\n                            >\n                                <DropdownIcon />\n                            </div>\n                            <h3 className=\"card--content__input--label\">\n                                {NameHelper.getOutputTypeName(this.state.output.type)} {this.props.index}\n                            </h3>\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            <button\n                                className=\"card--value--button\"\n                                type=\"button\"\n                                onClick={() => this.setState(\n                                    {\n                                        formatFull: !this.state.formatFull\n                                    }\n                                )}\n                            >\n                                {FormatHelper.getInstance().amount(\n                                    Number(this.state.output.amount),\n                                    this.state.formatFull\n                                )}\n                            </button>\n                        </div>\n                    </div>\n\n                    {this.state.showDetails && (\n                        <div className=\"card--content--border-l\">\n                            {/* Diplay metadata for Output Response */}\n                            {this.isOutputResponse(this.props.output) && (\n                                <React.Fragment>\n                                    <div className=\"card--label\">\n                                        Block Id\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.state.isGenesis && (\n                                            <span>Genesis</span>\n                                        )}\n                                        {!this.state.isGenesis && (\n                                            <React.Fragment>\n                                                <Link\n                                                    to={\n                                                        `/explorer/block/${this.props.output.metadata.blockId}`\n                                                    }\n                                                    className=\"margin-r-t\"\n                                                >\n                                                    {this.props.output.metadata.blockId}\n                                                </Link>\n                                                <BlockButton\n                                                    onClick={() => {\n                                                        if (this.isOutputResponse(this.props.output)) {\n                                                            ClipboardHelper.copy(this.props.output.metadata.blockId);\n                                                        }\n                                                    }}\n                                                    buttonType=\"copy\"\n                                                    labelPosition=\"top\"\n                                                />\n                                            </React.Fragment>\n                                        )}\n                                    </div>\n                                    <div className=\"card--label\">\n                                        Transaction Id\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.state.isGenesis && (\n                                            <span>Genesis</span>\n                                        )}\n                                        {!this.state.isGenesis && (\n                                            <React.Fragment>\n                                                <span className=\"margin-r-t\">\n                                                    {this.props.output.metadata.transactionId}\n                                                </span>\n                                                <BlockButton\n                                                    onClick={() => {\n                                                        if (this.isOutputResponse(this.props.output)) {\n                                                            ClipboardHelper.copy(\n                                                                this.props.output.metadata.transactionId\n                                                            );\n                                                        }\n                                                    }}\n                                                    buttonType=\"copy\"\n                                                    labelPosition=\"top\"\n                                                />\n                                            </React.Fragment>\n                                        )}\n                                    </div>\n                                    <div className=\"card--label\">\n                                        Index\n                                    </div>\n                                    <div className=\"card--value\">\n                                        {this.props.output.metadata.outputIndex}\n                                    </div>\n                                    <div className=\"card--label\">\n                                        Is Spent\n                                    </div>\n                                    <div className=\"card--value\">\n                                        {this.props.output.metadata.isSpent ? \"Yes\" : \"No\"}\n                                    </div>\n                                </React.Fragment>\n                            )}\n\n                            {this.state.output.type === ALIAS_OUTPUT_TYPE && (\n                                <React.Fragment>\n                                    <Bech32Address\n                                        activeLinks={true}\n                                        showHexAddress={false}\n                                        address={\n                                            {\n                                                aliasId: FormatHelper\n                                                        .resolveId(this.state.output.aliasId, this.props.outputId),\n                                                type: ALIAS_ADDRESS_TYPE\n                                            }\n                                        }\n                                    />\n                                    <div className=\"card--label\">\n                                        State index:\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.state.output.stateIndex}\n                                    </div>\n                                    <div className=\"card--label\">\n                                        State metadata:\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.state.output.stateMetadata}\n                                    </div>\n                                    <div className=\"card--label\">\n                                        Foundry counter:\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.state.output.foundryCounter}\n                                    </div>\n                                </React.Fragment>\n                            )}\n\n                            {this.state.output.type === NFT_OUTPUT_TYPE && (\n                                <Bech32Address\n                                    activeLinks={true}\n                                    showHexAddress={false}\n                                    address={\n                                            {\n                                                nftId: FormatHelper\n                                                        .resolveId(this.state.output.nftId, this.props.outputId),\n                                                type: NFT_ADDRESS_TYPE\n                                            }\n                                        }\n                                />\n                            )}\n\n                            {this.state.output.type === FOUNDRY_OUTPUT_TYPE && (\n                                <React.Fragment>\n                                    <div className=\"card--label\">\n                                        Foundry id:\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.buildFoundryId()}\n                                    </div>\n                                    <div className=\"card--label\">\n                                        Serial number:\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.state.output.serialNumber}\n                                    </div>\n                                    <div className=\"card--label\">\n                                        Token scheme type:\n                                    </div>\n                                    <div className=\"card--value row\">\n                                        {this.state.output.tokenScheme.type}\n                                    </div>\n                                    {this.state.output.tokenScheme.type === SIMPLE_TOKEN_SCHEME_TYPE && (\n                                        <React.Fragment>\n                                            <div className=\"card--label\">\n                                                Minted tokens:\n                                            </div>\n                                            <div className=\"card--value row\">\n                                                {this.state.output.tokenScheme.mintedTokens}\n                                            </div>\n                                            <div className=\"card--label\">\n                                                Melted tokens:\n                                            </div>\n                                            <div className=\"card--value row\">\n                                                {this.state.output.tokenScheme.meltedTokens}\n                                            </div>\n                                            <div className=\"card--label\">\n                                                Maximum supply:\n                                            </div>\n                                            <div className=\"card--value row\">\n                                                {this.state.output.tokenScheme.maximumSupply}\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                </React.Fragment>\n                            )}\n\n                            {/* all output types except Treasury have common output conditions */}\n                            {this.state.output.type !== TREASURY_OUTPUT_TYPE && (\n                                <React.Fragment>\n                                    {this.state.output.unlockConditions.map((unlockCondition, idx) => (\n                                        <UnlockCondition\n                                            key={idx}\n                                            unlockCondition={unlockCondition}\n                                        />\n                                    ))}\n                                    {this.state.output.features?.map((feature, idx) => (\n                                        <Feature\n                                            key={idx}\n                                            feature={feature}\n                                        />\n                                    ))}\n                                    {this.state.output.type !== BASIC_OUTPUT_TYPE &&\n                                    this.state.output.immutableFeatures && (\n                                        <React.Fragment>\n                                            {this.state.output.immutableFeatures\n                                                .map((immutableFeature, idx) => (\n                                                    <Feature\n                                                        key={idx}\n                                                        feature={immutableFeature}\n                                                    />\n                                            ))}\n                                        </React.Fragment>\n                                    )}\n\n                                    {this.state.output?.nativeTokens && (\n                                        <React.Fragment>\n                                            <div\n                                                className=\"card--content__input margin-t-s\"\n                                                onClick={() => this.setState({ showTokens: !this.state.showTokens })}\n                                            >\n                                                <div className={classNames(\n                                                        \"margin-r-t\",\n                                                        \"card--content__input--dropdown\",\n                                                        { \"opened\": this.state.showTokens }\n                                                    )}\n                                                >\n                                                    <DropdownIcon />\n                                                </div>\n                                                <h3 className=\"card--content__input--label\">\n                                                    Native Tokens\n                                                </h3>\n                                            </div>\n                                            {this.state.showTokens && (\n                                                <div className=\"card--content--border-l\">\n                                                    {this.state.output.nativeTokens?.map((token, idx: number) => (\n                                                        <Token\n                                                            key={idx}\n                                                            index={idx + 1}\n                                                            token={{\n                                                                id: token.id,\n                                                                amount: token.amount\n                                                            }}\n                                                        />\n                                                    ))}\n                                                </div>\n                                            )}\n                                        </React.Fragment>\n                                    )}\n                                </React.Fragment>\n                            )}\n\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Check if object is type of IOutputResponse.\n     * @param object The object to check.\n     * @returns True of object is IOutputResponse.\n     */\n    private isOutputResponse(object: unknown): object is IOutputResponse {\n        return Object.prototype.hasOwnProperty.call(object, \"metadata\");\n    }\n\n    /**\n     * Build a FoundryId from aliasAddres, serialNumber and tokenSchemeType\n     * @returns The FoundryId string.\n     */\n    private buildFoundryId() {\n        if (this.state.output.type === FOUNDRY_OUTPUT_TYPE) {\n            const immutableAliasUnlockCondition =\n            this.state.output.unlockConditions[0] as IImmutableAliasUnlockCondition;\n            const aliasId = (immutableAliasUnlockCondition.address as IAliasAddress).aliasId;\n            const typeWS = new WriteStream();\n            typeWS.writeUInt8(\"alias address type\", ALIAS_ADDRESS_TYPE);\n            const aliasAddress = HexHelper.addPrefix(\n                `${typeWS.finalHex()}${HexHelper.stripPrefix(aliasId)}`\n            );\n            const serialNumberWS = new WriteStream();\n            serialNumberWS.writeUInt32(\"serialNumber\", this.state.output.serialNumber);\n            const serialNumberHex = serialNumberWS.finalHex();\n            const tokenSchemeTypeWS = new WriteStream();\n            tokenSchemeTypeWS.writeUInt8(\"tokenSchemeType\", this.state.output.tokenScheme.type);\n            const tokenSchemeTypeHex = tokenSchemeTypeWS.finalHex();\n\n            return `${aliasAddress}${serialNumberHex}${tokenSchemeTypeHex}`;\n        }\n    }\n}\n\nexport default Output;\n","import { IOutputResponse } from \"@iota/iota.js\";\nimport classNames from \"classnames\";\nimport React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { ReactComponent as ChevronLeftIcon } from \"../../../assets/chevron-left.svg\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { NodeConfigService } from \"../../../services/nodeConfigService\";\nimport { TangleService } from \"../../../services/tangleService\";\nimport { Bech32AddressHelper } from \"../../../utils/bech32AddressHelper\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport { NameHelper } from \"../../../utils/nameHelper\";\nimport AsyncComponent from \"../../components/layout/AsyncComponent\";\nimport Pagination from \"../../components/layout/Pagination\";\nimport Spinner from \"../../components/layout/Spinner\";\nimport Bech32Address from \"../../components/tangle/Bech32Address\";\nimport Output from \"../../components/tangle/Output\";\nimport Token from \"../../components/tangle/Token\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport \"./Address.scss\";\nimport { AddressRouteProps } from \"./AddressRouteProps\";\nimport { AddressState } from \"./AddressState\";\n\n/**\n * Component which will show the address page.\n */\nclass Address extends AsyncComponent<RouteComponentProps<AddressRouteProps>, AddressState> {\n    /**\n     * Service for tangle requests.\n     */\n    private readonly _tangleService: TangleService;\n\n    /**\n     * The bech32 hrp from the node.\n     */\n    private readonly _bech32Hrp: string;\n\n    /**\n     * Create a new instance of Address.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps<AddressRouteProps>) {\n        super(props);\n\n        this._tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n        const nodeConfigService = ServiceFactory.get<NodeConfigService>(\"node-config\");\n        this._bech32Hrp = nodeConfigService.getBech32Hrp();\n\n        this.state = {\n            ...Bech32AddressHelper.buildAddress(props.match.params.address, this._bech32Hrp),\n            formatFull: false,\n            statusBusy: true,\n            showTokens: false,\n            currentPage: 1,\n            pageSize: 10,\n            status: \"Loading outputs...\"\n        };\n    }\n\n    private get currentPageOutputs() {\n        if (this.state.outputs && this.state.outputs.length > 0) {\n            const firstPageIndex = (this.state.currentPage - 1) * this.state.pageSize;\n            const lastPageIndex =\n                (this.state.currentPage === Math.ceil(this.state.outputs.length / this.state.pageSize))\n                ? this.state.outputs.length\n                : firstPageIndex + this.state.pageSize;\n\n            return this.state.outputs.slice(firstPageIndex, lastPageIndex);\n        }\n\n        return [];\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        const result = await this._tangleService.search(this.props.match.params.address);\n\n        if (result?.address) {\n            this.setState({\n                address: result.address,\n                balance: result.address.balance,\n                outputIds: result.addressOutputIds\n            }, async () => {\n                const outputs: IOutputResponse[] = [];\n\n                if (result.addressOutputIds) {\n                    for (const outputId of result.addressOutputIds) {\n                        const outputResult = await this._tangleService.outputDetails(outputId);\n                        if (outputResult) {\n                            outputs.push(outputResult);\n\n                            this.setState({\n                                outputs,\n                                status: `Loading outputs [${outputs.length}/${result.addressOutputIds.length}]`\n                            });\n                        }\n\n                        if (!this._isMounted) {\n                            break;\n                        }\n                    }\n                }\n\n                this.setState({\n                    outputs,\n                    status: \"\",\n                    statusBusy: false\n                });\n            });\n        } else if (result?.unavailable) {\n            this.props.history.replace(\"/explorer/unavailable\");\n        } else {\n            this.props.history.replace(`/explorer/search/${this.props.match.params.address}`);\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"address\">\n                <div className=\"content\">\n                    <Link\n                        to=\"/explorer\"\n                        className=\"row middle inline\"\n                    >\n                        <ChevronLeftIcon className=\"secondary\" />\n                        <h3 className=\"secondary margin-l-s\">Back to Explorer</h3>\n                    </Link>\n                    <div className=\"card margin-t-m padding-l\">\n                        <div className=\"card--content padding-0\">\n                            <h2> {this.state.address?.type\n                                ? NameHelper.getAddressTypeName(this.state.address.type)\n                                : \"Address\"}\n                            </h2>\n                            {this.state.address?.bech32 && (\n                                <Bech32Address\n                                    activeLinks={false}\n                                    showHexAddress={true}\n                                    addressDetails={this.state.address}\n                                />\n                            )}\n                            {this.state.balance !== undefined && (\n                                <div>\n                                    <div className=\"card--label\">\n                                        Balance\n                                    </div>\n                                    <div className=\"card--value card--value__mono\">\n                                        <button\n                                            className=\"card--value--button\"\n                                            type=\"button\"\n                                            onClick={() => this.setState(\n                                                {\n                                                    formatFull: !this.state.formatFull\n                                                }\n                                            )}\n                                        >\n                                            {FormatHelper.getInstance().amount(\n                                                Number(this.state.balance),\n                                                this.state.formatFull\n                                            )}\n                                        </button>\n                                    </div>\n                                    {this.state.address?.nativeTokens && (\n                                        <React.Fragment>\n                                            <div\n                                                className=\"card--content__input margin-t-s\"\n                                                onClick={() => this.setState({ showTokens: !this.state.showTokens })}\n                                            >\n                                                <div className={classNames(\n                                                        \"margin-r-t\",\n                                                        \"card--content__input--dropdown\",\n                                                        { \"opened\": this.state.showTokens }\n                                                    )}\n                                                >\n                                                    <DropdownIcon />\n                                                </div>\n                                                <h3 className=\"card--content__input--label\">\n                                                    Native Tokens\n                                                </h3>\n                                            </div>\n                                            {this.state.showTokens && (\n                                                <div className=\"card--content--border-l\">\n                                                    {Object.keys(this.state.address?.nativeTokens).map((key, idx) => (\n                                                        <Token\n                                                            key={idx}\n                                                            index={idx}\n                                                            token={{\n                                                                id: key,\n                                                                amount: this.state.address?.nativeTokens\n                                                                        ? this.state.address?.nativeTokens[key]\n                                                                            .toString()\n                                                                        : \"0\"\n                                                            }}\n                                                        />\n                                                    ))}\n                                                </div>\n                                            )}\n                                        </React.Fragment>\n                                    )}\n                                </div>\n                            )}\n                            {this.state.status && (\n                                <div className=\"middle row margin-t-m\">\n                                    {this.state.statusBusy && (<Spinner compact={true} />)}\n                                    <p className=\"status margin-l-s\">\n                                        {this.props.match.params.address}\n                                        <br />\n                                        {this.state.status}\n                                    </p>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n\n                    {this.state.outputs &&\n                    this.state.outputIds &&\n                    this.state.outputs.length > 0 && (\n                        <div className=\"card margin-t-m padding-l\">\n                            <div className=\"card--header\">\n                                <h2 className=\"card--header__title\">Outputs</h2>\n                                <span className=\"card--header-count\">\n                                    {this.state.outputs.length}\n                                </span>\n                            </div>\n                            {this.currentPageOutputs.map((output, idx) => (\n                                <Output\n                                    key={idx}\n                                    index={idx + 1}\n                                    output={output}\n                                    outputId={this.state.outputIds\n                                            ? this.state.outputIds[idx]\n                                            : \"\"}\n                                />\n                            ))}\n\n                            <Pagination\n                                currentPage={this.state.currentPage}\n                                totalCount={this.state.outputs.length}\n                                pageSize={this.state.pageSize}\n                                extraPageRangeLimit={20}\n                                siblingsCount={1}\n                                onPageChange={page => this.setState({ currentPage: page })}\n                            />\n                        </div>\n                    )}\n\n                    {this.state.outputs && this.state.outputs.length === 0 && (\n                        <div className=\"card margin-t-m padding-l\">\n                            <h2 className=\"margin-b-s\">Outputs</h2>\n                            {this.state.outputs && this.state.outputs.length === 0 && (\n                                <div className=\"card--value\">\n                                    There are no outputs for this address.\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Address;\n","var _path, _rect, _rect2, _rect3, _rect4;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      isolation: \"isolate\"\n    },\n    viewBox: \"0 0 16 17.778\",\n    width: \"16pt\",\n    height: \"17.778pt\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \" M 8 14.711 L 3.111 8.889 L 12.889 8.889 L 8 14.711 Z \",\n    fill: \"currentColor\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.222,\n    y: 0,\n    width: 3.556,\n    height: 1.778,\n    fill: \"currentColor\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.222,\n    y: 2.667,\n    width: 3.556,\n    height: 1.778,\n    fill: \"currentColor\"\n  })), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.222,\n    y: 5.333,\n    width: 3.556,\n    height: 4.889,\n    fill: \"currentColor\"\n  })), _rect4 || (_rect4 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 16,\n    width: 16,\n    height: 1.778,\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.7bde89e5.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronRight(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.48206 6.98708L0.318462 12.1921C0.218831 12.2891 0.139361 12.4052 0.0846907 12.5334C0.0300203 12.6617 0.00124313 12.7997 3.95234e-05 12.9393C-0.00116408 13.079 0.0252297 13.2174 0.0776802 13.3467C0.130131 13.4759 0.207588 13.5933 0.305532 13.692C0.403476 13.7907 0.519946 13.8688 0.648146 13.9217C0.776345 13.9746 0.913707 14.0012 1.05222 14C1.19072 13.9987 1.32761 13.9697 1.45487 13.9146C1.58214 13.8595 1.69725 13.7794 1.79348 13.679L7.69458 7.73051C7.89014 7.53332 8 7.26591 8 6.98708C8 6.70825 7.89014 6.44084 7.69458 6.24365L1.79348 0.295175C1.59674 0.103632 1.33323 -0.00235606 1.05972 3.97504e-05C0.786213 0.00243556 0.524578 0.113023 0.331169 0.307985C0.137761 0.502946 0.0280534 0.766681 0.0256767 1.04239C0.0232999 1.31809 0.128444 1.58371 0.318462 1.78203L5.48206 6.98708Z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronRight);\nexport default __webpack_public_path__ + \"static/media/chevron-right.ee38b690.svg\";\nexport { ForwardRef as ReactComponent };","import { Converter } from \"@iota/util.js\";\n\n/**\n * Class to help with downloading.\n */\nexport class DownloadHelper {\n    /**\n     * Get a filename base on the type.\n     * @param id The id of the item.\n     * @param type The type of the file.\n     * @returns The filename.\n     */\n    public static filename(id: string, type: string): string {\n        return `${id}.${type}`;\n    }\n\n    /**\n     * Create a data url for an object.\n     * @param object The object to create the url for.\n     * @returns The data url.\n     */\n    public static createJsonDataUrl(object: unknown): string {\n        const b64 = Converter.bytesToBase64(Converter.utf8ToBytes((JSON.stringify(object, undefined, \"\\t\"))));\n        return `data:application/json;base64,${b64}`;\n    }\n\n    /**\n     * Create a data url for binary data.\n     * @param data The data to create the url for.\n     * @returns The data url.\n     */\n    public static createBinaryDataUrl(data: Uint8Array): string {\n        const b64 = Converter.bytesToBase64(data);\n        return `data:application/octet;base64,${b64}`;\n    }\n\n    /**\n     * Create a data url for hex data.\n     * @param data The data to create the url for.\n     * @returns The data url.\n     */\n    public static createHexDataUrl(data: Uint8Array): string {\n        const b64 = Converter.bytesToBase64(Converter.utf8ToBytes(Converter.bytesToHex(data)));\n        return `data:plain/text;base64,${b64}`;\n    }\n\n    /**\n     * Create a data url for base64 data.\n     * @param data The data to create the url for.\n     * @returns The data url.\n     */\n    public static createBase64DataUrl(data: Uint8Array): string {\n        const b64 = Converter.bytesToBase64(Converter.utf8ToBytes(Converter.bytesToBase64(data)));\n        return `data:plain/text;base64,${b64}`;\n    }\n}\n","import classNames from \"classnames\";\nimport React, { ReactNode } from \"react\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { TangleService } from \"../../../services/tangleService\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport AsyncComponent from \"../layout/AsyncComponent\";\nimport \"./BlockTangleState.scss\";\nimport { BlockTangleStateProps } from \"./BlockTangleStateProps\";\nimport { BlockTangleStateState } from \"./BlockTangleStateState\";\n\n/**\n * Component which will display a block tangle state.\n */\nclass BlockTangleState extends AsyncComponent<BlockTangleStateProps, BlockTangleStateState> {\n    /**\n     * Service for tangle requests.\n     */\n    private readonly _tangleService: TangleService;\n\n    /**\n     * Create a new instance of Milestone.\n     * @param props The props.\n     */\n    constructor(props: BlockTangleStateProps) {\n        super(props);\n\n        this._tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n        this.state = {};\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        await this.updateMilestone();\n    }\n\n    /**\n     * The component was updated.\n     * @param prevProps The previous properties.\n     */\n    public async componentDidUpdate(prevProps: BlockTangleStateProps): Promise<void> {\n        if (this.props.milestoneIndex !== prevProps.milestoneIndex) {\n            await this.updateMilestone();\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div\n                onClick={this.props.onClick}\n                className={\n                    classNames(\n                        \"block-tangle-state\",\n                        { \"block-tangle-state__no-click\": !this.props.onClick },\n                        { \"block-tangle-state__referenced\": this.props.status === \"referenced\" },\n                        { \"block-tangle-state__milestone\": this.props.status === \"milestone\" },\n                        { \"block-tangle-state__pending\": this.props.status === \"pending\" },\n                        { \"block-tangle-state__unknown\": this.props.status === \"unknown\" }\n                    )\n                }\n            >\n                {this.props.status === \"unknown\" && (\"Unknown\")}\n                {this.props.status === \"referenced\" &&\n                    (`Referenced${this.props.milestoneIndex !== undefined && this.props.milestoneIndex > 1\n                        ? ` by MS ${this.props.milestoneIndex}` : \"\"}`)}\n                {this.props.status === \"milestone\" &&\n                    (`MS${this.props.milestoneIndex !== undefined ? ` ${this.props.milestoneIndex}` : \"\"}`)}\n                {this.props.status === \"pending\" && (\"Pending\")}\n\n                {this.state.timestamp}\n            </div>\n        );\n    }\n\n    /**\n     * Update the milestone info.\n     */\n    private async updateMilestone(): Promise<void> {\n        if (this.props.milestoneIndex) {\n            const result = await this._tangleService.milestoneDetails(this.props.milestoneIndex);\n            if (result) {\n                this.setState({\n                    timestamp: result.timestamp\n                        ? ` at ${FormatHelper.dateShort(result.timestamp)}`\n                        : undefined\n                });\n            }\n        }\n    }\n}\n\nexport default BlockTangleState;\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport \"./InclusionState.scss\";\nimport { InclusionStateProps } from \"./InclusionStateProps\";\n\n/**\n * Component which will display the inclusion state.\n */\nclass InclusionState extends Component<InclusionStateProps> {\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"inclusion-state\">\n                <div\n                    className={\n                        classNames(\n                            \"inclusion-state-pill\",\n                            { \"inclusion__not-included\": this.props.state === undefined },\n                            { \"inclusion__included\": this.props.state === \"included\" },\n                            { \"inclusion__no-transaction\": this.props.state === \"noTransaction\" },\n                            { \"inclusion__conflicting\": this.props.state === \"conflicting\" }\n                        )\n                    }\n                >\n                    {this.props.state === undefined && (\"Not included\")}\n                    {this.props.state === \"included\" && (\"Included\")}\n                    {this.props.state === \"noTransaction\" && (\"No Transaction\")}\n                    {this.props.state === \"conflicting\" && (\"Conflicting\")}\n                </div>\n                {this.props.state === undefined && (\"The block is not yet referenced by a milestone.\")}\n                {this.props.state === \"included\" && (\n                    \"The block is referenced by a milestone, the transaction is included in the ledger.\"\n                )}\n                {this.props.state === \"noTransaction\" && (\n                    \"The block is referenced by a milestone, the data is included in the ledger\" +\n                    \", but there is no value transfer.\"\n                )}\n                {this.props.state === \"conflicting\" && (\n                    \"The block has a conflict and will not be included in the ledger.\"\n                )}\n            </div>\n        );\n    }\n}\n\nexport default InclusionState;\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport { ProtocolParamsMilestonOptionProps } from \"./ProtocolParamsMilestonOptionProps\";\nimport { ProtocoParamsMilestoneOptionState } from \"./ProtocolParamsMilestonOptionState\";\n\n/**\n * Component which will display a Protocol parameters milestone option.\n */\nclass ProtocolParamsMilestonOption\n    extends Component<ProtocolParamsMilestonOptionProps, ProtocoParamsMilestoneOptionState> {\n    /**\n     * Create a new instance of Protocol params milestone option.\n     * @param props The props.\n     */\n    constructor(props: ProtocolParamsMilestonOptionProps) {\n        super(props);\n\n        this.state = {\n            showDetails: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"milestone-payload_receipt padding-t-s\">\n                <div\n                    className=\"card--content__input\"\n                    onClick={() => this.setState({ showDetails: !this.state.showDetails })}\n                >\n\n                    <div className={classNames(\n                            \"margin-r-t\",\n                            \"card--content__input--dropdown\",\n                            { \"opened\": this.state.showDetails }\n                        )}\n                    >\n                        <DropdownIcon />\n                    </div>\n                    <h3 className=\"card--content__input--label\">\n                        Protocol Params\n                    </h3>\n                </div>\n                {this.state.showDetails && (\n                    <div className=\"card--content--border-l\">\n                        <div className=\"card--label\">\n                            Target Milestone Index\n                        </div>\n                        <div className=\"card--value\">\n                            {this.props.option.targetMilestoneIndex}\n                        </div>\n                        <div className=\"card--label\">\n                            Protocol version\n                        </div>\n                        <div className=\"card--value\">\n                            {this.props.option.protocolVersion}\n                        </div>\n                        <div className=\"card--label\">\n                            Params\n                        </div>\n                        <div className=\"card--value\">\n                            {this.props.option.params}\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ProtocolParamsMilestonOption;\n","import { ED25519_ADDRESS_TYPE } from \"@iota/iota.js\";\nimport classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { NodeConfigService } from \"../../../services/nodeConfigService\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport Bech32Address from \"./Bech32Address\";\nimport { MigratedFundProps } from \"./MigratedFundProps\";\nimport { MigratedFundState } from \"./MigratedFundState\";\n\n/**\n * Component which will display a Migrated fund.\n */\nclass MigratedFund extends Component<MigratedFundProps, MigratedFundState> {\n    /**\n     * The bech32 hrp from the node.\n     */\n     private readonly _bech32Hrp: string;\n\n    /**\n     * Create a new instance of Migrated fund.\n     * @param props The props.\n     */\n    constructor(props: MigratedFundProps) {\n        super(props);\n\n        const nodeConfigService = ServiceFactory.get<NodeConfigService>(\"node-config\");\n        this._bech32Hrp = nodeConfigService.getBech32Hrp();\n\n        this.state = {\n            formatFull: false,\n            showDetails: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"milestone-payload_receipt padding-t-s\">\n                <div\n                    className=\"card--content__input\"\n                    onClick={() => this.setState({ showDetails: !this.state.showDetails })}\n                >\n\n                    <div className={classNames(\n                            \"margin-r-t\",\n                            \"card--content__input--dropdown\",\n                            { \"opened\": this.state.showDetails }\n                        )}\n                    >\n                        <DropdownIcon />\n                    </div>\n                    <h3 className=\"card--content__input--label\">\n                        Migrated Fund {this.props.index}\n                    </h3>\n                </div>\n                {this.state.showDetails && (\n                    <div className=\"card--content--border-l\">\n                        <div className=\"card--label\">\n                            Tail Transaction Hash\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            {this.props.fund.tailTransactionHash}\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            {this.props.fund.address.type === ED25519_ADDRESS_TYPE && (\n                                <Bech32Address\n                                    activeLinks={true}\n                                    showHexAddress={true}\n                                    address={this.props.fund.address}\n                                />\n                            )}\n                        </div>\n                        <div className=\"card--label\">\n                            Deposit\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            <button\n                                className=\"card--value--button\"\n                                type=\"button\"\n                                onClick={() => this.setState(\n                                    {\n                                        formatFull: !this.state.formatFull\n                                    }\n                                )}\n                            >\n                                {FormatHelper.getInstance().amount(\n                                    Number(this.props.fund.deposit),\n                                    this.state.formatFull\n                                )}\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default MigratedFund;\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport MigratedFund from \"./MigratedFund\";\nimport { ReceiptMilestoneOptionProps } from \"./ReceiptMilestoneOptionProps\";\nimport { ReceiptMilestoneOptionState } from \"./ReceiptMilestoneOptionState\";\n\n/**\n * Component which will display a receipt milestone option.\n */\nclass ReceiptMilestoneOption extends Component<ReceiptMilestoneOptionProps, ReceiptMilestoneOptionState> {\n    /**\n     * Create a new instance of Receipt milestone option.\n     * @param props The props.\n     */\n    constructor(props: ReceiptMilestoneOptionProps) {\n        super(props);\n\n        this.state = {\n            formatFull: false,\n            showReceiptDetails: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"milestone-payload_receipt padding-t-s\">\n                <div\n                    className=\"card--content__input\"\n                    onClick={() => this.setState({ showReceiptDetails: !this.state.showReceiptDetails })}\n                >\n\n                    <div className={classNames(\n                            \"margin-r-t\",\n                            \"card--content__input--dropdown\",\n                            { \"opened\": this.state.showReceiptDetails }\n                        )}\n                    >\n                        <DropdownIcon />\n                    </div>\n                    <h3 className=\"card--content__input--label\">\n                        Receipt\n                    </h3>\n                </div>\n                {this.state.showReceiptDetails && (\n                    <div className=\"card--content--border-l\">\n                        <div className=\"card--label\">\n                            Migrated At\n                        </div>\n                        <div className=\"card--value row\">\n                            {this.props.option.migratedAt}\n                        </div>\n                        <div className=\"card--label\">\n                            Final\n                        </div>\n                        <div className=\"card--value row\">\n                            {this.props.option.final ? \"Yes\" : \"No\"}\n                        </div>\n                        {this.props.option.funds.map((fund, idx) => (\n                            <MigratedFund fund={fund} index={idx} key={idx} />\n                        ))}\n                        <div className=\"card--label\">\n                            Input Transaction Milestone Id\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            {this.props.option.transaction.input.milestoneId}\n                        </div>\n                        <div className=\"card--label\">\n                            Output Transaction Amount to Treasury\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            <button\n                                className=\"card--value--button\"\n                                type=\"button\"\n                                onClick={() => this.setState(\n                                    {\n                                        formatFull: !this.state.formatFull\n                                    }\n                                )}\n                            >\n                                {FormatHelper.getInstance().amount(\n                                    Number(this.props.option.transaction.output.amount),\n                                    this.state.formatFull\n                                )}\n                            </button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default ReceiptMilestoneOption;\n","/* eslint-disable max-len */\nimport { RECEIPT_MILESTONE_OPTION_TYPE, PROTOCOL_PARAMETERS_MILESTONE_OPTION_TYPE } from \"@iota/iota.js\";\nimport classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ClipboardHelper } from \"../../../utils/clipboardHelper\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport BlockButton from \"../layout/BlockButton\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport { MilestonePayloadProps } from \"./MilestonePayloadProps\";\nimport { MilestonePayloadState } from \"./MilestonePayloadState\";\nimport ProtocolParamsMilestonOption from \"./ProtocolParamsMilestonOption\";\nimport ReceiptMilestoneOption from \"./ReceiptMilestoneOption\";\n\n/**\n * Component which will display a milestone payload.\n */\nclass MilestonePayload extends Component<MilestonePayloadProps, MilestonePayloadState> {\n    /**\n     * Create a new instance of Milestone payload.\n     * @param props The props.\n     */\n     constructor(props: MilestonePayloadProps) {\n        super(props);\n\n        this.state = {\n            showSignatures: false,\n            showOptions: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"milestone-payload card--content padding-0\">\n                <h2>Milestone Payload</h2>\n                <div className=\"card--label\">\n                    Index\n                </div>\n                <div className=\"card--value\">\n                    {this.props.payload.index}\n                </div>\n                <div className=\"card--label\">\n                    Date\n                </div>\n                <div className=\"card--value\">\n                    {this.props.payload.timestamp && FormatHelper.date(\n                        this.props.payload.timestamp\n                    )}\n                </div>\n                <div className=\"card--label\">\n                    Previous Milestone Id\n                </div>\n                <div className=\"card--value\">\n                    {this.props.payload.previousMilestoneId}\n                </div>\n                {this.props.payload.parents?.map((parent, idx) => (\n                    <React.Fragment key={idx}>\n                        <div className=\"card--label\">\n                            Parent Block {idx + 1}\n                        </div>\n                        <div className=\"card--value card--value__mono row\">\n                            {parent !== \"0\".repeat(64) && (\n                                <React.Fragment>\n                                    <Link\n                                        className=\"margin-r-t\"\n                                        to={\n                                            `/explorer/block/${parent}`\n                                        }\n                                    >\n                                        {parent}\n                                    </Link>\n                                    <BlockButton\n                                        onClick={() => ClipboardHelper.copy(\n                                            parent\n                                        )}\n                                        buttonType=\"copy\"\n                                        labelPosition=\"top\"\n                                    />\n                                </React.Fragment>\n                            )}\n                            {parent === \"0\".repeat(64) && (\n                                <span>Genesis</span>\n                            )}\n                        </div>\n                    </React.Fragment>\n                ))}\n                <div className=\"card--label\">\n                    Confirmed Merkle Proof\n                </div>\n                <div className=\"card--value card--value__mono\">\n                    {this.props.payload.inclusionMerkleRoot}\n                </div>\n                <div className=\"card--label\">\n                    Applied Merkle Proof\n                </div>\n                <div className=\"card--value card--value__mono\">\n                    {this.props.payload.appliedMerkleRoot}\n                </div>\n                {this.props.payload.metadata && (\n                    <React.Fragment>\n                        <div className=\"card--label\">\n                            Metadata\n                        </div>\n                        <div className=\"card--value card--value__mono\">\n                            {this.props.payload.metadata}\n                        </div>\n                    </React.Fragment>\n                )}\n\n                {this.props.payload.options && (\n                <React.Fragment>\n                    <div className=\"milestone-payloads__options padding-t-s\">\n                        <div\n                            className=\"card--content__input\"\n                            onClick={() => this.setState({ showOptions: !this.state.showOptions })}\n                        >\n                            <div className={classNames(\n                                        \"margin-r-t\",\n                                        \"card--content__input--dropdown\",\n                                        { \"opened\": this.state.showOptions }\n                                    )}\n                            >\n                                <DropdownIcon />\n                            </div>\n                            <h3 className=\"card--content__input--label\">\n                                Options\n                            </h3>\n                        </div>\n                    </div>\n                    {this.state.showOptions && (\n                    <div className=\"card--content--border-l\">\n                        {this.props.payload.options.map((option, idx) => (\n                            <React.Fragment key={idx}>\n                                { option.type === RECEIPT_MILESTONE_OPTION_TYPE && (\n                                <ReceiptMilestoneOption option={option} />\n                                        )}\n                                { option.type === PROTOCOL_PARAMETERS_MILESTONE_OPTION_TYPE && (\n                                <ProtocolParamsMilestonOption option={option} />\n                                        )}\n                            </React.Fragment>\n                                ))}\n                    </div>\n                        )}\n                </React.Fragment>\n                )}\n                <div className=\"milestone-payloads__signatures padding-t-s\">\n                    <div\n                        className=\"card--content__input\"\n                        onClick={() => this.setState({ showSignatures: !this.state.showSignatures })}\n                    >\n                        <div className={classNames(\n                                \"margin-r-t\",\n                                \"card--content__input--dropdown\",\n                                { \"opened\": this.state.showSignatures }\n                            )}\n                        >\n                            <DropdownIcon />\n                        </div>\n                        <h3 className=\"card--content__input--label\">\n                            Signatures\n                        </h3>\n                    </div>\n                </div>\n                {this.state.showSignatures && (\n                    <div className=\"card--content--border-l\">\n                        {this.props.payload.signatures.map((sig, i) => (\n                            <div key={i} className=\"margin-b-s\">\n                                <div className=\"card--label\">\n                                    Public Key\n                                </div>\n                                <div className=\"card--value card--value__mono\">\n                                    {sig.publicKey}\n                                </div>\n                                <div className=\"card--label\">\n                                    Signature\n                                </div>\n                                <div className=\"card--value card--value__mono\">\n                                    {sig.signature}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default MilestonePayload;\n","import { Converter } from \"@iota/util.js\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ClipboardHelper } from \"../../../utils/clipboardHelper\";\nimport BlockButton from \"../layout/BlockButton\";\nimport { TaggedDataPayloadProps } from \"./TaggedDataPayloadProps\";\nimport { TaggedDataPayloadState } from \"./TaggedDataPayloadState\";\n\n/**\n * Component which will display a Tagged data payload.\n */\nclass TaggedDataPayload extends Component<TaggedDataPayloadProps, TaggedDataPayloadState> {\n    /**\n     * Create a new instance of TaggedDataPayload.\n     * @param props The props.\n     */\n    constructor(props: TaggedDataPayloadProps) {\n        super(props);\n\n        const utf8Index = props.payload.tag ? Converter.hexToUtf8(props.payload.tag) : \"\";\n        const matchHexIndex = props.payload.tag ? props.payload.tag.match(/.{1,2}/g) : \"\";\n        const hexIndex = matchHexIndex ? matchHexIndex.join(\" \") : (props.payload.tag ? props.payload.tag : \"\");\n\n        let hexData;\n        let utf8Data;\n        let jsonData;\n\n        if (props.payload.data) {\n            const matchHexData = props.payload.data.match(/.{1,2}/g);\n\n            hexData = matchHexData ? matchHexData.join(\" \") : props.payload.data;\n            utf8Data = Converter.hexToUtf8(props.payload.data);\n\n            try {\n                jsonData = JSON.stringify(JSON.parse(utf8Data), undefined, \"  \");\n            } catch {}\n        }\n\n        this.state = {\n            utf8Index,\n            hexIndex,\n            indexLengthBytes: props.payload.tag ? props.payload.tag.length / 2 : 0,\n            utf8Data,\n            hexData,\n            jsonData,\n            dataLengthBytes: props.payload.data ? props.payload.data.length / 2 : 0\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"tagged-data-payload\">\n                <h2>Tagged Data Payload</h2>\n                <div className=\"card--label row middle\">\n                    <span className=\"margin-r-t\">Tag UTF8 [{this.state.indexLengthBytes}]</span>\n                    <BlockButton\n                        onClick={() => ClipboardHelper.copy(\n                            this.state.utf8Index\n                        )}\n                        buttonType=\"copy\"\n                        labelPosition=\"right\"\n                    />\n                </div>\n                <div className=\"card--value row\">\n                    {this.state.utf8Index}\n                </div>\n                <div className=\"card--label row middle\">\n                    <span className=\"margin-r-t\">Tag Hex [{this.state.indexLengthBytes}]</span>\n                    <BlockButton\n                        onClick={() => ClipboardHelper.copy(\n                            this.state.hexIndex.replace(/ /g, \"\")\n                        )}\n                        buttonType=\"copy\"\n                        labelPosition=\"right\"\n                    />\n                </div>\n                <div className=\"card--value card--value-textarea card--value-textarea__hex card--value-textarea__fit\">\n                    {this.state.hexIndex}\n                </div>\n                {!this.state.jsonData && this.state.utf8Data && (\n                    <React.Fragment>\n                        <div className=\"card--label row bottom spread\">\n                            <span className=\"margin-r-t\">Data UTF8 [{this.state.dataLengthBytes}]</span>\n                            <BlockButton\n                                onClick={() => ClipboardHelper.copy(\n                                    this.state.utf8Data\n                                )}\n                                buttonType=\"copy\"\n                                labelPosition=\"top\"\n                            />\n                        </div>\n                        <div className=\"card--value card--value-textarea card--value-textarea__utf8\">\n                            {this.state.utf8Data}\n                        </div>\n                    </React.Fragment>\n                )}\n                {this.state.jsonData && (\n                    <React.Fragment>\n                        <div className=\"card--label row bottom spread\">\n                            Data JSON\n                            <BlockButton\n                                onClick={() => ClipboardHelper.copy(\n                                    this.state.jsonData\n                                )}\n                                buttonType=\"copy\"\n                                labelPosition=\"top\"\n                            />\n                        </div>\n                        <div className=\"card--value card--value-textarea card--value-textarea__json\">\n                            {this.state.jsonData}\n                        </div>\n                    </React.Fragment>\n                )}\n                {this.state.hexData && (\n                    <React.Fragment>\n                        <div className=\"card--label row middle\">\n                            <span className=\"margin-r-t\">Data Hex [{this.state.dataLengthBytes}]</span>\n                            <BlockButton\n                                onClick={() => ClipboardHelper.copy(\n                                    this.state.hexData?.replace(/ /g, \"\")\n                                )}\n                                buttonType=\"copy\"\n                                labelPosition=\"right\"\n                            />\n                        </div>\n                        <div className=\"card--value card--value-textarea card--value-textarea__hex\">\n                            {this.state.hexData}\n                        </div>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default TaggedDataPayload;\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport { NameHelper } from \"../../../utils/nameHelper\";\nimport { ReactComponent as DropdownIcon } from \"./../../../assets/dropdown-arrow.svg\";\nimport Bech32Address from \"./Bech32Address\";\nimport { UTXOInputProps } from \"./UTXOInputProps\";\nimport { UTXOInputState } from \"./UTXOInputState\";\n\n/**\n * Component which will display an UTXO Iput.\n */\nclass UTXOInput extends Component<UTXOInputProps, UTXOInputState> {\n    /**\n     * Create a new instance of UTXO Iput.\n     * @param props The props.\n     */\n    constructor(props: UTXOInputProps) {\n        super(props);\n\n        this.state = {\n            showDetails: false\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"utxo-input margin-t-m\">\n                <div className=\"card--content padding-0\">\n                    <div\n                        className=\"card--content__input\"\n                        onClick={() => this.setState({ showDetails: !this.state.showDetails })}\n                    >\n\n                        <div className={classNames(\n                                \"margin-r-t\",\n                                \"card--content__input--dropdown\",\n                                { \"opened\": this.state.showDetails }\n                            )}\n                        >\n                            <DropdownIcon />\n                        </div>\n                        <h3 className=\"card--content__input--label\">\n                            {NameHelper.getInputTypeName(this.props.input.type)} {this.props.index}\n                        </h3>\n                    </div>\n\n                    {this.state.showDetails && (\n                        <div className=\"card--content--border-l\">\n                            <Bech32Address\n                                activeLinks={true}\n                                showHexAddress={true}\n                                address={this.props.unlockAddress}\n                            />\n                            <div className=\"card--label\">\n                                Transaction Id\n                            </div>\n                            <div className=\"card--value card--value__mono\">\n                                {this.props.input.transactionId === \"0\".repeat(64) && (\n                                    <span>Genesis</span>\n                                )}\n                                {this.props.input.transactionId !== \"0\".repeat(64) && this.props.input.transactionId}\n                            </div>\n                            <div className=\"card--label\">\n                                Transaction Output Index\n                            </div>\n                            <div className=\"card--value\">\n                                {this.props.input.transactionOutputIndex}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default UTXOInput;\n","/* eslint-disable max-len */\nimport { Blake2b } from \"@iota/crypto.js\";\nimport { Ed25519Address, IReferenceUnlock, ISignatureUnlock, UTXO_INPUT_TYPE, REFERENCE_UNLOCK_TYPE, SIGNATURE_UNLOCK_TYPE, ALIAS_UNLOCK_TYPE, NFT_UNLOCK_TYPE, serializeTransactionPayload, AddressTypes, IEd25519Address, ED25519_ADDRESS_TYPE } from \"@iota/iota.js\";\nimport { Converter, WriteStream } from \"@iota/util.js\";\nimport React, { Component, ReactNode } from \"react\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { NodeConfigService } from \"../../../services/nodeConfigService\";\nimport Output from \"./Output\";\nimport { TransactionPayloadProps } from \"./TransactionPayloadProps\";\nimport { TransactionPayloadState } from \"./TransactionPayloadState\";\nimport UTXOInput from \"./UTXOInput\";\n\n/**\n * Component which will display a transaction payload.\n */\nclass TransactionPayload extends Component<TransactionPayloadProps, TransactionPayloadState> {\n    /**\n     * The bech32 hrp from the node.\n     */\n    private readonly _bech32Hrp: string;\n\n    /**\n     * Create a new instance of TransactionPayload.\n     * @param props The props.\n     */\n    constructor(props: TransactionPayloadProps) {\n        super(props);\n\n        const nodeConfigService = ServiceFactory.get<NodeConfigService>(\"node-config\");\n        this._bech32Hrp = nodeConfigService.getBech32Hrp();\n\n        const signatureBlocks: ISignatureUnlock[] = [];\n        for (let i = 0; i < props.payload.unlocks.length; i++) {\n            if (props.payload.unlocks[i].type === SIGNATURE_UNLOCK_TYPE) {\n                const sigUnlockBlock = props.payload.unlocks[i] as ISignatureUnlock;\n                signatureBlocks.push(sigUnlockBlock);\n            } else if (\n                props.payload.unlocks[i].type === REFERENCE_UNLOCK_TYPE ||\n                props.payload.unlocks[i].type === ALIAS_UNLOCK_TYPE ||\n                props.payload.unlocks[i].type === NFT_UNLOCK_TYPE) {\n                    const refUnlockBlock = props.payload.unlocks[i] as IReferenceUnlock;\n                    signatureBlocks.push(props.payload.unlocks[refUnlockBlock.reference] as ISignatureUnlock);\n            }\n        }\n\n        const unlockAddresses: AddressTypes[] = [];\n        for (let i = 0; i < signatureBlocks.length; i++) {\n            unlockAddresses.push({ pubKeyHash: Converter.bytesToHex(\n                new Ed25519Address(Converter.hexToBytes(signatureBlocks[i].signature.publicKey))\n                    .toAddress()\n            ), type: ED25519_ADDRESS_TYPE } as IEd25519Address);\n        }\n        const writeStream = new WriteStream();\n\n        try {\n            serializeTransactionPayload(writeStream, this.props.payload);\n        } catch (error) {\n            if (error instanceof Error) {\n                console.log(error.message);\n            }\n        }\n\n        const transactionId = Converter.bytesToHex(Blake2b.sum256(writeStream.finalBytes()), true);\n\n        this.state = {\n            unlockAddresses,\n            transactionId\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"transaction-payload\">\n                <div className=\"card margin-t-m padding-l\">\n                    <div className=\"card--header\">\n                        <h2 className=\"card--header__title\">Inputs</h2>\n                        <span className=\"card--header-count\">\n                            {this.props.payload.essence.inputs.length}\n                        </span>\n                    </div>\n                    {this.props.payload.essence.inputs.map((input, idx) => (\n                        <React.Fragment key={idx}>\n                            {input.type === UTXO_INPUT_TYPE && (\n                                <UTXOInput\n                                    key={idx}\n                                    index={idx}\n                                    unlockAddress={this.state.unlockAddresses[idx]}\n                                    input={input}\n                                />\n                            )}\n                        </React.Fragment>\n                    ))}\n                </div>\n\n                <div className=\"card margin-t-m padding-l\">\n                    <div className=\"card--header\">\n                        <h2 className=\"card--header__title\">Outputs</h2>\n                        <span className=\"card--header-count\">\n                            {this.props.payload.essence.outputs.length}\n                        </span>\n                    </div>\n                    {this.props.payload.essence.outputs.map((output, idx) => (\n                        <Output\n                            key={idx}\n                            index={idx + 1}\n                            output={output}\n                            outputId={this.state.transactionId +\n                                    String(idx).padStart(2, \"0\")\n                                            .padEnd(4, \"0\")}\n                        />\n                        )\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TransactionPayload;\n","import { serializeBlock, CONFLICT_REASON_STRINGS, IBlockMetadata, TAGGED_DATA_PAYLOAD_TYPE, MILESTONE_PAYLOAD_TYPE, TRANSACTION_PAYLOAD_TYPE } from \"@iota/iota.js\";\nimport { WriteStream } from \"@iota/util.js\";\nimport React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { ReactComponent as ChevronDownIcon } from \"../../../assets/chevron-down.svg\";\nimport { ReactComponent as ChevronLeftIcon } from \"../../../assets/chevron-left.svg\";\nimport { ReactComponent as DownloadIcon } from \"../../../assets/download.svg\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { BlockTangleStatus } from \"../../../models/blockTangleStatus\";\nimport { TangleService } from \"../../../services/tangleService\";\nimport { ClipboardHelper } from \"../../../utils/clipboardHelper\";\nimport { DownloadHelper } from \"../../../utils/downloadHelper\";\nimport AsyncComponent from \"../../components/layout/AsyncComponent\";\nimport BlockButton from \"../../components/layout/BlockButton\";\nimport Spinner from \"../../components/layout/Spinner\";\nimport BlockTangleState from \"../../components/tangle/BlockTangleState\";\nimport InclusionState from \"../../components/tangle/InclusionState\";\nimport MilestonePayload from \"../../components/tangle/MilestonePayload\";\nimport TaggedDataPayload from \"../../components/tangle/TaggedDataPayload\";\nimport TransactionPayload from \"../../components/tangle/TransactionPayload\";\nimport \"./Block.scss\";\nimport { BlockRouteProps } from \"./BlockRouteProps\";\nimport { BlockState } from \"./BlockState\";\n\n/**\n * Component which will show the block page.\n */\nclass Block extends AsyncComponent<RouteComponentProps<BlockRouteProps>, BlockState> {\n    /**\n     * Service for tangle requests.\n     */\n    private readonly _tangleService: TangleService;\n\n    /**\n     * Timer to check to state update.\n     */\n    private _timerId?: NodeJS.Timer;\n\n    /**\n     * Create a new instance of Block.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps<BlockRouteProps>) {\n        super(props);\n\n        this._tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n        this.state = {\n            dataUrls: {},\n            selectedDataUrl: \"json\"\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        const result = await this._tangleService.search(this.props.match.params.blockId);\n\n        if (result?.block) {\n            const writeStream = new WriteStream();\n            serializeBlock(writeStream, result.block);\n            const finalBytes = writeStream.finalBytes();\n\n            const dataUrls = {\n                json: DownloadHelper.createJsonDataUrl(result.block),\n                bin: DownloadHelper.createBinaryDataUrl(finalBytes),\n                base64: DownloadHelper.createBase64DataUrl(finalBytes),\n                hex: DownloadHelper.createHexDataUrl(finalBytes)\n            };\n\n            this.setState({\n                block: result.block,\n                dataUrls\n            }, async () => {\n                await this.updateBlockDetails();\n            });\n        } else if (result?.unavailable) {\n            this.props.history.replace(\"/explorer/unavailable\");\n        } else {\n            this.props.history.replace(`/explorer/search/${this.props.match.params.blockId}`);\n        }\n    }\n\n    /**\n     * The component will unmount so update flag.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n        if (this._timerId) {\n            clearTimeout(this._timerId);\n            this._timerId = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"block\">\n                <div className=\"content\">\n                    <Link\n                        to=\"/explorer\"\n                        className=\"row middle inline\"\n                    >\n                        <ChevronLeftIcon className=\"secondary\" />\n                        <h3 className=\"secondary margin-l-s\">Back to Explorer</h3>\n                    </Link>\n                    <div className=\"card margin-t-m padding-l\">\n                        <div className=\"row phone-down-column start\">\n                            <h2 className=\"margin-r-l\">\n                                Block\n                            </h2>\n                            {this.state.blockTangleStatus && (\n                                <BlockTangleState\n                                    status={this.state.blockTangleStatus}\n                                    milestoneIndex={this.state.metadata?.referencedByMilestoneIndex}\n                                    onClick={this.state.metadata?.referencedByMilestoneIndex\n                                        ? () => this.props.history.push(\n                                            `/explorer/search/${this.state.metadata?.referencedByMilestoneIndex}`)\n                                        : undefined}\n                                />\n                            )}\n                        </div>\n                        <div className=\"card--label\">\n                            Id\n                        </div>\n                        <div className=\"card--value card--value__mono row\">\n                            <span className=\"margin-r-t\">{this.props.match.params.blockId}</span>\n                            <BlockButton\n                                onClick={() => ClipboardHelper.copy(\n                                    this.props.match.params.blockId\n                                )}\n                                buttonType=\"copy\"\n                                labelPosition=\"top\"\n                            />\n                        </div>\n                        {this.state.block?.parents?.map((parent, idx) => (\n                            <React.Fragment key={idx}>\n                                <div className=\"card--label\">\n                                    Parent Block {idx + 1}\n                                </div>\n                                <div className=\"card--value card--value__mono row\">\n                                    {parent !== \"0\".repeat(64) && (\n                                        <React.Fragment>\n                                            <Link\n                                                className=\"margin-r-t\"\n                                                to={\n                                                    `/explorer/block/${parent}`\n                                                }\n                                            >\n                                                {parent}\n                                            </Link>\n                                            <BlockButton\n                                                onClick={() => ClipboardHelper.copy(\n                                                    parent\n                                                )}\n                                                buttonType=\"copy\"\n                                                labelPosition=\"top\"\n                                            />\n                                        </React.Fragment>\n                                    )}\n                                    {parent === \"0\".repeat(64) && (\n                                        <span>Genesis</span>\n                                    )}\n                                </div>\n                            </React.Fragment>\n                        ))}\n                        <div className=\"card--label\">\n                            Nonce\n                        </div>\n                        <div className=\"card--value row\">\n                            <span className=\"margin-r-t\">{this.state.block?.nonce}</span>\n                        </div>\n                    </div>\n                    <div className=\"card margin-t-m padding-l\">\n                        <h2>\n                            Metadata\n                        </h2>\n                        {!this.state.metadata && !this.state.metadataStatus && (\n                            <Spinner />\n                        )}\n                        {this.state.metadataStatus && (\n                            <p className=\"margin-t-s danger\">{this.state.metadataStatus}</p>\n                        )}\n                        {this.state.metadata && (\n                            <React.Fragment>\n                                <div className=\"card--label\">\n                                    Is Solid\n                                </div>\n                                <div className=\"card--value row\">\n                                    <span className=\"margin-r-t\">\n                                        {this.state.metadata?.isSolid ? \"Yes\" : \"No\"}\n                                    </span>\n                                </div>\n                                <div className=\"card--label\">\n                                    Ledger Inclusion\n                                </div>\n                                <div className=\"card--value row\">\n                                    <InclusionState state={this.state.metadata?.ledgerInclusionState} />\n                                </div>\n                                {this.state.conflictReason && (\n                                    <React.Fragment>\n                                        <div className=\"card--label\">\n                                            Conflict Reason\n                                        </div>\n                                        <div className=\"card--value\">\n                                            {this.state.conflictReason}\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                    {this.state.block?.payload && (\n                        <React.Fragment>\n                            {this.state.block.payload.type === TRANSACTION_PAYLOAD_TYPE && (\n                                <React.Fragment>\n                                    <TransactionPayload payload={this.state.block.payload} />\n                                    {this.state.block.payload.essence.payload && (\n                                        <div className=\"card margin-t-m padding-l\">\n                                            <TaggedDataPayload\n                                                payload={this.state.block.payload.essence.payload}\n                                            />\n                                        </div>\n                                    )}\n                                </React.Fragment>\n                            )}\n                            {this.state.block.payload.type === MILESTONE_PAYLOAD_TYPE && (\n                                <div className=\"card margin-t-m padding-l\">\n                                    <MilestonePayload payload={this.state.block.payload} />\n                                </div>\n                            )}\n                            {this.state.block.payload.type === TAGGED_DATA_PAYLOAD_TYPE && (\n                                <div className=\"card margin-t-m padding-l\">\n                                    <TaggedDataPayload payload={this.state.block.payload} />\n                                </div>\n                            )}\n                        </React.Fragment>\n                    )}\n                    <div className=\"card margin-t-s padding-l\">\n                        <div className=\"row margin-b-s\">\n                            <h2>Tools</h2>\n                        </div>\n                        <div className=\"card--label\">\n                            Export Block\n                        </div>\n                        <div className=\"card--value row\">\n                            <div className=\"select-wrapper\">\n                                <select\n                                    value={this.state.selectedDataUrl}\n                                    onChange={e => this.setState(\n                                        { selectedDataUrl: e.target.value })}\n                                >\n                                    <option value=\"json\">JSON</option>\n                                    <option value=\"bin\">Binary</option>\n                                    <option value=\"hex\">Hex</option>\n                                    <option value=\"base64\">Base64</option>\n                                </select>\n                                <ChevronDownIcon />\n                            </div>\n                            <a\n                                className=\"card--action card--action-plain\"\n                                href={this.state.dataUrls[this.state.selectedDataUrl]}\n                                download={DownloadHelper.filename(\n                                    this.props.match.params.blockId, this.state.selectedDataUrl)}\n                                role=\"button\"\n                            >\n                                <DownloadIcon />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Update the block details.\n     */\n    private async updateBlockDetails(): Promise<void> {\n        const details = await this._tangleService.blockDetails(this.props.match.params.blockId);\n\n        this.setState({\n            metadata: details?.metadata,\n            conflictReason: this.calculateConflictReason(details?.metadata),\n            blockTangleStatus: this.calculateStatus(details?.metadata),\n            metadataStatus: details?.unavailable ? \"The node is currently unavailable or is not synced\" : undefined\n        });\n\n        if (!details?.unavailable &&\n            (!details?.metadata?.referencedByMilestoneIndex || !details?.metadata?.milestoneIndex)) {\n            this._timerId = setTimeout(async () => {\n                await this.updateBlockDetails();\n            }, 10000);\n        }\n    }\n\n    /**\n     * Calculate the status for the block.\n     * @param metadata The metadata to calculate the status from.\n     * @returns The block status.\n     */\n    private calculateStatus(metadata?: IBlockMetadata): BlockTangleStatus {\n        let blockTangleStatus: BlockTangleStatus = \"unknown\";\n\n        if (metadata) {\n            if (metadata.milestoneIndex) {\n                blockTangleStatus = \"milestone\";\n            } else if (metadata.referencedByMilestoneIndex) {\n                blockTangleStatus = \"referenced\";\n            } else {\n                blockTangleStatus = \"pending\";\n            }\n        }\n\n        return blockTangleStatus;\n    }\n\n    /**\n     * Calculate the conflict reason for the block.\n     * @param metadata The metadata to calculate the conflict reason from.\n     * @returns The conflict reason.\n     */\n    private calculateConflictReason(metadata?: IBlockMetadata): string {\n        let conflictReason: string = \"\";\n\n        if (metadata?.ledgerInclusionState === \"conflicting\") {\n            conflictReason = metadata.conflictReason && CONFLICT_REASON_STRINGS[metadata.conflictReason]\n                ? CONFLICT_REASON_STRINGS[metadata.conflictReason]\n                : \"The reason for the conflict is unknown\";\n        }\n\n        return conflictReason;\n    }\n}\n\nexport default Block;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBannerCurve(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      isolation: \"isolate\"\n    },\n    viewBox: \"0 0 34 140\",\n    width: \"34px\",\n    height: \"140px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \" M 34 140 L 0.02 140 L 0.02 140 C 0.007 138.835 0 137.668 0 136.5 L 0 136.5 C 0 87.365 11.818 40.968 32.765 0 L 34 0 L 34 140 Z \",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBannerCurve);\nexport default __webpack_public_path__ + \"static/media/banner-curve.abe8a24f.svg\";\nexport { ForwardRef as ReactComponent };","import { blockIdFromMilestonePayload } from \"@iota/iota.js\";\nimport React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { ReactComponent as ChevronLeftIcon } from \"../../../assets/chevron-left.svg\";\nimport { ReactComponent as ChevronRightIcon } from \"../../../assets/chevron-right.svg\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { TangleService } from \"../../../services/tangleService\";\nimport { ClipboardHelper } from \"../../../utils/clipboardHelper\";\nimport { FormatHelper } from \"../../../utils/formatHelper\";\nimport AsyncComponent from \"../../components/layout/AsyncComponent\";\nimport BlockButton from \"../../components/layout/BlockButton\";\nimport \"./Milestone.scss\";\nimport { MilestoneRouteProps } from \"./MilestoneRouteProps\";\nimport { MilestoneState } from \"./MilestoneState\";\n\n/**\n * Component which will show the milestone page.\n */\nclass Milestone extends AsyncComponent<RouteComponentProps<MilestoneRouteProps>, MilestoneState> {\n    /**\n     * Service for tangle requests.\n     */\n    private readonly _tangleService: TangleService;\n\n    /**\n     * Create a new instance of Milestone.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps<MilestoneRouteProps>) {\n        super(props);\n\n        this._tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n        this.state = {\n            nextIndex: -1,\n            previousIndex: -1,\n            hasPrevious: false,\n            hasNext: false\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        await this.loadIndex(this.props.match.params.milestoneIndex, false);\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"milestone\">\n                <div className=\"content\">\n                    <Link\n                        to=\"/explorer\"\n                        className=\"row middle inline\"\n                    >\n                        <ChevronLeftIcon className=\"secondary\" />\n                        <h3 className=\"secondary margin-l-s\">Back to Explorer</h3>\n                    </Link>\n                    <div className=\"card margin-t-m padding-l\">\n                        <h2>Milestone</h2>\n                        <div className=\"card--label\">\n                            Index\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.milestone?.index}\n                        </div>\n                        <div className=\"card--label\">\n                            Block Id\n                        </div>\n                        <div className=\"card--value card--value__mono row\">\n                            <span className=\"margin-r-t\">\n                                <Link\n                                    to={`/explorer/block/${this.state.blockId}`}\n                                    className=\"info-box--title linked\"\n                                >\n                                    {this.state.blockId}\n                                </Link>\n\n                            </span>\n                            <BlockButton\n                                onClick={() => ClipboardHelper.copy(\n                                    this.state.blockId\n                                )}\n                                buttonType=\"copy\"\n                                labelPosition=\"top\"\n                            />\n                        </div>\n                        <div className=\"card--label\">\n                            Date\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.milestone?.timestamp && FormatHelper.date(\n                                this.state.milestone?.timestamp\n                            )}\n                        </div>\n                        {(this.state.hasPrevious || this.state.hasNext) && (\n                            <React.Fragment>\n                                <hr />\n                                <div className=\"row margin-t-s\">\n                                    <button\n                                        disabled={!this.state.hasPrevious}\n                                        type=\"button\"\n                                        onClick={async () =>\n                                            this.loadIndex(this.state.previousIndex.toString(), true)}\n                                        className=\"card--action margin-r-t\"\n                                    >\n                                        <ChevronLeftIcon className=\"margin-r-t\" />\n                                        Previous Milestone\n                                    </button>\n                                    <button\n                                        disabled={!this.state.hasNext}\n                                        type=\"button\"\n                                        onClick={async () =>\n                                            this.loadIndex(this.state.nextIndex.toString(), true)}\n                                        className=\"card--action margin-r-t\"\n                                    >\n                                        Next Milestone\n                                        <ChevronRightIcon className=\"margin-l-t\" />\n                                    </button>\n                                </div>\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Load the milestone with the given index.\n     * @param index The index to load.\n     * @param updateUrl Update the url.\n     */\n    private async loadIndex(index: string, updateUrl: boolean): Promise<void> {\n        const result = await this._tangleService.milestoneDetails(Number.parseInt(index, 10));\n\n        if (result) {\n            try {\n                const tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n                const info = await tangleService.info();\n\n                this.setState({\n                    blockId: blockIdFromMilestonePayload(info.protocol.protocolVersion, result)\n                });\n            } catch (error) {\n                if (error instanceof Error) {\n                    console.log(error.message);\n                }\n            }\n\n            this.setState({\n                milestone: result\n            }, async () => this.checkForAdjacentMilestones());\n\n            if (updateUrl) {\n                window.history.replaceState(\n                    undefined,\n                    window.document.title,\n                    `/explorer/milestone/${index}`);\n            }\n        } else {\n            this.props.history.replace(`/explorer/search/${index}`);\n        }\n    }\n\n    /**\n     * Check for the previous and next milestones.\n     */\n    private async checkForAdjacentMilestones(): Promise<void> {\n        if (this.state.milestone) {\n            const nextIndex = this.state.milestone.index + 1;\n            const previousIndex = this.state.milestone.index - 1;\n            let hasNext = false;\n            let hasPrevious = false;\n\n            if (previousIndex > 0) {\n                const resultPrevious = await this._tangleService.milestoneDetails(previousIndex);\n                if (resultPrevious) {\n                    hasPrevious = true;\n                }\n            }\n\n            const resultNext = await this._tangleService.milestoneDetails(nextIndex);\n            if (resultNext) {\n                hasNext = true;\n            }\n\n            this.setState({\n                previousIndex,\n                nextIndex,\n                hasPrevious,\n                hasNext\n            });\n\n            if (!hasNext) {\n                setTimeout(async () => this.checkForAdjacentMilestones(), 5000);\n            }\n        }\n    }\n}\n\nexport default Milestone;\n","import React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { ReactComponent as ChevronLeftIcon } from \"../../../assets/chevron-left.svg\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { TangleService } from \"../../../services/tangleService\";\nimport AsyncComponent from \"../../components/layout/AsyncComponent\";\nimport Output from \"../../components/tangle/Output\";\nimport \"./Block.scss\";\nimport { OutputRouteProps } from \"./OutputRouteProps\";\nimport { OutputRouteState } from \"./OutputRouteState\";\n\n/**\n * Component which will show the Output page.\n */\nclass OutputRoute extends AsyncComponent<RouteComponentProps<OutputRouteProps>, OutputRouteState> {\n    /**\n     * Service for tangle requests.\n     */\n    private readonly _tangleService: TangleService;\n\n    /**\n     * Timer to check to state update.\n     */\n    private _timerId?: NodeJS.Timer;\n\n    /**\n     * Create a new instance of Output route.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps<OutputRouteProps>) {\n        super(props);\n\n        this._tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n        this.state = {};\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        const outputResponse = await this._tangleService.outputDetails(this.props.match.params.outputId);\n\n        if (outputResponse) {\n            this.setState({\n                outputResponse\n            }, async () => {\n                await this.updateOutputDetails();\n            });\n        } else {\n            this.props.history.replace(`/explorer/search/${this.props.match.params.outputId}`);\n        }\n    }\n\n    /**\n     * The component will unmount so update flag.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n        if (this._timerId) {\n            clearTimeout(this._timerId);\n            this._timerId = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"block\">\n                <div className=\"content\">\n                    <Link\n                        to=\"/explorer\"\n                        className=\"row middle inline\"\n                    >\n                        <ChevronLeftIcon className=\"secondary\" />\n                        <h3 className=\"secondary margin-l-s\">Back to Explorer</h3>\n                    </Link>\n                    <div className=\"card margin-t-m padding-l\">\n                        <div className=\"row phone-down-column start\">\n                            <h2 className=\"margin-r-l\">\n                                Output\n                            </h2>\n                        </div>\n                        {this.state.outputResponse && (\n                            <Output\n                                output={this.state.outputResponse}\n                                outputId={this.props.match.params.outputId}\n                                showDetails={true}\n                            />\n                        )}\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Update the block details.\n     */\n    private async updateOutputDetails(): Promise<void> {\n        const outputResponse = await this._tangleService.outputDetails(this.props.match.params.outputId);\n\n        if (outputResponse) {\n            this.setState({\n                outputResponse\n            });\n        }\n        this._timerId = setTimeout(async () => {\n            await this.updateOutputDetails();\n        }, 10000);\n    }\n}\n\nexport default OutputRoute;\n","var _path, _path2, _path3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDbIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 10.667C22.6274 10.667 28 8.87613 28 6.66699C28 4.45785 22.6274 2.66699 16 2.66699C9.37258 2.66699 4 4.45785 4 6.66699C4 8.87613 9.37258 10.667 16 10.667Z\",\n    stroke: \"#61E884\",\n    strokeWidth: 2.66667,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28 16C28 18.2133 22.6667 20 16 20C9.33333 20 4 18.2133 4 16\",\n    stroke: \"#61E884\",\n    strokeWidth: 2.66667,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 6.66699V25.3337C4 27.547 9.33333 29.3337 16 29.3337C22.6667 29.3337 28 27.547 28 25.3337V6.66699\",\n    stroke: \"#61E884\",\n    strokeWidth: 2.66667,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDbIcon);\nexport default __webpack_public_path__ + \"static/media/db-icon.0d2bef5e.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgMemory(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 26,\n    viewBox: \"0 0 26 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7 1C7 0.447715 7.44772 0 8 0C8.55229 0 9 0.447715 9 1V4H12V1C12 0.447715 12.4477 0 13 0C13.5523 0 14 0.447715 14 1V4H17V1C17 0.447715 17.4477 0 18 0C18.5523 0 19 0.447715 19 1V4.12602C20.4056 4.4878 21.5122 5.59439 21.874 7H25C25.5523 7 26 7.44772 26 8C26 8.55229 25.5523 9 25 9H22V12H25C25.5523 12 26 12.4477 26 13C26 13.5523 25.5523 14 25 14H22V17H25C25.5523 17 26 17.4477 26 18C26 18.5523 25.5523 19 25 19H21.874C21.5122 20.4056 20.4056 21.5122 19 21.874V25C19 25.5523 18.5523 26 18 26C17.4477 26 17 25.5523 17 25V22H14V25C14 25.5523 13.5523 26 13 26C12.4477 26 12 25.5523 12 25V22H9V25C9 25.5523 8.55229 26 8 26C7.44772 26 7 25.5523 7 25V21.874C5.59439 21.5122 4.4878 20.4056 4.12602 19H1C0.447715 19 0 18.5523 0 18C0 17.4477 0.447715 17 1 17H4V14H1C0.447715 14 0 13.5523 0 13C0 12.4477 0.447715 12 1 12H4V9H1C0.447715 9 0 8.55229 0 8C0 7.44772 0.447715 7 1 7H4.12602C4.4878 5.59439 5.59439 4.4878 7 4.12602V1ZM11 9C9.89543 9 9 9.89543 9 11V15C9 16.1046 9.89543 17 11 17H15C16.1046 17 17 16.1046 17 15V11C17 9.89543 16.1046 9 15 9H11Z\",\n    fill: \"#666AF6\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMemory);\nexport default __webpack_public_path__ + \"static/media/memory.85492509.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPruning(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 25,\n    viewBox: \"0 0 24 25\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.9999 12.8115L9.67454 15.5795C10.3612 16.5407 10.7088 17.703 10.6624 18.8833C10.6161 20.0637 10.1785 21.1951 9.41854 22.0995C8.50834 23.1815 7.20609 23.8582 5.79753 23.9812C4.38897 24.1042 2.98915 23.6634 1.90521 22.7555C1.36875 22.3064 0.926138 21.7558 0.602702 21.1354C0.279265 20.515 0.0813554 19.8368 0.0202999 19.1398C-0.0407557 18.4428 0.0362414 17.7406 0.246884 17.0734C0.457528 16.4062 0.797681 15.7871 1.24788 15.2515C2.0087 14.3467 3.04825 13.72 4.20357 13.4695C5.35889 13.219 6.56467 13.359 7.63188 13.8675L10.2585 10.7395L3.07454 2.18885C2.96202 2.05495 2.87699 1.90019 2.82433 1.7334C2.77166 1.56662 2.7524 1.39109 2.76763 1.21685C2.78286 1.04261 2.83229 0.873089 2.9131 0.717973C2.9939 0.562856 3.10449 0.42519 3.23854 0.31285C3.37266 0.200246 3.52764 0.115165 3.69464 0.0624652C3.86165 0.0097655 4.03739 -0.00952042 4.21185 0.00570882C4.3863 0.0209381 4.55605 0.0703841 4.71139 0.151223C4.86674 0.232062 5.00463 0.342711 5.11721 0.47685L11.9999 8.66885L18.8812 0.47685C18.9938 0.342517 19.1318 0.231703 19.2872 0.150745C19.4427 0.0697879 19.6126 0.0202768 19.7872 0.00504451C19.9618 -0.0101878 20.1377 0.00915768 20.3049 0.0619742C20.472 0.114791 20.6271 0.200042 20.7612 0.31285C20.8953 0.42519 21.0059 0.562856 21.0867 0.717973C21.1675 0.873089 21.2169 1.04261 21.2321 1.21685C21.2474 1.39109 21.2281 1.56662 21.1754 1.7334C21.1228 1.90019 21.0377 2.05495 20.9252 2.18885L13.7399 10.7395L16.3665 13.8662C17.4338 13.3577 18.6395 13.2177 19.7948 13.4682C20.9502 13.7186 21.9897 14.3454 22.7505 15.2502C23.2007 15.7858 23.5409 16.4049 23.7515 17.0721C23.9622 17.7393 24.0392 18.4415 23.9781 19.1385C23.9171 19.8355 23.7192 20.5136 23.3957 21.134C23.0723 21.7545 22.6297 22.305 22.0932 22.7542C21.0093 23.6621 19.6094 24.1029 18.2009 23.9799C16.7923 23.8569 15.4901 23.1802 14.5799 22.0982C13.8199 21.1938 13.3823 20.0624 13.336 18.882C13.2896 17.7016 13.6372 16.5394 14.3239 15.5782L11.9999 12.8115ZM3.61988 20.7142C4.16456 21.1353 4.85102 21.3295 5.53559 21.256C6.22017 21.1825 6.84979 20.8471 7.29269 20.32C7.73559 19.7928 7.95744 19.1148 7.91181 18.4278C7.86618 17.7408 7.55661 17.0981 7.04788 16.6342C6.50587 16.18 5.80581 15.9595 5.10137 16.021C4.39692 16.0825 3.74566 16.421 3.29054 16.9622C2.34388 18.0889 2.49054 19.7689 3.61988 20.7142ZM20.3799 20.7142C20.648 20.4895 20.8692 20.2142 21.0308 19.9039C21.1924 19.5937 21.2912 19.2547 21.3217 18.9062C21.3522 18.5577 21.3136 18.2066 21.2083 17.8731C21.103 17.5395 20.9329 17.23 20.7079 16.9622C20.2528 16.4214 19.6018 16.0832 18.8977 16.0217C18.1936 15.9602 17.4938 16.1805 16.9519 16.6342C16.6837 16.8588 16.4624 17.134 16.3007 17.4442C16.1389 17.7544 16.0399 18.0934 16.0093 18.4419C15.9788 18.7904 16.0172 19.1415 16.1224 19.4751C16.2276 19.8087 16.3976 20.1183 16.6225 20.3862C17.5692 21.5129 19.2519 21.6595 20.3799 20.7142Z\",\n    fill: \"#FF8B5C\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPruning);\nexport default __webpack_public_path__ + \"static/media/pruning.eef4ee15.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEyeClosed(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m23.7055,11.46295q-1.43475,-3.0227 -3.41479,-4.93035l-1.38442,1.38442c1.12892,1.07886 2.11227,2.49021 2.96257,4.24794c-2.26383,4.68547 -5.47726,6.9112 -9.86887,6.9112q-1.97731,0 -3.64253,-0.60895l-1.50006,1.50006q2.3128,1.06797 5.14259,1.06797q7.84449,0 11.70551,-8.171a1.64046,1.64046 0 0 0 0,-1.40129zm-1.72971,-8.72444l-1.15994,-1.1613a0.21768,0.21768 0 0 0 -0.30801,0l-2.9759,2.97454q-2.4611,-1.25708 -5.53196,-1.25708q-7.84449,0 -11.70551,8.171a1.64073,1.64073 0 0 0 0,1.40129q1.5425,3.24881 3.71409,5.20816l-2.8793,2.87849a0.21768,0.21768 0 0 0 0,0.30774l1.16157,1.16157a0.21768,0.21768 0 0 0 0.30774,0l19.37722,-19.3764a0.21768,0.21768 0 0 0 0,-0.30801zm-19.84468,9.42645c2.26655,-4.68547 5.47999,-6.9112 9.86887,-6.9112c1.484,0 2.83332,0.25468 4.05747,0.77248l-1.91282,1.91282a4.78886,4.78886 0 0 0 -6.47939,6.47939l-2.26981,2.26981c-1.25626,-1.10879 -2.3392,-2.61102 -3.26432,-4.5233zm6.71257,0a3.05045,3.05045 0 0 1 3.97802,-2.90298l-3.83354,3.83354a3.04746,3.04746 0 0 1 -0.14448,-0.93056z\",\n    fill: \"currentColor\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m11.89115,15.21242c-0.09414,0 -0.18693,-0.00435 -0.2789,-0.01279l-1.4372,1.4372a4.79131,4.79131 0 0 0 6.18798,-6.18798l-1.4372,1.4372c0.00843,0.09197 0.01279,0.18475 0.01279,0.2789a3.04583,3.04583 0 0 1 -3.04746,3.04746z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeClosed);\nexport default __webpack_public_path__ + \"static/media/eye-closed.6e736a4a.svg\";\nexport { ForwardRef as ReactComponent };","import { ArrayHelper } from \"@iota/crypto.js\";\nimport classNames from \"classnames\";\nimport React, { ReactNode } from \"react\";\nimport AsyncComponent from \"./AsyncComponent\";\nimport \"./Graph.scss\";\nimport { GraphProps } from \"./GraphProps\";\nimport { GraphState } from \"./GraphState\";\n\n/**\n * Graph.\n */\nclass Graph extends AsyncComponent<GraphProps, GraphState> {\n    /**\n     * The graph element.\n     */\n    private _graphElement: SVGSVGElement | null;\n\n    /**\n     * The resize method\n     */\n    private readonly _resize: () => void;\n\n    /**\n     * Create a new instance of Graph.\n     * @param props The props.\n     */\n    constructor(props: GraphProps) {\n        super(props);\n\n        this._graphElement = null;\n        this._resize = () => this.resize();\n\n        this.state = {};\n    }\n\n    /**\n     * The component did mount.\n     */\n    public componentDidMount(): void {\n        super.componentDidMount();\n        window.addEventListener(\"resize\", this._resize);\n    }\n\n    /**\n     * The component updated.\n     * @param prevProps The previous properties.\n     */\n    public componentDidUpdate(prevProps: GraphProps): void {\n        let dataEqual = this.props.series.length === prevProps.series.length;\n        if (dataEqual) {\n            for (let i = 0; i < this.props.series.length; i++) {\n                dataEqual = ArrayHelper.equal(this.props.series[i].values, prevProps.series[i].values);\n                if (!dataEqual) {\n                    break;\n                }\n            }\n        }\n        if (!dataEqual) {\n            this.setState(this.calculateGraph());\n        }\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n        this._graphElement = null;\n        window.removeEventListener(\"resize\", this._resize);\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className={classNames(\"graph\", this.props.className)}>\n                <div className=\"title-row\">\n                    <div className=\"caption\">{this.props.caption}</div>\n                    <div className=\"key\">\n                        {this.props.series.length > 1 && this.props.series.map((s, idx) => (\n                            <span key={idx} className=\"key\">\n                                <div className={classNames(\"key-color\", s.className)} />\n                                <span className=\"key-label\">\n                                    {s.label}\n                                </span>\n                            </span>\n                        ))}\n                    </div>\n                </div>\n                <span className=\"canvas\">\n                    <svg\n                        ref={r => this.setElement(r)}\n                    >\n                        {this.state.paths?.map((b, idx) => (\n                            <path key={idx} d={b.path} className={b.className} strokeWidth={1} />\n                        ))}\n                        {this.state.text?.map((t, idx) => (\n                            <text\n                                key={idx}\n                                x={t.x}\n                                y={t.y}\n                                textAnchor={t.anchor ?? \"start\"}\n                                className=\"axis-label\"\n                            >\n                                {t.content}\n                            </text>\n                        ))}\n                    </svg>\n                </span>\n            </div>\n        );\n    }\n\n    /**\n     * Set the graph element.\n     * @param element The element.\n     */\n    private setElement(element: SVGSVGElement | null): void {\n        setTimeout(() => {\n            if (!this._graphElement && element) {\n                this._graphElement = element;\n                this.setState(this.calculateGraph());\n            }\n        }, 100);\n    }\n\n    /**\n     * The window was resized.\n     */\n    private resize(): void {\n        if (this._graphElement) {\n            this.setState(this.calculateGraph());\n        }\n    }\n\n    /**\n     * Calculate the graph points.\n     * @returns The graph points.\n     */\n    private calculateGraph(): {\n        paths: {\n            path: string;\n            className: string;\n        }[];\n        text: {\n            x: number;\n            y: number;\n            content: string;\n        }[];\n    } {\n        const paths = [];\n        const text = [];\n        const axis = [];\n\n        if (this._graphElement && this.props.series.length > 0) {\n            const axisLabelHeight = 20;\n\n            try {\n                const graphWidth = this._graphElement.width.baseVal.value;\n                const graphHeight = this._graphElement.height.baseVal.value - axisLabelHeight;\n\n                let seriesMaxLength = this.props.seriesMaxLength;\n                if (graphWidth < 500) {\n                    seriesMaxLength /= 2;\n                }\n\n                const actualSeriesValues: number[][] =\n                    this.props.series.map(s => s.values.slice(-seriesMaxLength));\n\n                let maxY = 0;\n                const maxItems = Math.min(seriesMaxLength, actualSeriesValues[0].length);\n\n                for (let i = 0; i < actualSeriesValues.length; i++) {\n                    for (let j = 0; j < actualSeriesValues[i].length; j++) {\n                        if (actualSeriesValues[i][j] > maxY) {\n                            maxY = actualSeriesValues[i][j];\n                        }\n                    }\n                }\n\n                if (maxY === 0) {\n                    maxY = 4;\n                }\n\n                const yUsage = 0.9;\n                const axisLabelWidth = 30;\n                const marginLeft = 10;\n                const marginRight = 10;\n                const axisLineCount = 4;\n                const decimalPlaces = maxY <= 2 ? 2 : 0;\n\n                const yScale = (graphHeight * yUsage) / maxY;\n                const barWidth = (graphWidth - axisLabelWidth - marginLeft - marginRight) /\n                    (seriesMaxLength * this.props.series.length);\n                const axisSpacing = graphHeight / (axisLineCount - 1);\n\n                for (let i = 0; i < axisLineCount; i++) {\n                    axis.push({\n                        path: `M ${axisLabelWidth} ${graphHeight - (i * axisSpacing)\n                            } L ${graphWidth} ${graphHeight - (i * axisSpacing)}`,\n                        className: \"axis-color\"\n                    });\n                    text.push({\n                        x: axisLabelWidth - 5,\n                        y: graphHeight - (i * axisSpacing) + 2,\n                        anchor: \"end\",\n                        content: (i * ((maxY / yUsage) / (axisLineCount - 1))).toFixed(decimalPlaces)\n                    });\n                }\n\n                if (this.props.timeInterval && this.props.endTime) {\n                    let numTimeEntries = this.props.timeMarkers ?? Math.floor(graphWidth / 100);\n                    if (graphWidth < 300) {\n                        numTimeEntries = 3;\n                    }\n                    const startTime = this.props.endTime - (maxItems * this.props.timeInterval);\n                    const timePerInterval = (seriesMaxLength * this.props.timeInterval) / numTimeEntries;\n                    for (let i = 0; i <= numTimeEntries; i++) {\n                        const dt = new Date(startTime + (i * timePerInterval));\n                        text.push({\n                            x: marginLeft + (axisLabelWidth / 2) +\n                                (((graphWidth - marginLeft - marginRight) / numTimeEntries) * i),\n                            y: graphHeight + axisLabelHeight,\n                            anchor: \"middle\",\n                            content: `${dt.getHours().toString()\n                                .padStart(2, \"0\")}:${dt.getMinutes().toString()\n                                    .padStart(2, \"0\")}.${dt.getSeconds().toString()\n                                        .padStart(2, \"0\")}`\n                        });\n                    }\n                }\n\n                for (let i = 0; i < maxItems; i++) {\n                    for (let j = 0; j < actualSeriesValues.length; j++) {\n                        const val = actualSeriesValues[j][i];\n                        paths.push({\n                            path: this.calculatePath(\n                                graphHeight,\n                                barWidth,\n                                axisLabelWidth + marginLeft,\n                                j + (i * actualSeriesValues.length),\n                                val * yScale),\n                            className: this.props.series[j].className\n                        });\n                    }\n                }\n            } catch {}\n        }\n\n        return {\n            text,\n            paths: [...axis, ...paths.reverse()]\n        };\n    }\n\n    /**\n     * Calculate the path for the bar.\n     * @param graphHeight The height of the graph.\n     * @param barWidth The width of bars.\n     * @param marginLeft The left margin for axis.\n     * @param index The bar index.\n     * @param scaledVal The end value.\n     * @returns The path.\n     */\n    private calculatePath(\n        graphHeight: number, barWidth: number, marginLeft: number,\n        index: number, scaledVal: number): string {\n        const spacing = 2;\n        let pathSegments = [`M ${marginLeft + (index * barWidth) + spacing} ${graphHeight}`];\n\n        pathSegments = [\n            ...pathSegments,\n            ...(scaledVal <= 0 ? [\n                `L ${marginLeft + ((index * barWidth) + spacing)} ${graphHeight - 1}`,\n                `L ${marginLeft + ((index + 1) * barWidth) - spacing} ${graphHeight - 1}`,\n                `L ${marginLeft + ((index + 1) * barWidth) - spacing} ${graphHeight}`\n            ] : [\n                    `L ${marginLeft + (index * barWidth) + spacing} ${graphHeight - scaledVal}`,\n                    `C ${marginLeft + (index * barWidth) + spacing} ${graphHeight - scaledVal - 10\n                    } ${marginLeft + ((index + 1) * barWidth) - spacing} ${graphHeight - scaledVal - 10\n                    } ${marginLeft + ((index + 1) * barWidth) - spacing} ${graphHeight - scaledVal}`,\n                    `L ${marginLeft + ((index + 1) * barWidth) - spacing} ${graphHeight}`\n                ])\n        ];\n\n        return pathSegments.join(\" \");\n    }\n}\n\nexport default Graph;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgEye(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m23.69284,11.29876c-2.57667,-5.42785 -6.47156,-8.15945 -11.69285,-8.15945c-5.224,0 -9.11619,2.73159 -11.69285,8.16217a1.63896,1.63896 0 0 0 0,1.39977c2.57667,5.42785 6.47156,8.15945 11.69285,8.15945c5.224,0 9.11619,-2.73159 11.69285,-8.16217c0.20929,-0.44032 0.20929,-0.9513 0,-1.39977zm-11.69285,7.60498c-4.38414,0 -7.5941,-2.22332 -9.8582,-6.90373c2.2641,-4.68041 5.47406,-6.90373 9.8582,-6.90373c4.38414,0 7.5941,2.22332 9.8582,6.90373c-2.26138,4.68041 -5.47134,6.90373 -9.8582,6.90373zm-0.10872,-11.68742c-2.6419,0 -4.78369,2.14179 -4.78369,4.78369s2.14179,4.78369 4.78369,4.78369s4.78369,-2.14179 4.78369,-4.78369s-2.14179,-4.78369 -4.78369,-4.78369zm0,7.82785c-1.68245,0 -3.04417,-1.36172 -3.04417,-3.04417s1.36172,-3.04417 3.04417,-3.04417s3.04417,1.36172 3.04417,3.04417s-1.36172,3.04417 -3.04417,3.04417z\",\n    fill: \"currentColor\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEye);\nexport default __webpack_public_path__ + \"static/media/eye.8f64de3b.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _circle2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgHealthWarning(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    opacity: 0.4,\n    cx: 8,\n    cy: 8,\n    r: 8,\n    fill: \"#FF9800\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 8,\n    cy: 8,\n    r: 4,\n    fill: \"#FF9800\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHealthWarning);\nexport default __webpack_public_path__ + \"static/media/health-warning.47f112ef.svg\";\nexport { ForwardRef as ReactComponent };","import { IPeer } from \"@iota/iota.js\";\n\n/**\n * Class to help with processing of data.\n */\nexport class DataHelper {\n    /**\n     * Format the address for the peer.\n     * @param peer The peer.\n     * @returns The formatted address.\n     */\n    public static formatPeerAddress(peer: IPeer): string | undefined {\n        let address;\n\n        if (peer.multiAddresses) {\n            for (let i = 0; i < peer.multiAddresses.length && !address; i++) {\n                address = this.extractAddress(peer.multiAddresses[i]);\n            }\n        }\n\n        return address;\n    }\n\n    /**\n     * Extract an an address.\n     * @param address The address to extract.\n     * @returns The formatted address.\n     */\n    public static extractAddress(address: string): string | undefined {\n        let addr = DataHelper.extractIp4(address);\n\n        if (!addr) {\n            addr = DataHelper.extractIp6(address);\n        }\n\n        if (!addr) {\n            addr = DataHelper.extractDns(address);\n        }\n\n        return addr;\n    }\n\n    /**\n     * Extract and format an IPv4 address.\n     * @param address The address to extract.\n     * @returns The formatted address.\n     */\n    public static extractIp4(address: string): string | undefined {\n        const parts = /\\/ip4\\/((?:\\d{1,3}.){3}\\d{1,3})\\/tcp\\/(\\d*)/.exec(address);\n\n        if (parts && parts.length === 3) {\n            return `${parts[1]}:${parts[2]}`;\n        }\n    }\n\n    /**\n     * Extract and format an IPv6 address.\n     * @param address The address to extract.\n     * @returns The formatted address.\n     */\n    public static extractIp6(address: string): string | undefined {\n        const parts = /\\/ip6\\/(.*?)\\/tcp\\/(\\d*)/.exec(address);\n\n        if (parts && parts.length === 3) {\n            return `${parts[1]}:${parts[2]}`;\n        }\n    }\n\n    /**\n     * Extract and format a dns address.\n     * @param addr The address to extract.\n     * @returns The formatted address.\n     */\n    public static extractDns(addr: string): string | undefined {\n        const parts = /\\/dns\\/(.*?)\\/tcp\\/(\\d*)/.exec(addr);\n\n        if (parts && parts.length === 3) {\n            return `${parts[1]}:${parts[2]}`;\n        }\n    }\n\n    /**\n     * Sort a list of peers.\n     * @param peers The peers to sort.\n     * @returns The sorted peers.\n     */\n    public static sortPeers<T extends { health: number; id: string; alias?: string }>(peers: T[]): T[] {\n        return peers.sort((a, b) => {\n            if (a.health !== b.health) {\n                return b.health - a.health;\n            }\n\n            return (a.alias ?? a.id).localeCompare(b.alias ?? b.id);\n        });\n    }\n\n    /**\n     * Calculate the health of the peer.\n     * @param peer The peer to calculate the health of.\n     * @param confirmedMilestoneIndex Confirmed milestone index of the node.\n     * @param latestMilestoneIndex Latest milestone index of the node.\n     * @returns The health.\n     */\n    public static calculateHealth(peer: IPeer, confirmedMilestoneIndex: number, latestMilestoneIndex: number): number {\n        let health = 0;\n\n        if (peer.connected) {\n            health = (DataHelper.calculateIsSynced(peer, latestMilestoneIndex) &&\n                    peer.gossip?.heartbeat &&\n                    peer.gossip?.heartbeat?.prunedMilestoneIndex < confirmedMilestoneIndex) ? 2 : 1;\n        }\n\n        return health;\n    }\n\n    /**\n     * Calculate the sync status of the peer.\n     * @param peer The peer to calculate the sync status of.\n     * @param latestMilestoneIndex Latest milestone index of the node.\n     * @returns The sync status.\n     */\n    public static calculateIsSynced(peer: IPeer, latestMilestoneIndex: number): boolean {\n        let isSynced = false;\n\n        if (peer.gossip?.heartbeat) {\n            const latestKnownMilestoneIndex = (latestMilestoneIndex < peer.gossip.heartbeat.latestMilestoneIndex)\n            ? peer.gossip.heartbeat.latestMilestoneIndex : latestMilestoneIndex;\n\n            if (peer.gossip.heartbeat.solidMilestoneIndex >= (latestKnownMilestoneIndex - 2)) {\n                isSynced = true;\n            }\n        }\n\n        return isSynced;\n    }\n}\n","import { IPeer } from \"@iota/iota.js\";\nimport React, { Component, ReactNode } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ReactComponent as EyeClosedIcon } from \"../../../assets/eye-closed.svg\";\nimport { ReactComponent as EyeIcon } from \"../../../assets/eye.svg\";\nimport { ReactComponent as HealthBadIcon } from \"../../../assets/health-bad.svg\";\nimport { ReactComponent as HealthGoodIcon } from \"../../../assets/health-good.svg\";\nimport { ReactComponent as HealthWarningIcon } from \"../../../assets/health-warning.svg\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { ISyncStatus } from \"../../../models/websocket/ISyncStatus\";\nimport { WebSocketTopic } from \"../../../models/websocket/webSocketTopic\";\nimport { MetricsService } from \"../../../services/metricsService\";\nimport { SettingsService } from \"../../../services/settingsService\";\nimport { DataHelper } from \"../../../utils/dataHelper\";\nimport \"./PeersSummaryPanel.scss\";\nimport { PeersSummaryState } from \"./PeersSummaryState\";\n\n/**\n * Display a list of the peers.\n */\nclass PeersSummaryPanel extends Component<unknown, PeersSummaryState> {\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The settings service.\n     */\n    private readonly _settingsService: SettingsService;\n\n    /**\n     * The peer subscription id.\n     */\n    private _peerSubscription?: string;\n\n    /**\n     * The sync status subscription id.\n     */\n    private _syncStatusSubscription?: string;\n\n    /**\n     * Create a new instance of PeersSummaryPanel.\n     * @param props The props.\n     */\n    constructor(props: unknown) {\n        super(props);\n\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n        this._settingsService = ServiceFactory.get<SettingsService>(\"settings\");\n\n        this.state = {\n            blindMode: this._settingsService.getBlindMode()\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        this._peerSubscription = this._metricsService.subscribe<IPeer[]>(\n            WebSocketTopic.PeerMetric,\n            data => {\n                this.handleData(data);\n            });\n\n        this._syncStatusSubscription = this._metricsService.subscribe<ISyncStatus>(\n            WebSocketTopic.SyncStatus,\n            data => {\n                if (data) {\n                    const cmi = data.cmi;\n                    const lmi = data.lmi;\n\n                    if (cmi && cmi !== this.state.cmi) {\n                        this.setState({ cmi });\n                    }\n\n                    if (lmi && lmi !== this.state.lmi) {\n                        this.setState({ lmi });\n                    }\n                }\n            });\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        if (this._peerSubscription) {\n            this._metricsService.unsubscribe(this._peerSubscription);\n            this._peerSubscription = undefined;\n        }\n\n        if (this._syncStatusSubscription) {\n            this._metricsService.unsubscribe(this._syncStatusSubscription);\n            this._syncStatusSubscription = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"peers-summary\">\n                <div className=\"row middle spread margin-b-m\">\n                    <h4>Peers</h4>\n                    <button\n                        type=\"button\"\n                        onClick={() => this.toggleBlindMode()}\n                        className=\"peers-summary--icon-button\"\n                    >\n                        {this.state.blindMode ? <EyeIcon /> : <EyeClosedIcon />}\n                    </button>\n                </div>\n                {!this.state.peers && (\n                    <p>There are no peers.</p>\n                )}\n                {this.state.peers?.map((p, idx) => (\n                    <Link\n                        to={`/peers/${p.id}`}\n                        key={idx}\n                        className=\"peers-summary--item\"\n                    >\n                        <div className=\"peer-health-icon\">\n                            {p.health === 0 && <HealthBadIcon />}\n                            {p.health === 1 && <HealthWarningIcon />}\n                            {p.health === 2 && <HealthGoodIcon />}\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"peer-id\">\n                                {this.state.blindMode && (\"*\".repeat((p.alias ?? p.id).length))}\n                                {!this.state.blindMode && (p.alias ?? p.id)}\n                            </div>\n                            {p.address && (\n                                <div className=\"peer-id\">\n                                    {this.state.blindMode ? \"*\".repeat(p.address.length) : p.address}\n                                </div>\n                            )}\n                        </div>\n                    </Link>\n                ))}\n            </div>\n        );\n    }\n\n    /**\n     * Handle the peer data.\n     * @param data The data to handle.\n     */\n    private handleData(data: IPeer[]): void {\n        let sortedPeers;\n\n        if (data) {\n            sortedPeers = DataHelper.sortPeers(data.map(p => {\n                const cmi = this.state.cmi ? this.state.cmi : 0;\n                const lmi = this.state.lmi ? this.state.lmi : 0;\n\n                return {\n                    id: p.id,\n                    alias: p.alias,\n                    health: DataHelper.calculateHealth(p, cmi, lmi),\n                    address: DataHelper.formatPeerAddress(p)\n                };\n            }));\n        }\n\n        this.setState({\n            peers: sortedPeers\n        });\n    }\n\n    /**\n     * Toggle the flag for blind mode.\n     */\n    private toggleBlindMode(): void {\n        this._settingsService.setBlindMode(!this.state.blindMode);\n        this.setState({ blindMode: !this.state.blindMode });\n    }\n}\n\nexport default PeersSummaryPanel;\n","import React, { ReactNode } from \"react\";\nimport { ReactComponent as BannerCurve } from \"../../assets/banner-curve.svg\";\nimport { ReactComponent as DbIcon } from \"../../assets/db-icon.svg\";\nimport { ReactComponent as MemoryIcon } from \"../../assets/memory.svg\";\nimport { ReactComponent as MilestoneIcon } from \"../../assets/milestone.svg\";\nimport { ReactComponent as PruningIcon } from \"../../assets/pruning.svg\";\nimport { ReactComponent as UptimeIcon } from \"../../assets/uptime.svg\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { IBpsMetrics } from \"../../models/websocket/IBpsMetrics\";\nimport { IDBSizeMetric } from \"../../models/websocket/IDBSizeMetric\";\nimport { INodeStatus } from \"../../models/websocket/INodeStatus\";\nimport { IPublicNodeStatus } from \"../../models/websocket/IPublicNodeStatus\";\nimport { ISyncStatus } from \"../../models/websocket/ISyncStatus\";\nimport { WebSocketTopic } from \"../../models/websocket/webSocketTopic\";\nimport { EventAggregator } from \"../../services/eventAggregator\";\nimport { MetricsService } from \"../../services/metricsService\";\nimport { NodeConfigService } from \"../../services/nodeConfigService\";\nimport { SettingsService } from \"../../services/settingsService\";\nimport { ThemeService } from \"../../services/themeService\";\nimport { BrandHelper } from \"../../utils/brandHelper\";\nimport { FormatHelper } from \"../../utils/formatHelper\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport Graph from \"../components/layout/Graph\";\nimport InfoPanel from \"../components/layout/InfoPanel\";\nimport PeersSummaryPanel from \"../components/tangle/PeersSummaryPanel\";\nimport \"./Home.scss\";\nimport { HomeState } from \"./HomeState\";\n\n/**\n * Home panel.\n */\nclass Home extends AsyncComponent<unknown, HomeState> {\n    /**\n     * The theme service.\n     */\n    private readonly _themeService: ThemeService;\n\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The settings service.\n     */\n    private readonly _settingsService: SettingsService;\n\n    /**\n     * The status subscription id.\n     */\n    private _nodeStatusSubscription?: string;\n\n    /**\n     * The public node status subscription id.\n     */\n    private _publicNodeStatusSubscription?: string;\n\n    /**\n     * The sync status subscription id.\n     */\n    private _syncStatusSubscription?: string;\n\n    /**\n     * The bps metrics subscription id.\n     */\n    private _bpsMetricsSubscription?: string;\n\n    /**\n     * The database size metrics subscription id.\n     */\n    private _databaseSizeSubscription?: string;\n\n    /**\n     * The network id.\n     */\n    private readonly _networkId?: string;\n\n    /**\n     * Create a new instance of Home.\n     * @param props The props.\n     */\n    constructor(props: unknown) {\n        super(props);\n\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n        this._themeService = ServiceFactory.get<ThemeService>(\"theme\");\n        this._settingsService = ServiceFactory.get<SettingsService>(\"settings\");\n\n        const nodeConfigService = ServiceFactory.get<NodeConfigService>(\"node-config\");\n        this._networkId = nodeConfigService.getNetworkId();\n\n        this.state = {\n            nodeName: \"\",\n            nodeId: \"\",\n            displayVersion: \"\",\n            displayLatestVersion: \"\",\n            lmi: \"-\",\n            cmi: \"-\",\n            pruningIndex: \"-\",\n            memory: \"-\",\n            dbLedgerSizeFormatted: \"-\",\n            dbTangleSizeFormatted: \"-\",\n            uptime: \"-\",\n            lastReceivedBpsTime: 0,\n            bpsIncoming: [],\n            bpsOutgoing: [],\n            bannerSrc: \"\",\n            blindMode: this._settingsService.getBlindMode()\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        this.setState({\n            bannerSrc: await BrandHelper.getBanner(this._themeService.get())\n        });\n\n        EventAggregator.subscribe(\"theme\", \"home\", async (theme: string) => {\n            this.setState({\n                bannerSrc: await BrandHelper.getBanner(theme)\n            });\n        });\n\n        this._publicNodeStatusSubscription = this._metricsService.subscribe<IPublicNodeStatus>(\n            WebSocketTopic.PublicNodeStatus,\n            data => {\n                if (data) {\n                    const pruningIndex = data.pruningIndex.toString();\n\n                    if (pruningIndex !== this.state.pruningIndex) {\n                        this.setState({ pruningIndex });\n                    }\n                }\n            });\n\n        this._nodeStatusSubscription = this._metricsService.subscribe<INodeStatus>(\n            WebSocketTopic.NodeStatus,\n            data => {\n                if (data) {\n                    const nodeName = data.nodeAlias ? data.nodeAlias : BrandHelper.getConfiguration().name;\n                    const nodeId = data.nodeId || \"No node Id.\";\n                    const uptime = FormatHelper.duration(data.uptime);\n                    const memory = FormatHelper.iSize(data.memUsage);\n\n                    if (nodeName !== this.state.nodeName) {\n                        this.setState({ nodeName });\n                    }\n\n                    if (nodeId !== this.state.nodeId) {\n                        this.setState({ nodeId });\n                    }\n\n                    if (uptime !== this.state.uptime) {\n                        this.setState({ uptime });\n                    }\n\n                    if (memory !== this.state.memory) {\n                        this.setState({ memory });\n                    }\n\n                    this.checkVersion(data.version, data.latestVersion);\n                }\n            });\n\n        this._syncStatusSubscription = this._metricsService.subscribe<ISyncStatus>(\n            WebSocketTopic.SyncStatus,\n            data => {\n                if (data) {\n                    const lmi = data.lmi ? data.lmi.toString() : \"\";\n                    const cmi = data.cmi ? data.cmi.toString() : \"\";\n\n                    if (lmi !== this.state.lmi) {\n                        this.setState({ lmi });\n                    }\n\n                    if (cmi !== this.state.cmi) {\n                        this.setState({ cmi });\n                    }\n                }\n            });\n\n        this._bpsMetricsSubscription = this._metricsService.subscribe<IBpsMetrics>(\n            WebSocketTopic.BPSMetrics,\n            undefined,\n            allData => {\n                const nonNull = allData.filter(d => d !== undefined && d !== null);\n\n                const bpsIncoming = nonNull.map(m => m.incoming);\n                const bpsOutgoing = nonNull.map(m => m.outgoing);\n\n                this.setState({ bpsIncoming, bpsOutgoing, lastReceivedBpsTime: Date.now() });\n            }\n        );\n\n        this._databaseSizeSubscription = this._metricsService.subscribe<IDBSizeMetric>(\n            WebSocketTopic.DBSizeMetric,\n            data => {\n                if (data) {\n                    const dbLedgerSizeFormatted = FormatHelper.size(data.utxo);\n\n                    if (dbLedgerSizeFormatted !== this.state.dbLedgerSizeFormatted) {\n                        this.setState({ dbLedgerSizeFormatted });\n                    }\n\n                    const dbTangleSizeFormatted = FormatHelper.size(data.tangle);\n\n                    if (dbTangleSizeFormatted !== this.state.dbTangleSizeFormatted) {\n                        this.setState({ dbTangleSizeFormatted });\n                    }\n                }\n            });\n\n        EventAggregator.subscribe(\"settings.blindMode\", \"home\", blindMode => {\n            this.setState({ blindMode });\n        });\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n\n        EventAggregator.unsubscribe(\"theme\", \"home\");\n\n        if (this._nodeStatusSubscription) {\n            this._metricsService.unsubscribe(this._nodeStatusSubscription);\n            this._nodeStatusSubscription = undefined;\n        }\n\n        if (this._publicNodeStatusSubscription) {\n            this._metricsService.unsubscribe(this._publicNodeStatusSubscription);\n            this._publicNodeStatusSubscription = undefined;\n        }\n\n        if (this._syncStatusSubscription) {\n            this._metricsService.unsubscribe(this._syncStatusSubscription);\n            this._syncStatusSubscription = undefined;\n        }\n\n        if (this._bpsMetricsSubscription) {\n            this._metricsService.unsubscribe(this._bpsMetricsSubscription);\n            this._bpsMetricsSubscription = undefined;\n        }\n\n        if (this._databaseSizeSubscription) {\n            this._metricsService.unsubscribe(this._databaseSizeSubscription);\n            this._databaseSizeSubscription = undefined;\n        }\n\n        EventAggregator.unsubscribe(\"settings.blindMode\", \"home\");\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"home\">\n                <div className=\"content\">\n                    <div className=\"card\">\n                        <div className=\"banner row\">\n                            <div className=\"node-info\">\n                                <div>\n                                    <h1>{this.state.blindMode ? \"**********\" : this.state.nodeName}</h1>\n                                    {this.state.nodeId && (\n                                        <p className=\"secondary margin-t-t word-break-all\">\n                                            {this.state.blindMode ? \"*********\" : this.state.nodeId}\n                                        </p>\n                                    )}\n                                </div>\n                                <p className=\"secondary\">\n                                    {this._networkId}\n                                </p>\n                                <p className=\"secondary\">\n                                    {this.state.displayVersion}{this.state.displayLatestVersion}\n                                </p>\n                            </div>\n                            <BannerCurve className=\"banner-curve\" />\n                            <div className=\"banner-image\">\n                                <img src={this.state.bannerSrc} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row fill margin-t-s desktop-down-column\">\n                        <div className=\"col info-col fill\">\n                            <div className=\"row tablet-down-column\">\n                                <InfoPanel\n                                    caption=\"CMI / LMI\"\n                                    value={`${this.state.cmi} / ${this.state.lmi}`}\n                                    icon={<MilestoneIcon />}\n                                    backgroundStyle=\"green\"\n                                />\n                                <InfoPanel\n                                    caption=\"Pruning Index\"\n                                    value={this.state.pruningIndex?.toString()}\n                                    icon={<PruningIcon />}\n                                    backgroundStyle=\"orange\"\n                                />\n                            </div>\n                            <div className=\"row margin-t-s tablet-down-column\">\n                                <InfoPanel\n                                    caption=\"Uptime\"\n                                    value={this.state.uptime}\n                                    icon={<UptimeIcon />}\n                                    backgroundStyle=\"blue\"\n                                />\n                                <InfoPanel\n                                    caption=\"Memory Usage\"\n                                    value={this.state.memory}\n                                    icon={<MemoryIcon />}\n                                    backgroundStyle=\"purple\"\n                                />\n                            </div>\n                            <div className=\"row margin-t-s tablet-down-column\">\n                                <InfoPanel\n                                    caption=\"Ledger Db\"\n                                    value={this.state.dbLedgerSizeFormatted}\n                                    icon={<DbIcon />}\n                                    backgroundStyle=\"blue\"\n                                />\n                                <InfoPanel\n                                    caption=\"Tangle db\"\n                                    value={this.state.dbTangleSizeFormatted}\n                                    icon={<DbIcon />}\n                                    backgroundStyle=\"purple\"\n                                />\n                            </div>\n                            <div className=\"row margin-t-s\">\n                                <div className=\"card fill blocks-graph-panel\">\n                                    <Graph\n                                        caption=\"Blocks Per Second\"\n                                        seriesMaxLength={20}\n                                        timeInterval={1000}\n                                        endTime={this.state.lastReceivedBpsTime}\n                                        series={[\n                                            {\n                                                className: \"bar-color-1\",\n                                                label: \"Incoming\",\n                                                values: this.state.bpsIncoming\n                                            },\n                                            {\n                                                className: \"bar-color-2\",\n                                                label: \"Outgoing\",\n                                                values: this.state.bpsOutgoing\n                                            }\n                                        ]}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card col peers-summary-col peers-summary-panel\">\n                            <PeersSummaryPanel />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Check to see if a new version is available.\n     * @param currentVersion The current version.\n     * @param latestVersion The latest resion.\n     */\n    private checkVersion(currentVersion: string, latestVersion: string): void {\n        if (this.state.version !== currentVersion ||\n            this.state.latestVersion !== latestVersion) {\n            const comparison = this.compareVersions(currentVersion, latestVersion);\n\n            this.setState({\n                version: currentVersion,\n                latestVersion,\n                displayVersion: currentVersion\n            });\n\n            if (comparison < 0) {\n                this.setState({ displayLatestVersion: ` - a new version ${latestVersion} is available.` });\n            }\n        }\n    }\n\n    /**\n     * Compare two versions.\n     * @param first The first version.\n     * @param second The second versions.\n     * @returns 0 if the same, 1 if a > b or -1 if a < b.\n     */\n    private compareVersions(first: string, second: string): number {\n        const partsFirst = first.split(\".\");\n        const partsSecond = second.split(\".\");\n\n        if (partsFirst.length === 3 && partsSecond.length === 3) {\n            for (let i = 0; i < 3; i++) {\n                const na = Number.parseInt(partsFirst[i], 10);\n                const nb = Number.parseInt(partsSecond[i], 10);\n                if (na > nb) {\n                    return 1;\n                }\n                if (nb > na) {\n                    return -1;\n                }\n\n                if (i === 2) {\n                    let firstAlphabet = 96;\n                    let secondAlphabet = 96;\n                    const firstIndex = partsFirst[i].indexOf(\"-\");\n                    if (firstIndex > 0) {\n                        firstAlphabet = partsFirst[i].charCodeAt(firstIndex + 1);\n                    }\n                    const secondIndex = partsSecond[i].indexOf(\"-\");\n                    if (secondIndex > 0) {\n                        secondAlphabet = partsSecond[i].charCodeAt(secondIndex + 1);\n                    }\n\n                    return firstAlphabet - secondAlphabet;\n                }\n            }\n        }\n\n        return 0;\n    }\n}\n\nexport default Home;\n","import React, { ReactNode } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { AuthService } from \"../../services/authService\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport Spinner from \"../components/layout/Spinner\";\nimport \"./Login.scss\";\nimport { LoginState } from \"./LoginState\";\n\n/**\n * Login panel.\n */\nclass Login extends AsyncComponent<unknown, LoginState> {\n    /**\n     * The auth service.\n     */\n    private readonly _authService: AuthService;\n\n    /**\n     * Create a new instance of Login.\n     * @param props The props.\n     */\n    constructor(props: unknown) {\n        super(props);\n\n        this._authService = ServiceFactory.get<AuthService>(\"auth\");\n\n        this.state = {\n            user: \"\",\n            password: \"\",\n            isBusy: false,\n            error: false,\n            redirect: \"\"\n        };\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        if (this.state.redirect.length > 0) {\n            return <Redirect to={this.state.redirect} />;\n        }\n        return (\n            <div className=\"login\">\n                <div className=\"content\">\n                    <h2>Login</h2>\n                    <div className=\"card margin-t-s padding-l\">\n                        <form>\n                            <p>Please enter your credentials to unlock the full dashboard.</p>\n                            <div className=\"card--label\">\n                                User\n                            </div>\n                            <div className=\"card--value row\">\n                                <input\n                                    type=\"text\"\n                                    autoComplete=\"username\"\n                                    value={this.state.user}\n                                    disabled={this.state.isBusy}\n                                    onChange={e => this.setState({ user: e.target.value })}\n                                    autoFocus={true}\n                                />\n                            </div>\n                            <div className=\"card--label\">\n                                Password\n                            </div>\n                            <div className=\"card--value row\">\n                                <input\n                                    type=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={this.state.password}\n                                    disabled={this.state.isBusy}\n                                    onChange={e => this.setState({ password: e.target.value })}\n                                    onKeyDown={e => {\n                                        if (e.key === \"Enter\" &&\n                                            this.state.password.trim().length > 0 &&\n                                            this.state.user.trim().length > 0) {\n                                            this.login();\n                                        }\n                                    }}\n                                />\n                            </div>\n                            <hr />\n                            <div className=\"card--value row middle\">\n                                <button\n                                    className=\"card--action margin-r-s\"\n                                    type=\"button\"\n                                    disabled={this.state.isBusy ||\n                                        this.state.user.trim().length === 0 ||\n                                        this.state.password.trim().length === 0}\n                                    onClick={e => this.login()}\n                                >\n                                    Login\n                                </button>\n                                {this.state.isBusy && (\n                                    <Spinner compact={true} />\n                                )}\n                                {this.state.error && (\n                                    <p className=\"danger margin-l-t\">Your login attempt failed, please try again.</p>\n                                )}\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Try the login.\n     */\n    private login(): void {\n        this.setState({\n            isBusy: true,\n            error: false\n        }, async () => {\n            const success = await this._authService.login(this.state.user, this.state.password);\n\n            this.setState({\n                isBusy: false,\n                error: !success,\n                redirect: success ? \"/\" : \"\"\n            });\n        });\n    }\n}\n\nexport default Login;\n","import { IPeer } from \"@iota/iota.js\";\nimport React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ReactComponent as ChevronLeftIcon } from \"../../assets/chevron-left.svg\";\nimport { ReactComponent as ConfirmationIcon } from \"../../assets/confirmation.svg\";\nimport { ReactComponent as EyeClosedIcon } from \"../../assets/eye-closed.svg\";\nimport { ReactComponent as EyeIcon } from \"../../assets/eye.svg\";\nimport { ReactComponent as MilestoneIcon } from \"../../assets/milestone.svg\";\nimport { ReactComponent as PruningIcon } from \"../../assets/pruning.svg\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { ISyncStatus } from \"../../models/websocket/ISyncStatus\";\nimport { WebSocketTopic } from \"../../models/websocket/webSocketTopic\";\nimport { MetricsService } from \"../../services/metricsService\";\nimport { SettingsService } from \"../../services/settingsService\";\nimport { DataHelper } from \"../../utils/dataHelper\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport Graph from \"../components/layout/Graph\";\nimport HealthIndicator from \"../components/layout/HealthIndicator\";\nimport InfoPanel from \"../components/layout/InfoPanel\";\nimport \"./Peer.scss\";\nimport { PeerRouteProps } from \"./PeerRouteProps\";\nimport { PeerState } from \"./PeerState\";\n\n/**\n * Peer panel.\n */\nclass Peer extends AsyncComponent<RouteComponentProps<PeerRouteProps>, PeerState> {\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The settings service.\n     */\n    private readonly _settingsService: SettingsService;\n\n    /**\n     * The peers subscription id.\n     */\n    private _peersSubscription?: string;\n\n    /**\n     * The sync status subscription id.\n     */\n    private _syncStatusSubscription?: string;\n\n    /**\n     * Create a new instance of Peers.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps<PeerRouteProps>) {\n        super(props);\n\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n        this._settingsService = ServiceFactory.get<SettingsService>(\"settings\");\n\n        this.state = {\n            address: \"\",\n            isConnected: false,\n            isSynced: false,\n            hasPeers: false,\n            latestMilestoneIndex: \"-\",\n            latestSolidMilestoneIndex: \"-\",\n            pruningIndex: \"-\",\n            syncedPeers: \"-\",\n            connectedPeers: \"-\",\n            newBlocksDiff: [],\n            sentBlocksDiff: [],\n            relation: \"-\",\n            lastUpdateTime: 0,\n            blindMode: this._settingsService.getBlindMode()\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        super.componentDidMount();\n\n        this._peersSubscription = this._metricsService.subscribe<IPeer[]>(\n            WebSocketTopic.PeerMetric,\n            undefined,\n            allData => {\n                let alias;\n                let address: string = \"\";\n                let isConnected = false;\n                let isSynced = false;\n                let hasPeers = false;\n                let latestMilestoneIndex = \"-\";\n                let latestSolidMilestoneIndex = \"-\";\n                let pruningIndex = \"-\";\n                let syncedPeers = \"-\";\n                let connectedPeers = \"-\";\n                const newBlocksTotal = [];\n                const sentBlocksTotal = [];\n                const newBlocksDiff = [];\n                const sentBlocksDiff = [];\n                let gossipMetrics;\n                let relation = \"-\";\n\n                for (const allDataPeers of allData) {\n                    if (allDataPeers) {\n                        const peer = allDataPeers.find(p => p.id === this.props.match.params.id);\n                        const lmi = this.state.nodeLmi ? this.state.nodeLmi : 0;\n\n                        if (peer) {\n                            alias = peer.alias;\n                            address = DataHelper.formatPeerAddress(peer) ?? \"\";\n                            isConnected = peer.connected;\n                            isSynced = isConnected && DataHelper.calculateIsSynced(peer, lmi);\n                            gossipMetrics = peer.gossip?.metrics;\n                            relation = peer.relation;\n\n                            if (peer.gossip?.heartbeat) {\n                                newBlocksTotal.push(peer.gossip.metrics.newBlocks);\n                                sentBlocksTotal.push(peer.gossip.metrics.sentBlocks);\n\n                                if (isConnected) {\n                                    hasPeers = peer.gossip.heartbeat.connectedPeers > 0;\n                                    latestMilestoneIndex = peer.gossip.heartbeat.latestMilestoneIndex.toString();\n                                    latestSolidMilestoneIndex = peer.gossip.heartbeat.solidMilestoneIndex.toString();\n                                    pruningIndex = peer.gossip.heartbeat.prunedMilestoneIndex.toString();\n                                    syncedPeers = peer.gossip.heartbeat.syncedPeers.toString();\n                                    connectedPeers = peer.gossip.heartbeat.connectedPeers.toString();\n                                }\n                            }\n                        }\n                    }\n                }\n\n                for (let i = 1; i < newBlocksTotal.length; i++) {\n                    newBlocksDiff.push(\n                        Math.max(\n                            newBlocksTotal[i] - newBlocksTotal[i - 1]\n                            , 0)\n                    );\n                }\n                for (let i = 1; i < sentBlocksTotal.length; i++) {\n                    sentBlocksDiff.push(\n                        Math.max(\n                            sentBlocksTotal[i] - sentBlocksTotal[i - 1]\n                            , 0)\n                    );\n                }\n\n                this.setState({\n                    alias,\n                    address,\n                    isConnected,\n                    isSynced,\n                    hasPeers,\n                    latestMilestoneIndex,\n                    latestSolidMilestoneIndex,\n                    pruningIndex,\n                    syncedPeers,\n                    connectedPeers,\n                    newBlocksDiff,\n                    sentBlocksDiff,\n                    gossipMetrics,\n                    relation,\n                    lastUpdateTime: Date.now()\n                });\n            }\n        );\n\n        this._syncStatusSubscription = this._metricsService.subscribe<ISyncStatus>(\n            WebSocketTopic.SyncStatus,\n            data => {\n                if (data) {\n                    const cmi = data.cmi;\n                    const lmi = data.lmi;\n\n                    if (cmi && cmi !== this.state.nodeCmi) {\n                        this.setState({ nodeCmi: cmi });\n                    }\n\n                    if (lmi && lmi !== this.state.nodeLmi) {\n                        this.setState({ nodeLmi: lmi });\n                    }\n                }\n            }\n        );\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n\n        if (this._peersSubscription) {\n            this._metricsService.unsubscribe(this._peersSubscription);\n            this._peersSubscription = undefined;\n        }\n\n        if (this._syncStatusSubscription) {\n            this._metricsService.unsubscribe(this._syncStatusSubscription);\n            this._syncStatusSubscription = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"peer\">\n                <div className=\"content\">\n                    <div className=\"row middle spread margin-b-s\">\n                        <Link\n                            to=\"/peers\"\n                            className=\"row inline middle\"\n                        >\n                            <ChevronLeftIcon className=\"secondary\" />\n                            <h3 className=\"secondary margin-l-s\">Back to Peers</h3>\n                        </Link>\n                        <button\n                            type=\"button\"\n                            onClick={() => this.toggleBlindMode()}\n                            className=\"peer--icon-button\"\n                        >\n                            {this.state.blindMode ? <EyeIcon /> : <EyeClosedIcon />}\n                        </button>\n                    </div>\n\n                    <div className=\"card\">\n                        <div className=\"banner row tablet-down-column spread\">\n                            <div className=\"node-info\">\n                                {this.state.alias && (\n                                    <React.Fragment>\n                                        <h2 className=\"word-break-all\">{this.state.blindMode\n                                            ? \"*\".repeat(this.state.alias.length) : this.state.alias}\n                                        </h2>\n                                        <p className=\"secondary margin-t-t\">{this.state.blindMode\n                                            ? \"*\".repeat(this.props.match.params.id.length)\n                                            : this.props.match.params.id}\n                                        </p>\n                                    </React.Fragment>\n                                )}\n                                {!this.state.alias && (\n                                    <h2 className=\"word-break-all\">{this.state.blindMode\n                                        ? \"*\".repeat(this.props.match.params.id.length) : this.props.match.params.id}\n                                    </h2>\n                                )}\n                                <p className=\"secondary margin-t-t\">{this.state.blindMode\n                                    ? \"*\".repeat(this.state.address.length) : this.state.address}\n                                </p>\n                                <p className=\"secondary margin-t-t\">\n                                    Relation:&nbsp;\n                                    {`${this.state.relation.slice(0, 1).toUpperCase()}${this.state.relation.slice(1)}`}\n                                </p>\n                                {this.state.nodeCmi &&\n                                Number(this.state.pruningIndex) > this.state.nodeCmi && (\n                                    <p className=\"secondary warning margin-t-t\">\n                                        Warning:&nbsp; History of peer not sufficient to sync from.\n                                        Consider using a newer snapshot if all peers have the same status.\n                                    </p>\n                                )}\n                            </div>\n                            <div className=\"health-indicators col tablet-down-only-row phone-down-column\">\n                                <HealthIndicator\n                                    label=\"Connected\"\n                                    healthy={this.state.isConnected}\n                                    className=\"child\"\n                                />\n                                <HealthIndicator\n                                    label=\"Synced\"\n                                    healthy={this.state.isSynced}\n                                    className=\"child\"\n                                />\n                                <HealthIndicator\n                                    label=\"Peers\"\n                                    healthy={this.state.hasPeers}\n                                    className=\"child\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row info margin-t-s\">\n                        <InfoPanel\n                            caption=\"SMI / LMI\"\n                            value={`${this.state.latestSolidMilestoneIndex} / ${this.state.latestMilestoneIndex}`}\n                            icon={<MilestoneIcon />}\n                            backgroundStyle=\"green\"\n                        />\n                        <InfoPanel\n                            caption=\"Pruning Index\"\n                            value={this.state.pruningIndex}\n                            icon={<PruningIcon />}\n                            backgroundStyle=\"orange\"\n                        />\n                        <InfoPanel\n                            caption=\"Synced Peers\"\n                            value={`${this.state.syncedPeers} / ${this.state.connectedPeers}`}\n                            icon={<ConfirmationIcon />}\n                            backgroundStyle=\"purple\"\n                        />\n                    </div>\n\n                    <div className=\"card blocks-graph-panel margin-t-s\">\n                        <Graph\n                            caption=\"Blocks per Second\"\n                            endTime={this.state.lastUpdateTime}\n                            timeInterval={1000}\n                            seriesMaxLength={30}\n                            series={[\n                                {\n                                    className: \"bar-color-1\",\n                                    label: \"Incoming\",\n                                    values: this.state.newBlocksDiff\n                                },\n                                {\n                                    className: \"bar-color-2\",\n                                    label: \"Outgoing\",\n                                    values: this.state.sentBlocksDiff\n                                }\n                            ]}\n                        />\n\n                        <div className=\"row wrap padding-s gossip\">\n                            <div className=\"gossip-item\">\n                                <h4>Known Blocks</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.knownBlocks ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>New Blocks</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.newBlocks ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Received Blocks</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.receivedBlocks ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Sent Blocks</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.sentBlocks ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Received Block Requests</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.receivedBlockRequests ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Sent Block Requests</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.sentBlockRequests ?? \"-\"}\n                                </div>\n                            </div>\n\n\n                            <div className=\"gossip-item\">\n                                <h4>Received Heartbeats</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.receivedHeartbeats ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Sent Heartbeats</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.sentHeartbeats ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Received Milestone Requests</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.receivedMilestoneRequests ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Sent Milestone Requests</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.sentMilestoneRequests ?? \"-\"}\n                                </div>\n                            </div>\n                            <div className=\"gossip-item\">\n                                <h4>Dropped Packets</h4>\n                                <div className=\"gossip-value\">\n                                    {this.state.gossipMetrics?.droppedPackets ?? \"-\"}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Toggle the flag for blind mode.\n     */\n    private toggleBlindMode(): void {\n        this._settingsService.setBlindMode(!this.state.blindMode);\n        this.setState({ blindMode: !this.state.blindMode });\n    }\n}\n\nexport default withRouter(Peer);\n","import React, { Component, ReactNode } from \"react\";\nimport \"./Dialog.scss\";\nimport { DialogProps } from \"./DialogProps\";\n\n/**\n * Component which will display a dialog.\n */\nclass Dialog extends Component<DialogProps> {\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <React.Fragment>\n                <div className=\"dialog-click-shield\" />\n                <div className=\"dialog-container\">\n                    <div className=\"dialog\">\n                        <div className=\"dialog-header\">\n                            <h1>{this.props.title}</h1>\n                        </div>\n                        <div className=\"dialog-content\">\n                            {this.props.children}\n                        </div>\n                        <div className=\"dialog-footer\">\n                            {this.props.actions}\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Dialog;\n","import { IPeer } from \"@iota/iota.js\";\nimport classNames from \"classnames\";\nimport React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { ReactComponent as ChevronRightIcon } from \"../../assets/chevron-right.svg\";\nimport { ReactComponent as EyeClosedIcon } from \"../../assets/eye-closed.svg\";\nimport { ReactComponent as EyeIcon } from \"../../assets/eye.svg\";\nimport { ReactComponent as HealthBadIcon } from \"../../assets/health-bad.svg\";\nimport { ReactComponent as HealthGoodIcon } from \"../../assets/health-good.svg\";\nimport { ReactComponent as HealthWarningIcon } from \"../../assets/health-warning.svg\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { ISyncStatus } from \"../../models/websocket/ISyncStatus\";\nimport { WebSocketTopic } from \"../../models/websocket/webSocketTopic\";\nimport { MetricsService } from \"../../services/metricsService\";\nimport { SettingsService } from \"../../services/settingsService\";\nimport { TangleService } from \"../../services/tangleService\";\nimport { DataHelper } from \"../../utils/dataHelper\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport Dialog from \"../components/layout/Dialog\";\nimport Graph from \"../components/layout/Graph\";\nimport Spinner from \"../components/layout/Spinner\";\nimport \"./Peers.scss\";\nimport { PeersState } from \"./PeersState\";\n\n/**\n * Peers panel.\n */\nclass Peers extends AsyncComponent<RouteComponentProps, PeersState> {\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The settings service.\n     */\n    private readonly _settingsService: SettingsService;\n\n    /**\n     * The peers subscription id.\n     */\n    private _peersSubscription?: string;\n\n    /**\n     * The sync status subscription id.\n     */\n    private _syncStatusSubscription?: string;\n\n    /**\n     * Create a new instance of Peers.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps) {\n        super(props);\n\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n        this._settingsService = ServiceFactory.get<SettingsService>(\"settings\");\n\n        this.state = {\n            peers: [],\n            dialogPeerAddress: \"\",\n            dialogPeerAlias: \"\",\n            blindMode: this._settingsService.getBlindMode()\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        super.componentDidMount();\n\n        this._peersSubscription = this._metricsService.subscribe<IPeer[]>(\n            WebSocketTopic.PeerMetric,\n            undefined,\n            allData => {\n                const peers: {\n                    [id: string]: {\n                        id: string;\n                        alias?: string;\n                        address?: string;\n                        originalAddress?: string;\n                        health: number;\n                        relation: string;\n                        newBlocksTotal: number[];\n                        sentBlocksTotal: number[];\n                        newBlocksDiff: number[];\n                        sentBlocksDiff: number[];\n                        lastUpdateTime: number;\n                    };\n                } = {};\n\n                if (allData.length > 0) {\n                    // Only track data for the peers that appear in the most recent list.\n                    const finalPeerIds = new Set(allData[allData.length - 1].map(p => p.id));\n\n                    for (const allDataPeers of allData) {\n                        if (allDataPeers) {\n                            for (const peer of allDataPeers) {\n                                if (finalPeerIds.has(peer.id)) {\n                                    const address = DataHelper.formatPeerAddress(peer);\n                                    const cmi = this.state.cmi ? this.state.cmi : 0;\n                                    const lmi = this.state.lmi ? this.state.lmi : 0;\n                                    const health = DataHelper.calculateHealth(peer, cmi, lmi);\n\n                                    if (!peers[peer.id]) {\n                                        peers[peer.id] = {\n                                            id: peer.id,\n                                            address: \"\",\n                                            health: 0,\n                                            relation: peer.relation,\n                                            newBlocksTotal: [],\n                                            sentBlocksTotal: [],\n                                            newBlocksDiff: [],\n                                            sentBlocksDiff: [],\n                                            lastUpdateTime: 0\n                                        };\n                                    }\n                                    peers[peer.id].id = peer.id;\n                                    peers[peer.id].alias = peer.alias;\n                                    peers[peer.id].address = address;\n                                    peers[peer.id].health = health;\n                                    peers[peer.id].relation = peer.relation;\n                                    peers[peer.id].lastUpdateTime = Date.now();\n                                    if (peer.multiAddresses?.length) {\n                                        peers[peer.id].originalAddress = peer.multiAddresses[0];\n                                    }\n\n                                    if (peer.gossip) {\n                                        peers[peer.id].newBlocksTotal.push(peer.gossip.metrics.newBlocks);\n                                        peers[peer.id].sentBlocksTotal.push(peer.gossip.metrics.sentBlocks);\n                                    }\n\n                                    peers[peer.id].newBlocksDiff = [];\n                                    for (let i = 1; i < peers[peer.id].newBlocksTotal.length; i++) {\n                                        peers[peer.id].newBlocksDiff.push(\n                                            Math.max(\n                                                peers[peer.id].newBlocksTotal[i] -\n                                                peers[peer.id].newBlocksTotal[i - 1]\n                                                , 0)\n                                        );\n                                    }\n                                    peers[peer.id].sentBlocksDiff = [];\n                                    for (let i = 1; i < peers[peer.id].sentBlocksTotal.length; i++) {\n                                        peers[peer.id].sentBlocksDiff.push(\n                                            Math.max(\n                                                peers[peer.id].sentBlocksTotal[i] -\n                                                peers[peer.id].sentBlocksTotal[i - 1]\n                                                , 0)\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                this.setState({\n                    peers: DataHelper.sortPeers(Object.values(peers))\n                });\n            }\n        );\n\n        this._syncStatusSubscription = this._metricsService.subscribe<ISyncStatus>(\n            WebSocketTopic.SyncStatus,\n            data => {\n                if (data) {\n                    const cmi = data.cmi;\n                    const lmi = data.lmi;\n\n                    if (cmi && cmi !== this.state.cmi) {\n                        this.setState({ cmi });\n                    }\n\n                    if (lmi && lmi !== this.state.lmi) {\n                        this.setState({ lmi });\n                    }\n                }\n            });\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n\n        if (this._peersSubscription) {\n            this._metricsService.unsubscribe(this._peersSubscription);\n            this._peersSubscription = undefined;\n        }\n\n        if (this._syncStatusSubscription) {\n            this._metricsService.unsubscribe(this._syncStatusSubscription);\n            this._syncStatusSubscription = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"peers\">\n                <div className=\"content\">\n                    <div className=\"row spread\">\n                        <h2>Peers</h2>\n                        <div className=\"row\">\n                            <button\n                                type=\"button\"\n                                onClick={() => this.toggleBlindMode()}\n                                className=\"peers--icon-button\"\n                            >\n                                {this.state.blindMode ? <EyeIcon /> : <EyeClosedIcon />}\n                            </button>\n\n                            <button\n                                type=\"button\"\n                                className=\"add-button\"\n                                onClick={() => this.setState({\n                                    dialogType: \"add\",\n                                    dialogIsEdit: true,\n                                    dialogPeerId: \"\",\n                                    dialogPeerAddress: \"\",\n                                    dialogPeerAlias: \"\",\n                                    dialogStatus: \"\",\n                                    dialogBusy: false\n                                })}\n                            >\n                                Add Peer\n                            </button>\n                        </div>\n                    </div>\n                    <div className=\"peers-panel\">\n                        {this.state.peers.length === 0 && (\n                            <p className=\"margin-t-s\">There are no peers.</p>\n                        )}\n                        {this.state.peers.map((p, idx) => (\n                            <div className=\"peers-panel--item\" key={idx}>\n                                <div className=\"card col padding-m\">\n                                    <div className=\"row middle\">\n                                        <span className=\"peer-health\">\n                                            {p.health === 0 && <HealthBadIcon />}\n                                            {p.health === 1 && <HealthWarningIcon />}\n                                            {p.health === 2 && <HealthGoodIcon />}\n                                        </span>\n                                        <div className=\"peer-id word-break-all\">\n                                            <span>\n                                                {this.state.blindMode && (\"*\".repeat((p.alias ?? p.id).length))}\n                                                {!this.state.blindMode && (p.alias ?? p.id)}\n                                            </span>\n                                            <span>{this.state.blindMode\n                                                ? \"*\".repeat(p.address?.length ?? 10) : p.address}\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <Graph\n                                        caption=\"Blocks per Second\"\n                                        seriesMaxLength={15}\n                                        timeInterval={1000}\n                                        timeMarkers={5}\n                                        endTime={p.lastUpdateTime}\n                                        series={[\n                                            {\n                                                className: \"bar-color-1\",\n                                                label: \"Incoming\",\n                                                values: p.newBlocksDiff\n                                            },\n                                            {\n                                                className: \"bar-color-2\",\n                                                label: \"Outgoing\",\n                                                values: p.sentBlocksDiff\n                                            }\n                                        ]}\n                                    />\n                                    <div className=\"row peer-actions\">\n                                        <p className=\"margin-t-s padding-t\">\n                                            Relation: {`${p.relation\n                                                .slice(0, 1).toUpperCase()}${p.relation.slice(1)}`}\n                                        </p>\n                                        {p.relation !== \"known\" && p.originalAddress && (\n                                            <button\n                                                type=\"button\"\n                                                className=\"card--action margin-t-s\"\n                                                onClick={() => this.setState({\n                                                    dialogType: \"promote\",\n                                                    dialogIsEdit: true,\n                                                    dialogPeerAddress: p.originalAddress ?? \"\",\n                                                    dialogPeerAlias: \"\",\n                                                    dialogPeerId: p.id,\n                                                    dialogStatus: \"\",\n                                                    dialogBusy: false\n                                                })}\n                                            >\n                                                Promote to Known\n                                            </button>\n                                        )}\n                                        {p.relation === \"known\" && (\n                                            <button\n                                                type=\"button\"\n                                                className=\"card--action margin-t-s\"\n                                                onClick={() => this.setState({\n                                                    dialogType: \"edit\",\n                                                    dialogIsEdit: true,\n                                                    dialogPeerAddress: p.originalAddress ?? \"\",\n                                                    dialogPeerAlias: p.alias ?? \"\",\n                                                    dialogPeerId: p.id,\n                                                    dialogPeerIdOriginal: p.id,\n                                                    dialogStatus: \"\",\n                                                    dialogBusy: false\n                                                })}\n                                            >\n                                                Edit\n                                            </button>\n                                        )}\n                                        <button\n                                            type=\"button\"\n                                            className=\"card--action card--action-danger margin-t-s\"\n                                            onClick={() => this.setState({\n                                                dialogType: \"delete\",\n                                                dialogIsEdit: false,\n                                                dialogPeerId: p.id,\n                                                dialogPeerAddress: \"\",\n                                                dialogPeerAlias: \"\",\n                                                dialogStatus: \"\",\n                                                dialogBusy: false\n                                            })}\n                                        >\n                                            Delete\n                                        </button>\n                                        <Link\n                                            to={`/peers/${p.id}`}\n                                            className=\"card--action row middle inline margin-t-s\"\n                                        >\n                                            <span className=\"margin-r-s\">More details</span>\n                                            <ChevronRightIcon className=\"secondary\" />\n                                        </Link>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    {this.state.dialogType && (\n                        <Dialog\n                            title={{\n                                \"add\": \"Add Peer\",\n                                \"edit\": \"Edit Peer\",\n                                \"promote\": \"Promote to Known\",\n                                \"delete\": \"Delete Confirmation\"\n                            }[this.state.dialogType]}\n                            actions={[\n                                <button\n                                    type=\"button\"\n                                    onClick={() =>\n                                        (this.state.dialogIsEdit ? this.peerConfigure() : this.peerDelete())}\n                                    key={0}\n                                    disabled={this.state.dialogBusy || (\n                                        this.state.dialogIsEdit &&\n                                        (this.state.dialogPeerAddress.trim().length === 0 ||\n                                            this.state.dialogPeerId?.trim().length === 0)\n                                    )}\n                                >\n                                    {this.state.dialogIsEdit ? \"OK\" : \"Yes\"}\n                                </button>,\n                                <button\n                                    type=\"button\"\n                                    onClick={() => this.setState({\n                                        dialogPeerId: undefined,\n                                        dialogPeerIdOriginal: undefined,\n                                        dialogType: undefined\n                                    })}\n                                    key={1}\n                                    disabled={this.state.dialogBusy}\n                                >\n                                    {this.state.dialogIsEdit ? \"Cancel\" : \"No\"}\n                                </button>\n                            ]}\n                        >\n                            {this.state.dialogType === \"delete\" && (\n                                <p className=\"margin-b-l\">Are you sure you want to delete the peer?</p>\n                            )}\n                            {this.state.dialogIsEdit && (\n                                <React.Fragment>\n                                    <p>Please enter the details of the peer to {this.state.dialogType}.</p>\n                                    <div className=\"dialog--label\">\n                                        Address\n                                    </div>\n                                    <div className=\"dialog--value\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"input--stretch\"\n                                            placeholder=\"e.g. /ip4/127.0.0.1/tcp/15600\"\n                                            value={this.state.dialogPeerAddress}\n                                            disabled={this.state.dialogBusy}\n                                            onChange={e => this.setState({ dialogPeerAddress: e.target.value })}\n                                        />\n                                    </div>\n                                    <div className=\"dialog--label\">\n                                        Id\n                                    </div>\n                                    <div className=\"dialog--value\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"input--stretch\"\n                                            placeholder=\"e.g. 12D3KooWC7uE9w3RN4Vh1FJAZa8SbE8yMWR6wCVBajcWpyWguV73\"\n                                            value={this.state.dialogPeerId}\n                                            disabled={this.state.dialogBusy}\n                                            onChange={e => this.setState({ dialogPeerId: e.target.value })}\n                                        />\n                                    </div>\n                                    <div className=\"dialog--label\">\n                                        Alias\n                                    </div>\n                                    <div className=\"dialog--value\">\n                                        <input\n                                            type=\"text\"\n                                            className=\"input--stretch\"\n                                            placeholder=\"e.g. My Friend's Node\"\n                                            value={this.state.dialogPeerAlias}\n                                            disabled={this.state.dialogBusy}\n                                            onChange={e => this.setState({ dialogPeerAlias: e.target.value })}\n                                        />\n                                    </div>\n                                </React.Fragment>\n                            )}\n                            {this.state.dialogBusy && <Spinner />}\n                            <p className={\n                                classNames(\n                                    \"margin-t-l\",\n                                    { \"danger\": !this.state.dialogBusy }\n                                )\n                            }\n                            >\n                                {this.state.dialogStatus}\n                            </p>\n                        </Dialog>\n                    )}\n                </div>\n            </div >\n        );\n    }\n\n    /**\n     * Add a new peer.\n     */\n    private peerConfigure(): void {\n        this.setState({\n            dialogBusy: true,\n            dialogStatus: this.state.dialogType === \"add\"\n                ? \"Adding peer, please wait...\" : \"Promoting peer, please wait...\"\n        }, async () => {\n            const tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n            try {\n                if (this.state.dialogType === \"edit\" && this.state.dialogPeerIdOriginal) {\n                    await tangleService.peerDelete(this.state.dialogPeerIdOriginal);\n                }\n                let addr = this.state.dialogPeerAddress;\n                if (!addr.endsWith(\"/\")) {\n                    addr += \"/\";\n                }\n                addr += `p2p/${this.state.dialogPeerId}`;\n                await tangleService.peerAdd(addr, this.state.dialogPeerAlias);\n\n                this.setState({\n                    dialogBusy: false,\n                    dialogStatus: \"\",\n                    dialogPeerId: undefined,\n                    dialogType: undefined\n                });\n            } catch (error) {\n                if (error instanceof Error) {\n                    this.setState({\n                        dialogBusy: false,\n                        dialogStatus: `Failed to ${this.state.dialogType} peer: ${error.message}`\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * Delete the specified peer.\n     */\n    private peerDelete(): void {\n        this.setState({\n            dialogBusy: true,\n            dialogStatus: \"Deleting peer, please wait...\"\n        }, async () => {\n            if (this.state.dialogPeerId) {\n                const tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n                try {\n                    await tangleService.peerDelete(this.state.dialogPeerId);\n\n                    this.setState({\n                        dialogBusy: false,\n                        dialogStatus: \"\",\n                        dialogPeerId: undefined,\n                        dialogType: undefined\n                    });\n                } catch (error) {\n                    if (error instanceof Error) {\n                        this.setState({\n                            dialogBusy: false,\n                            dialogStatus: `Failed to delete peer: ${error.message}`\n                        });\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Toggle the flag for blind mode.\n     */\n    private toggleBlindMode(): void {\n        this._settingsService.setBlindMode(!this.state.blindMode);\n        this.setState({ blindMode: !this.state.blindMode });\n    }\n}\n\nexport default withRouter(Peers);\n","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport \"./TabPanel.scss\";\nimport { TabPanelProps } from \"./TabPanelProps\";\nimport { TabPanelState } from \"./TabPanelState\";\n\n/**\n * Tab panel.\n */\nclass TabPanel extends Component<TabPanelProps, TabPanelState> {\n    /**\n     * Create a new instance of TabPanel.\n     * @param props The props.\n     */\n    constructor(props: TabPanelProps) {\n        super(props);\n\n        this.state = {\n            activeTab: props.activeTab.toLowerCase()\n        };\n    }\n\n    /**\n     * The component updated.\n     * @param prevProps The previous props.\n     */\n    public componentDidUpdate(prevProps: TabPanelProps): void {\n        if (this.props.activeTab.toLowerCase() !== prevProps.activeTab.toLowerCase()) {\n            this.setState({ activeTab: this.props.activeTab.toLowerCase() });\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"tab-panel\">\n                <div className=\"tab-panel--buttons\">\n                    {this.props.tabs.map(l => (\n                        <button\n                            key={l}\n                            type=\"button\"\n                            className={classNames(\n                                \"tab-panel--button\",\n                                { \"tab-panel--button__selected\": l.toLowerCase() === this.state.activeTab }\n                            )}\n                            onClick={e => this.setState(\n                                { activeTab: l.toLowerCase() },\n                                () => {\n                                    if (this.props.onTabChanged) {\n                                        this.props.onTabChanged(this.state.activeTab);\n                                    }\n                                })}\n                        >\n                            <div>{l}</div>\n                            <div className=\"underline\" />\n                        </button>\n                    ))}\n                </div>\n                {this.props.children?.flat().map((c, idx) => (\n                    <React.Fragment key={idx}>\n                        {React.isValidElement(c) && c.props[\"data-label\"] &&\n                         c.props[\"data-label\"].toLowerCase() === this.state.activeTab && c}\n                    </React.Fragment>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default TabPanel;\n","/**\n * Fetch from an endpoint.\n */\nexport class FetchHelper {\n    /**\n     * Fetch a payload from an endpoint.\n     * @param baseUrl The base url for the api.\n     * @param path The path for the endpoint.\n     * @param method The method to send the request with.\n     * @param payload The payload to send.\n     * @param headers The headers to include in the fetch.\n     * @param timeout Timeout for the request.\n     * @returns The fetched payload and any cookies.\n     */\n    public static async json<T, U>(\n        baseUrl: string,\n        path: string,\n        method: \"get\" | \"post\" | \"put\" | \"delete\",\n        payload?: T,\n        headers?: { [id: string]: string },\n        timeout?: number\n    ): Promise<U> {\n        headers = headers ?? {};\n        headers[\"Content-Type\"] = \"application/json\";\n\n        let controller: AbortController | undefined;\n        let timerId: NodeJS.Timeout | undefined;\n\n        if (timeout !== undefined) {\n            controller = new AbortController();\n            timerId = setTimeout(\n                () => {\n                    if (controller) {\n                        controller.abort();\n                    }\n                },\n                timeout);\n        }\n\n        try {\n            const res = await fetch(\n                `${baseUrl.replace(/\\/$/, \"\")}/${path.replace(/^\\//, \"\")}`,\n                {\n                    method,\n                    headers,\n                    body: payload ? JSON.stringify(payload) : undefined,\n                    signal: controller ? controller.signal : undefined\n                });\n\n                const json = (res.status === 204) ? {}\n                    : await res.json()\n                        .catch(error => {\n                            throw new Error(`Fetched failed: ${error.message}`);\n                        });\n\n                return json as U;\n        } catch (err) {\n            if (err instanceof Error) {\n                throw err.name === \"AbortError\" ? new Error(\"Timeout\") : err;\n            } else {\n                throw err;\n            }\n        } finally {\n            if (timerId) {\n                clearTimeout(timerId);\n            }\n        }\n    }\n\n    /**\n     * Fetch a payload from an endpoint.\n     * @param baseUrl The base url for the api.\n     * @param path The path for the endpoint.\n     * @param method The method to send the request with.\n     * @param payload The payload to send.\n     * @param headers The headers to include in the fetch.\n     * @param timeout Timeout for the request.\n     * @returns The fetched payload and any cookies.\n     */\n    public static async text<T, U>(\n        baseUrl: string,\n        path: string,\n        method: \"get\" | \"post\" | \"put\" | \"delete\",\n        payload?: T,\n        headers?: { [id: string]: string },\n        timeout?: number\n    ): Promise<U> {\n        headers = headers ?? {};\n        headers[\"Content-Type\"] = \"text/plain\";\n\n        let controller: AbortController | undefined;\n        let timerId: NodeJS.Timeout | undefined;\n\n        if (timeout !== undefined) {\n            controller = new AbortController();\n            timerId = setTimeout(\n                () => {\n                    if (controller) {\n                        controller.abort();\n                    }\n                },\n                timeout);\n        }\n\n        try {\n            const res = await fetch(\n                `${baseUrl.replace(/\\/$/, \"\")}/${path.replace(/^\\//, \"\")}`,\n                {\n                    method,\n                    headers,\n                    body: payload ? JSON.stringify(payload) : undefined,\n                    signal: controller ? controller.signal : undefined\n                });\n                const json = (res.status === 204) ? {}\n                    : await res.json()\n                        .catch(error => {\n                            throw new Error(`Fetched failed: ${res.statusText}`);\n                        });\n\n                return json as U;\n        } catch (err) {\n            if (err instanceof Error) {\n                throw err.name === \"AbortError\" ? new Error(\"Timeout\") : err;\n            } else {\n                throw err;\n            }\n        } finally {\n            if (timerId) {\n                clearTimeout(timerId);\n            }\n        }\n    }\n\n    /**\n     * Join params onto command.\n     * @param params The params to add.\n     * @returns The joined parameters.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public static urlParams(params: { [id: string]: any }): string {\n        const urlParams = [];\n        for (const key in params) {\n            if (params[key] !== null && params[key] !== undefined) {\n                urlParams.push(`${encodeURIComponent(key)}=${encodeURIComponent(params[key] as string)}`);\n            }\n        }\n        return urlParams.length > 0 ? `?${urlParams.join(\"&\")}` : \"\";\n    }\n}\n","import classNames from \"classnames\";\nimport React, { ReactNode } from \"react\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { IParticipationEvent } from \"../../../models/plugins/participation/IParticipationEvent\";\nimport { IParticipationEventInfo } from \"../../../models/plugins/participation/IParticipationEventInfo\";\nimport { IParticipationEvents } from \"../../../models/plugins/participation/IParticipationEvents\";\nimport { IParticipationEventStatus } from \"../../../models/plugins/participation/IParticipationEventStatus\";\nimport { AuthService } from \"../../../services/authService\";\nimport { TangleService } from \"../../../services/tangleService\";\nimport { FetchHelper } from \"../../../utils/fetchHelper\";\nimport AsyncComponent from \"../../components/layout/AsyncComponent\";\nimport Dialog from \"../../components/layout/Dialog\";\nimport Spinner from \"../../components/layout/Spinner\";\nimport \"./Participation.scss\";\nimport { IParticipationEventAnswer } from \"./../../../models/plugins/participation/IParticipationEventAnswer\";\nimport { IParticipationEventQuestion } from \"./../../../models/plugins/participation/IParticipationEventQuestion\";\nimport { ParticipationState } from \"./ParticipationState\";\n\n/**\n * Participation panel.\n */\nclass Participation extends AsyncComponent<unknown, ParticipationState> {\n    /**\n     * The title of the plugin.\n     */\n    private static readonly PLUGIN_TITLE = \"Participation\";\n\n    /**\n     * The description of the plugin.\n     */\n    private static readonly PLUGIN_DESCRIPTION = \"Manage on-tangle ballots and staking events tracked by the node.\";\n\n    /**\n     * Is the participation plugin available.\n     */\n    private static _isAvailable: boolean = false;\n\n    /**\n     * Create a new instance of Participation.\n     * @param props The props.\n     */\n    constructor(props: unknown) {\n        super(props);\n\n        this.state = {\n            events: {},\n            eventIds: [],\n            eventInfo: \"\"\n        };\n    }\n\n    /**\n     * Is the plugin available.\n     */\n    public static async initPlugin(): Promise<void> {\n        Participation._isAvailable = false;\n        const tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n        try {\n            const routes = await tangleService.routes();\n            if (routes.routes.includes(\"participation/v1\")) {\n                Participation._isAvailable = true;\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     * Get the plugin details if its availabe.\n     * @returns The plugin details if available.\n     */\n    public static pluginDetails(): {\n        title: string;\n        description: string;\n        settings: ReactNode;\n    } | undefined {\n        if (Participation._isAvailable) {\n            return {\n                title: Participation.PLUGIN_TITLE,\n                description: Participation.PLUGIN_DESCRIPTION,\n                settings: <Participation />\n            };\n        }\n    }\n\n    /**\n     * Build authentication headers.\n     * @returns The authentication headers.\n     */\n    private static buildAuthHeaders(): Record<string, string> {\n        const authService = ServiceFactory.get<AuthService>(\"auth\");\n\n        const headers: Record<string, string> = {};\n        const jwt = authService.isLoggedIn();\n        if (jwt) {\n            headers.Authorization = `Bearer ${jwt}`;\n        }\n        const csrf = authService.csrf();\n        if (csrf) {\n            headers[\"X-CSRF-Token\"] = csrf;\n        }\n\n        return headers;\n    }\n\n    /**\n     * The component did mount.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        await this.fetchEvents();\n    }\n\n    /**\n     * The component updated.\n     * @param prevProps The previous properties.\n     * @param prevState The previous state.\n     */\n    public async componentDidUpdate(prevProps: unknown, prevState: ParticipationState): Promise<void> {\n        if (this.state.eventIds !== prevState.eventIds) {\n            const difference = this.state.eventIds.filter(e => !prevState.eventIds.includes(e));\n            for (const id of difference) {\n                await this.fetchEventInfo(id);\n                await this.fetchEventStatus(id);\n            }\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"participation\">\n                <div className=\"content\">\n                    <div className=\"row end\">\n                        <button\n                            type=\"button\"\n                            className=\"add-button\"\n                            onClick={() => this.setState({\n                                    dialogType: \"add\",\n                                    dialogStatus: \"\",\n                                    dialogBusy: false\n                                })}\n                        >\n                            Add Event\n                        </button>\n                    </div>\n                    <div className=\"events-panel\">\n                        {this.state.eventIds.length === 0 && (\n                            <p className=\"margin-t-s\">There are no events.</p>\n                        )}\n                        {this.state.eventIds.map((e, idx) => {\n                            const eventInfo = this.state.events[e];\n                            return (\n                                <div className=\"events-panel--item\" key={idx}>\n                                    <div className=\"card col padding-m\">\n                                        <div className=\"col\">\n                                            <div className=\"event-id word-break-all margin-b-s\">\n                                                <span><h4>ID</h4> {e}</span>\n                                            </div>\n                                            <div className=\"event-item event-item--stretch\">\n                                                <h4>Name</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {eventInfo?.name}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"row wrap\">\n                                            <div className=\"event-item\">\n                                                <h4>Milestone index commence</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {eventInfo?.milestoneIndexCommence}\n                                                </div>\n                                            </div>\n                                            <div className=\"event-item\">\n                                                <h4>Milestone index start</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {eventInfo?.milestoneIndexStart}\n                                                </div>\n                                            </div>\n                                            <div className=\"event-item\">\n                                                <h4>Milestone index end</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {eventInfo?.milestoneIndexEnd}\n                                                </div>\n                                            </div>\n                                            <div className=\"event-item\">\n                                                <h4>Type</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {eventInfo?.payload.type === 0 ? \"Ballot\" : \"Staking\"}\n                                                </div>\n                                            </div>\n                                            <div className=\"event-item\">\n                                                <h4>Status</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {eventInfo?.status?.status\n                                                    .slice(0, 1).toUpperCase()}{eventInfo?.status?.status.slice(1)}\n                                                </div>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"row event-actions\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"card--action card--action margin-t-s margin-r-s\"\n                                                onClick={() => this.setState({\n                                                    dialogType: \"details\",\n                                                    dialogStatus: \"\",\n                                                    dialogBusy: false,\n                                                    dialogDetailsEvent: this.state.events[e]\n                                                })}\n                                            >\n                                                More details\n                                            </button>\n                                            <button\n                                                type=\"button\"\n                                                className=\"card--action card--action-danger margin-t-s\"\n                                                onClick={() => this.setState({\n                                                    dialogType: \"delete\",\n                                                    dialogStatus: \"\",\n                                                    dialogBusy: false,\n                                                    deleteId: e\n                                                })}\n                                            >\n                                                Delete\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                    {this.state.dialogType && (\n                        <Dialog\n                            title={{\n                                \"add\": \"Add Event\",\n                                \"delete\": \"Delete Event\",\n                                \"details\": \"Event details\"\n                            }[this.state.dialogType]}\n                            actions={[\n                                <button\n                                    className={(this.state.dialogType === \"details\") ? \"d-none\" : \"\"}\n                                    type=\"button\"\n                                    onClick={async () => {\n                                            if (this.state.dialogType === \"add\") {\n                                               await this.submitEvent();\n                                            } else if (this.state.deleteId) {\n                                               await this.eventDelete(this.state.deleteId);\n                                            }\n                                        }}\n                                    key={0}\n                                    disabled={this.state.dialogBusy || (\n                                        this.state.dialogType === \"add\" &&\n                                        (!this.state.eventInfo ||\n                                        this.state.eventInfo.trim().length === 0 ||\n                                        !this.validateJsonOrUrl(this.state?.eventInfo))\n                                    )}\n                                >\n                                    {this.state.dialogType === \"add\" ? \"OK\" : \"Yes\"}\n                                </button>,\n                                <button\n                                    type=\"button\"\n                                    onClick={() => this.setState({\n                                        dialogType: undefined,\n                                        deleteId: undefined,\n                                        dialogDetailsEvent: undefined\n                                    })}\n                                    key={1}\n                                    disabled={this.state.dialogBusy}\n                                >\n                                    {(this.state.dialogType === \"add\" ||\n                                    this.state.dialogType === \"details\") ? \"Cancel\" : \"No\"}\n                                </button>\n                            ]}\n                        >\n                            {this.state.dialogType === \"delete\" && (\n                                <p className=\"margin-b-l\">\n                                    {`Are you sure you want to delete the event \n                                    ${(this.state.deleteId)\n                                    ? this.state.events[this.state.deleteId].name : \"\"}?`}\n                                </p>\n                            )}\n                            {(this.state.dialogType === \"details\" && this.state.dialogDetailsEvent) && (\n                                <div className=\"row wrap\">\n                                    <div className=\"event-item\">\n                                        <h4>Milestone index</h4>\n                                        <div className=\"event-value word-break-all\">\n                                            {this.state.dialogDetailsEvent.status?.milestoneIndex}\n                                        </div>\n                                    </div>\n                                    <div className=\"event-item\">\n                                        <h4>Status</h4>\n                                        <div className=\"event-value word-break-all\">\n                                            {this.state.dialogDetailsEvent.status?.status\n                                            .slice(0, 1).toUpperCase()}\n                                            {this.state.dialogDetailsEvent.status?.status.slice(1)}\n                                        </div>\n                                    </div>\n                                    {/* Ballot */}\n                                    {this.state.dialogDetailsEvent.payload.type === 0 && (\n                                        <div>\n                                            {this.state.dialogDetailsEvent.payload.questions\n                                            ?.map((q: IParticipationEventQuestion, idx: number) => (\n                                                <div className=\"event-item--highlight margin-b-s\" key={idx}>\n                                                    <div className=\"event-item event-item--stretch\">\n                                                        <h4>Question</h4>\n                                                        <div className=\"event-value word-break-all\">\n                                                            {q.text}\n                                                        </div>\n                                                    </div>\n\n                                                    {q.answers.map((a: IParticipationEventAnswer, idy) => (\n                                                        <div className=\"row wrap\" key={idy}>\n                                                            <div className=\"event-item event-item--small\">\n                                                                <h4>Answer</h4>\n                                                                <div className=\"event-value word-break-all\">\n                                                                    {a.text}\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"event-item event-item--small\">\n                                                                <h4>current</h4>\n                                                                <div className=\"event-value word-break-all\">\n                                                                    {(this.state.dialogDetailsEvent?.status?.questions)\n                                                                    ? this.state.dialogDetailsEvent.status\n                                                                    .questions[idx].answers[idy].current : \"\" }\n                                                                </div>\n                                                            </div>\n                                                            <div className=\"event-item event-item--small\">\n                                                                <h4>accumulated</h4>\n                                                                <div className=\"event-value word-break-all\">\n                                                                    {(this.state.dialogDetailsEvent?.status?.questions)\n                                                                    ? this.state.dialogDetailsEvent.status\n                                                                    .questions[idx].answers[idy].accumulated : \"\"}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    ))}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                    {/* Staking */}\n                                    {this.state.dialogDetailsEvent.payload.type === 1 && (\n                                        <div className=\"row event-item--highlight margin-b-s\">\n                                            <div className=\"event-item event-item--small\">\n                                                <h4>Symbol</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {this.state.dialogDetailsEvent.status?.staking?.symbol}\n                                                </div>\n                                            </div>\n                                            <div className=\"event-item event-item--small\">\n                                                <h4>Staked</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {this.state.dialogDetailsEvent.status?.staking?.staked}\n                                                </div>\n                                            </div>\n                                            <div className=\"event-item event-item--small\">\n                                                <h4>Rewarded</h4>\n                                                <div className=\"event-value word-break-all\">\n                                                    {this.state.dialogDetailsEvent.status?.staking?.rewarded}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                            {this.state.dialogType === \"add\" && (\n                                <React.Fragment>\n                                    <p>Please enter the details of the event to {this.state.dialogType}.</p>\n\n                                    <div className=\"dialog--label\">\n                                        JSON Configuration or URL\n                                    </div>\n                                    <div className=\"dialog--value\">\n                                        <textarea\n                                            className=\"textarea--stretch\n                                            dialog--value-textarea\n                                            dialog--value-textarea__json\"\n                                            placeholder='e.g. { \"name\":\"Example event title\"... } or http://example.com'\n                                            value={this.state.eventInfo}\n                                            disabled={this.state.dialogBusy}\n                                            onChange={e => this.setState({ eventInfo: e.target.value })}\n                                        />\n                                        {this.state.eventInfo && !this.validateJsonOrUrl(this.state.eventInfo) && (\n                                        <span className=\"validation--error\">Not a valid JSON or URL</span>\n                                        )}\n                                    </div>\n                                </React.Fragment>\n                            )}\n                            {this.state.dialogBusy && <Spinner />}\n                            <p className={\n                                classNames(\n                                    \"margin-t-l\",\n                                    { \"danger\": !this.state.dialogBusy }\n                                )\n                            }\n                            >\n                                {this.state.dialogStatus}\n                            </p>\n                        </Dialog>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Get Participation Events.\n     */\n    private async fetchEvents(): Promise<void> {\n        try {\n            const response = await FetchHelper.json<unknown, IParticipationEvents>(\n                `${window.location.protocol}//${window.location.host}`,\n                \"/dashboard/api/participation/v1/events\",\n                \"get\",\n                undefined,\n                Participation.buildAuthHeaders());\n\n            if (response?.eventIds) {\n                this.setState({\n                    eventIds: response.eventIds\n                });\n            } else {\n                console.log(response.error);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     *  Get the event information as a JSON payload.\n     * @param id Event id\n     */\n    private async fetchEventInfo(id: string): Promise<void> {\n        try {\n            const response = await FetchHelper.json<unknown, IParticipationEventInfo>(\n                `${window.location.protocol}//${window.location.host}`,\n                `/dashboard/api/participation/v1/events/${id}`,\n                \"get\",\n                undefined,\n                Participation.buildAuthHeaders());\n\n            if (!response?.error) {\n                this.setState(prevState => ({\n                    events: {\n                        ...prevState.events,\n                        [id]: response\n                    }\n                }));\n            } else {\n                console.log(response.error);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     *  Get the event status info as a JSON payload.\n     * @param id Event id\n     */\n    private async fetchEventStatus(id: string): Promise<void> {\n        try {\n            const response = await FetchHelper.json<unknown, IParticipationEventStatus>(\n                `${window.location.protocol}//${window.location.host}`,\n                `/dashboard/api/participation/v1/events/${id}/status`,\n                \"get\",\n                undefined,\n                Participation.buildAuthHeaders());\n\n            if (!response?.error) {\n                if (this.state.events[id]) {\n                    this.setState(prevState => ({\n                        ...prevState,\n                        events: {\n                            ...prevState.events,\n                            [id]: {\n                                ...prevState.events[id],\n                                status: response\n                            }\n                        }\n                    }));\n                }\n            } else {\n                console.log(response.error);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     *  Submit event to be added.\n     */\n    private async submitEvent(): Promise<void> {\n        if (this.state.eventInfo) {\n            try {\n                await this.eventAdd(JSON.parse(this.state.eventInfo) as IParticipationEventInfo);\n            } catch {\n                try {\n                    const url = new URL(this.state.eventInfo);\n                    const config = await this.fetchEventJsonConfig(url);\n\n                    if (config) {\n                        await this.eventAdd(config);\n                    }\n                } catch (error) {\n                    if (error instanceof Error) {\n                        this.setState({\n                            dialogBusy: false,\n                            dialogStatus: `Failed to add event: ${error.message}`\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *  Add new Event.\n     * @param eventInfo JSON string that contains the event info that is to be added.\n     */\n    private async eventAdd(eventInfo: IParticipationEventInfo): Promise<void> {\n        this.setState({\n            dialogBusy: true,\n            dialogStatus: \"Adding event, please wait...\"\n        }, async () => {\n            try {\n                const response = await FetchHelper.json<unknown, IParticipationEvent>(\n                    `${window.location.protocol}//${window.location.host}`,\n                    \"/dashboard/api/participation/v1/admin/events\",\n                    \"post\",\n                    eventInfo,\n                    Participation.buildAuthHeaders());\n\n                if (response.eventId) {\n                    const id = response.eventId;\n                    this.setState(prevState => ({\n                        eventIds: [\n                            id,\n                            ...prevState.eventIds\n                        ],\n                        dialogBusy: false,\n                        dialogStatus: \"\",\n                        dialogType: undefined,\n                        eventInfo: undefined\n                    }));\n                } else {\n                    this.setState({\n                        dialogBusy: false,\n                        dialogStatus: `Failed to add event: ${response.error?.message}`\n                    });\n                }\n            } catch (error) {\n                if (error instanceof Error) {\n                    this.setState({\n                        dialogBusy: false,\n                        dialogStatus: `Failed to add event: ${error.message}`\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     *  Delete event.\n     * @param eventId The Id of the event to delete\n     */\n    private async eventDelete(eventId: string): Promise<void> {\n        this.setState({\n            dialogBusy: true,\n            dialogStatus: \"Deleting event, please wait...\"\n        }, async () => {\n            try {\n                const response = await FetchHelper.json<unknown, {\n                    error?: {\n                        message: string;\n                    };\n                }>(\n                    `${window.location.protocol}//${window.location.host}`,\n                    `/dashboard/api/participation/v1/admin/events/${eventId}`,\n                    \"delete\",\n                    undefined,\n                    Participation.buildAuthHeaders());\n\n                if (Object.keys(response).length === 0) {\n                    this.setState({\n                        eventIds: this.state.eventIds.filter(id => id !== eventId),\n                        dialogBusy: false,\n                        dialogStatus: \"\",\n                        dialogType: undefined\n                    });\n                } else {\n                    this.setState({\n                        dialogBusy: false,\n                        dialogStatus: `Failed to delete event: ${response.error?.message}`\n                    });\n                    console.log(response.error);\n                }\n            } catch (error) {\n                if (error instanceof Error) {\n                    this.setState({\n                        dialogBusy: false,\n                        dialogStatus: `Failed to delete event: ${error.message}`\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     *  Get the event information as a JSON payload.\n     * @param url The url that returns event info as Json\n     * @returns Config of the event\n     */\n    private async fetchEventJsonConfig(url: URL): Promise<IParticipationEventInfo | undefined> {\n        try {\n            const response = await FetchHelper.json<unknown, IParticipationEventInfo>(\n                url.origin,\n                url.pathname,\n                \"get\");\n\n                return response;\n        } catch {\n            try {\n                const response = await FetchHelper.text<unknown, IParticipationEventInfo>(\n                    url.origin,\n                    url.pathname,\n                    \"get\");\n\n                    return response;\n            } catch (error) {\n                if (error instanceof Error) {\n                    this.setState({\n                        dialogBusy: false,\n                        dialogStatus: `Failed to add event: ${error.message}`\n                    });\n                }\n            }\n        }\n    }\n\n    /**\n     * Validate is input string valid json or url.\n     * @param input The input to validate\n     * @returns Returns boolean if input is valid\n     */\n    private validateJsonOrUrl(input: string): boolean {\n        try {\n            JSON.parse(input);\n            return true;\n        } catch {\n            try {\n                const url = new URL(input);\n                return Boolean(url);\n             } catch {\n                 return false;\n             }\n        }\n    }\n}\n\nexport default Participation;\n","var _g, _defs;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgToggle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 28,\n    height: 28,\n    viewBox: \"0 0 28 28\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#filter0_d)\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 14,\n    cy: 14,\n    r: 12,\n    fill: \"currentColor\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"filter0_d\",\n    x: 0,\n    y: 0,\n    width: 28,\n    height: 28,\n    filterUnits: \"userSpaceOnUse\",\n    colorInterpolationFilters: \"sRGB\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 1\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 1\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0.375 0 0 0 0 0.375 0 0 0 0 0.375 0 0 0 0.25 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in2: \"BackgroundImageFix\",\n    result: \"effect1_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    mode: \"normal\",\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow\",\n    result: \"shape\"\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgToggle);\nexport default __webpack_public_path__ + \"static/media/toggle.9da7d3b7.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\";\nimport React, { Component, ReactNode } from \"react\";\nimport \"./ToggleButton.scss\";\nimport { ReactComponent as ToggleIcon } from \"../../../assets/toggle.svg\";\nimport { ToggleButtonProps } from \"./ToggleButtonProps\";\nimport { ToggleButtonState } from \"./ToggleButtonState\";\n\n/**\n * Component which will display a toggle button.\n */\nclass ToggleButton extends Component<ToggleButtonProps, ToggleButtonState> {\n    /**\n     * Create a new instance of ToggleButton.\n     * @param props The props.\n     */\n    constructor(props: ToggleButtonProps) {\n        super(props);\n\n        this.state = {\n            value: props.value\n        };\n    }\n\n    /**\n     * The component did update.\n     * @param prevProps The previous properties.\n     */\n    public componentDidUpdate(prevProps: ToggleButtonProps): void {\n        if (this.props.value !== prevProps.value) {\n            this.setState({ value: this.props.value });\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <button\n                type=\"button\"\n                className={\n                    classNames(\n                        \"toggle-button\",\n                        { \"toggle-button--checked\": this.state.value }\n                    )\n                }\n                onClick={e => this.setState({ value: !this.state.value },\n                    () => {\n                        this.props.onChanged(this.state.value);\n                    })}\n            >\n                <div className=\"icon-container\">\n                    <ToggleIcon />\n                </div>\n            </button>\n        );\n    }\n}\n\nexport default ToggleButton;\n","import React, { ReactNode } from \"react\";\nimport { ServiceFactory } from \"../../../factories/serviceFactory\";\nimport { ISpammerSettings } from \"../../../models/plugins/ISpammerSettings\";\nimport { AuthService } from \"../../../services/authService\";\nimport { TangleService } from \"../../../services/tangleService\";\nimport { FetchHelper } from \"../../../utils/fetchHelper\";\nimport AsyncComponent from \"../../components/layout/AsyncComponent\";\nimport ToggleButton from \"../layout/ToggleButton\";\nimport \"./Spammer.scss\";\nimport { SpammerState } from \"./SpammerState\";\n\n/**\n * Spammer panel.\n */\nclass Spammer extends AsyncComponent<unknown, SpammerState> {\n    /**\n     * The title of the plugin.\n     */\n    private static readonly PLUGIN_TITLE = \"Spammer\";\n\n    /**\n     * The description of the plugin.\n     */\n    private static readonly PLUGIN_DESCRIPTION = \"Spam the IOTA network with data blocks.\";\n\n    /**\n     * Is the spammer plugin available.\n     */\n    private static _isAvailable: boolean = false;\n\n    /**\n     * Create a new instance of Spammer.\n     * @param props The props.\n     */\n    constructor(props: unknown) {\n        super(props);\n\n        this.state = {\n            isRunning: false,\n            bps: \"1\",\n            cpu: \"80\",\n            workers: \"0\",\n            workersMax: 0\n        };\n    }\n\n    /**\n     * Is the plugin available.\n     */\n    public static async initPlugin(): Promise<void> {\n        Spammer._isAvailable = false;\n        const tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n        try {\n            const routes = await tangleService.routes();\n            if (routes.routes.includes(\"spammer/v1\")) {\n                Spammer._isAvailable = true;\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     * Get the plugin details if its availabe.\n     * @returns The plugin details if available.\n     */\n    public static pluginDetails(): {\n        title: string;\n        description: string;\n        settings: ReactNode;\n    } | undefined {\n        if (Spammer._isAvailable) {\n            return {\n                title: Spammer.PLUGIN_TITLE,\n                description: Spammer.PLUGIN_DESCRIPTION,\n                settings: <Spammer />\n            };\n        }\n    }\n\n    /**\n     * Build authentication headers.\n     * @returns The authentication headers.\n     */\n    private static buildAuthHeaders(): Record<string, string> {\n        const authService = ServiceFactory.get<AuthService>(\"auth\");\n\n        const headers: Record<string, string> = {};\n        const jwt = authService.isLoggedIn();\n        if (jwt) {\n            headers.Authorization = `Bearer ${jwt}`;\n        }\n        const csrf = authService.csrf();\n        if (csrf) {\n            headers[\"X-CSRF-Token\"] = csrf;\n        }\n\n        return headers;\n    }\n\n    /**\n     * The component did mount.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        await this.pluginStatus();\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"card padding-l\">\n                <div className=\"spammer\">\n                    <h2>{Spammer.PLUGIN_TITLE}</h2>\n                    <p className=\"margin-t-s\">\n                        {Spammer.PLUGIN_DESCRIPTION}\n                    </p>\n                    <div className=\"card--label\">\n                        Running\n                    </div>\n                    <div className=\"card--value row\">\n                        <ToggleButton\n                            value={this.state.isRunning}\n                            onChanged={async value => {\n                                await (value ? this.pluginStart() : this.pluginStop());\n                            }}\n                        />\n                    </div>\n                    <h2 className=\"margin-t-s\">Settings</h2>\n                    <div className=\"card--label\">\n                        Blocks Per Second\n                    </div>\n                    <div className=\"card--value row\">\n                        <input\n                            type=\"text\"\n                            value={this.state.bps}\n                            disabled={!this.state.isRunning}\n                            onChange={e => this.setState({ bps: e.target.value })}\n                            onBlur={e => this.validateSettings()}\n                        />\n                    </div>\n                    <div className=\"card--label\">\n                        CPU Utilization\n                    </div>\n                    <div className=\"card--value row middle\">\n                        <input\n                            type=\"text\"\n                            value={this.state.cpu}\n                            disabled={!this.state.isRunning}\n                            onChange={e => this.setState({ cpu: e.target.value })}\n                            onBlur={e => this.validateSettings()}\n                        />\n                        <p className=\"margin-l-t\">%</p>\n                    </div>\n                    <div className=\"card--label\">\n                        Number of Workers\n                    </div>\n                    <div className=\"card--value row\">\n                        <input\n                            type=\"text\"\n                            value={this.state.workers}\n                            disabled={!this.state.isRunning}\n                            onChange={e => this.setState({ workers: e.target.value })}\n                            onBlur={e => this.validateSettings()}\n                        />\n                    </div>\n                    <hr />\n                    <div className=\"card--value\">\n                        <button\n                            className=\"card--action margin-r-s\"\n                            type=\"button\"\n                            disabled={!this.state.isRunning}\n                            onClick={async e => this.pluginStart()}\n                        >\n                            Apply\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n    /**\n     * Get the status for the plugin.\n     */\n    private async pluginStatus(): Promise<void> {\n        try {\n            const response = await FetchHelper.json<unknown, ISpammerSettings>(\n                    `${window.location.protocol}//${window.location.host}`,\n                    \"/dashboard/api/spammer/v1/status\",\n                    \"get\",\n                    undefined,\n                    Spammer.buildAuthHeaders()\n                );\n\n            if (!response?.error) {\n                this.setState({\n                    isRunning: response.running,\n                    bps: response.bpsRateLimit.toString(),\n                    cpu: (response.cpuMaxUsage * 100).toString(),\n                    workers: response.spammerWorkers.toString(),\n                    workersMax: response.spammerWorkersMax\n                });\n            } else {\n                console.log(\"loging eror\", response.error);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     * Validate the settings for the plugin.\n     */\n    private validateSettings(): void {\n        const bps = Number.parseFloat(this.state.bps);\n        if (Number.isNaN(bps)) {\n            this.setState({ bps: \"1\" });\n        }\n\n        const cpu = Number.parseFloat(this.state.cpu);\n        if (Number.isNaN(cpu)) {\n            this.setState({ cpu: \"80\" });\n        } else if (cpu < 0 || cpu > 100) {\n            this.setState({ cpu: \"80\" });\n        }\n\n        const numWorkers = Number.parseInt(this.state.workers, 10);\n        if (Number.isNaN(numWorkers)) {\n            this.setState({ workers: this.state.workersMax.toString() });\n        } else if (numWorkers <= 0 || numWorkers > this.state.workersMax) {\n            this.setState({ workers: this.state.workersMax.toString() });\n        }\n    }\n\n    /**\n     * Start the plugin.\n     */\n    private async pluginStart(): Promise<void> {\n        try {\n            await FetchHelper.json<unknown, ISpammerSettings>(\n                `${window.location.protocol}//${window.location.host}`,\n                \"/dashboard/api/spammer/v1/start\",\n                \"post\",\n                {\n                    bpsRateLimit: Number.parseFloat(this.state.bps),\n                    cpuMaxUsage: Number.parseFloat(this.state.cpu) / 100,\n                    spammerWorkers: Number.parseInt(this.state.workers, 10)\n                },\n                Spammer.buildAuthHeaders());\n\n            await this.pluginStatus();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    /**\n     * Stop the plugin.\n     */\n    private async pluginStop(): Promise<void> {\n        try {\n            await FetchHelper.json<unknown, ISpammerSettings>(\n                `${window.location.protocol}//${window.location.host}`,\n                \"/dashboard/api/spammer/v1/stop\",\n                \"post\",\n                undefined,\n                Spammer.buildAuthHeaders());\n\n            await this.pluginStatus();\n        } catch (err) {\n            console.log(err);\n        }\n    }\n}\n\nexport default Spammer;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.6151 6.00057L11.6514 1.96311C11.7605 1.85778 11.8475 1.73179 11.9073 1.59248C11.9671 1.45318 11.9986 1.30335 12 1.15174C12.0013 1.00013 11.9724 0.849774 11.915 0.709449C11.8576 0.569124 11.7728 0.441638 11.6656 0.33443C11.5584 0.227222 11.4309 0.142439 11.2906 0.0850271C11.1502 0.0276156 10.9999 -0.00127433 10.8483 4.31112e-05C10.6967 0.00136056 10.5468 0.032859 10.4075 0.0927004C10.2682 0.152542 10.1422 0.239528 10.0369 0.348583L5.99943 4.3849L1.96311 0.348583C1.85778 0.239528 1.73179 0.152542 1.59248 0.0927004C1.45318 0.032859 1.30335 0.00136056 1.15174 4.31112e-05C1.00013 -0.00127433 0.849774 0.0276156 0.709449 0.0850271C0.569124 0.142439 0.441638 0.227222 0.33443 0.33443C0.227222 0.441638 0.142439 0.569124 0.0850271 0.709449C0.0276156 0.849774 -0.00127433 1.00013 4.31112e-05 1.15174C0.00136056 1.30335 0.032859 1.45318 0.0927004 1.59248C0.152542 1.73179 0.239528 1.85778 0.348583 1.96311L4.3849 5.99943L0.348583 10.0369C0.239528 10.1422 0.152542 10.2682 0.0927004 10.4075C0.032859 10.5468 0.00136056 10.6967 4.31112e-05 10.8483C-0.00127433 10.9999 0.0276156 11.1502 0.0850271 11.2906C0.142439 11.4309 0.227222 11.5584 0.33443 11.6656C0.441638 11.7728 0.569124 11.8576 0.709449 11.915C0.849774 11.9724 1.00013 12.0013 1.15174 12C1.30335 11.9986 1.45318 11.9671 1.59248 11.9073C1.73179 11.8475 1.85778 11.7605 1.96311 11.6514L5.99943 7.6151L10.0369 11.6514C10.1422 11.7605 10.2682 11.8475 10.4075 11.9073C10.5468 11.9671 10.6967 11.9986 10.8483 12C10.9999 12.0013 11.1502 11.9724 11.2906 11.915C11.4309 11.8576 11.5584 11.7728 11.6656 11.6656C11.7728 11.5584 11.8576 11.4309 11.915 11.2906C11.9724 11.1502 12.0013 10.9999 12 10.8483C11.9986 10.6967 11.9671 10.5468 11.9073 10.4075C11.8475 10.2682 11.7605 10.1422 11.6514 10.0369L7.6151 5.99943V6.00057Z\",\n    fill: \"#9AADCE\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClose);\nexport default __webpack_public_path__ + \"static/media/close.3328747e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { ReactNode } from \"react\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { AuthService } from \"../../services/authService\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport TabPanel from \"../components/layout/TabPanel\";\nimport Participation from \"../components/plugins/Participation\";\nimport Spammer from \"../components/plugins/Spammer\";\nimport \"./Plugins.scss\";\nimport { PluginsState } from \"./PluginsState\";\n\n/**\n * Plugins panel.\n */\nclass Plugins extends AsyncComponent<unknown, PluginsState> {\n    /**\n     * The auth service.\n     */\n    private readonly _authService: AuthService;\n\n    /**\n     * Create a new instance of Plugins.\n     * @param props The props.\n     */\n    constructor(props: unknown) {\n        super(props);\n\n        this._authService = ServiceFactory.get<AuthService>(\"auth\");\n\n        this.state = {\n            plugins: []\n        };\n    }\n\n    /**\n     * The component did mount.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        const plugins = [];\n\n        if (this._authService.isLoggedIn()) {\n            const pluginDetailsSpammer = Spammer.pluginDetails();\n            if (pluginDetailsSpammer) {\n                plugins.push(pluginDetailsSpammer);\n            }\n            const pluginDetailsParticipation = Participation.pluginDetails();\n            if (pluginDetailsParticipation) {\n                plugins.push(pluginDetailsParticipation);\n            }\n        }\n\n        if (plugins.length > 0) {\n            this.setState({\n                activeTab: plugins[0].title\n            });\n        }\n\n        this.setState({\n            plugins\n        });\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"plugins\">\n                <div className=\"content\">\n                    {this.state.plugins.length === 0 && (\n                        <p className=\"margin-t-s\">\n                            No plugins enabled which are supported by the dashboard.<br />\n                            More information about managing plugins can be found on the\n                            {\" \"}\n                            <a\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                href=\"https://wiki.iota.org/hornet/post_installation/managing_a_node#plugins\"\n                            >\n                                Hornet Developer Documentation.\n                            </a>\n                        </p>\n                    )}\n                    <TabPanel\n                        tabs={this.state.plugins.map(p => p.title)}\n                        activeTab={this.state.activeTab ? this.state.activeTab : \"\"}\n                        onTabChanged={activeTab => {\n                            this.setState({\n                                activeTab\n                            });\n                        }}\n                    >\n                        {this.state.plugins.map((p, idx) => (\n                            <div data-label={p.title} key={idx}>\n                                {p.settings}\n                            </div>\n                        ))}\n\n                    </TabPanel>\n                </div>\n            </div >\n        );\n    }\n}\n\nexport default Plugins;\n","import { Blake2b } from \"@iota/crypto.js\";\nimport { serializeBlock } from \"@iota/iota.js\";\nimport { Converter, WriteStream } from \"@iota/util.js\";\nimport React, { ReactNode } from \"react\";\nimport { Link, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport { ReactComponent as ChevronLeftIcon } from \"../../assets/chevron-left.svg\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { TangleService } from \"../../services/tangleService\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport Spinner from \"../components/layout/Spinner\";\nimport \"./Search.scss\";\nimport { SearchRouteProps } from \"./SearchRouteProps\";\nimport { SearchState } from \"./SearchState\";\n\n/**\n * Component which will show the search page.\n */\nclass Search extends AsyncComponent<RouteComponentProps<SearchRouteProps>, SearchState> {\n    /**\n     * Create a new instance of Search.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps<SearchRouteProps>) {\n        super(props);\n\n        this.state = {\n            statusBusy: true,\n            redirect: \"\",\n            error: \"\"\n        };\n    }\n\n    /**\n     * The component mounted.\n     */\n    public componentDidMount(): void {\n        super.componentDidMount();\n        this.trySearch();\n    }\n\n    /**\n     * The component was updated.\n     * @param prevProps The previous properties.\n     */\n    public componentDidUpdate(prevProps: RouteComponentProps<SearchRouteProps>): void {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            this.trySearch();\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return this.state.redirect.length > 0 ? (\n            <Redirect to={this.state.redirect} />\n        )\n            : (\n                <div className=\"search\">\n                    <div className=\"content\">\n                        <Link\n                            to=\"/explorer\"\n                            className=\"row middle inline\"\n                        >\n                            <ChevronLeftIcon className=\"secondary\" />\n                            <h3 className=\"secondary margin-l-s\">Back to Explorer</h3>\n                        </Link>\n\n                        <div className=\"card margin-t-m padding-l\">\n                            <h2 className=\"margin-b-m\">Search</h2>\n                            {this.state.statusBusy && (<Spinner />)}\n                            {!this.state.statusBusy && (\n                                <React.Fragment>\n                                    {this.state.error && (\n                                        <p className=\"danger\">\n                                            {this.state.error}\n                                        </p>\n                                    )}\n                                    <br />\n                                    <p>Please try again with your query in one of the following formats:</p>\n                                    <br />\n                                    <ul>\n                                        <li>\n                                            <span>Blocks</span>\n                                            <span>64 Hex characters</span>\n                                        </li>\n                                        <li>\n                                            <span>Block using Transaction Id</span>\n                                            <span>64 Hex characters</span>\n                                        </li>\n                                        <li>\n                                            <span>Addresses</span>\n                                            <span>64 Hex characters or Bech32 Format</span>\n                                        </li>\n                                        <li>\n                                            <span>Nft/Alias Addresses</span>\n                                            <span>40 Hex characters or Bech32 Format</span>\n                                        </li>\n                                        <li>\n                                            <span>Outputs</span>\n                                            <span>68 Hex characters or tag</span>\n                                        </li>\n                                        <li>\n                                            <span>Foundry Id</span>\n                                            <span>52 Hex characters</span>\n                                        </li>\n                                        <li>\n                                            <span>Token Id</span>\n                                            <span>76 Hex characters</span>\n                                        </li>\n                                        <li>\n                                            <span>Milestone Index</span>\n                                            <span>Numeric</span>\n                                        </li>\n                                    </ul>\n                                </React.Fragment>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            );\n    }\n\n    /**\n     * Update the state of the component.\n     */\n    private trySearch(): void {\n        const query = (this.props.match.params.query ?? \"\").trim();\n\n        if (query.length > 0) {\n            this.setState({ statusBusy: true }, async () => {\n                const tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n                const response = await tangleService.search(query);\n\n                let redirect = \"\";\n\n                if (response) {\n                    if (response.unavailable) {\n                        redirect = \"/explorer/unavailable\";\n                    } else {\n                        let objType;\n                        let objParam = query;\n\n                        if (response.block) {\n                            objType = \"block\";\n                            // Recalculate the block id from the content, in case\n                            // the lookup was a response to a transaction id lookup\n                            const writeStream = new WriteStream();\n\n                            try {\n                                serializeBlock(writeStream, response.block);\n                            } catch (error) {\n                                if (error instanceof Error) {\n                                    console.log(error.message);\n                                }\n                            }\n                            objParam = Converter.bytesToHex(Blake2b.sum256(writeStream.finalBytes()), true);\n                        } else if (response?.address) {\n                            objType = \"address\";\n                        } else if (response.outputId) {\n                            objType = \"output\";\n                            objParam = response.outputId;\n                        } else if (response.milestone) {\n                            objType = \"milestone\";\n                            objParam = response.milestone.index.toString();\n                        }\n                        if (objType) {\n                            redirect = `/explorer/${objType}/${objParam}`;\n                        }\n                    }\n                }\n\n                this.setState({\n                    error: redirect.length > 0 ? \"\" : \"Nothing could be found for the search.\",\n                    statusBusy: false,\n                    redirect\n                });\n            });\n        } else {\n            this.setState({\n                statusBusy: false,\n                error: \"The search is empty.\"\n            });\n        }\n    }\n}\n\nexport default Search;\n","import React, { ReactNode } from \"react\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\nimport { ReactComponent as ChevronLeftIcon } from \"../../assets/chevron-left.svg\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport \"./Unavailable.scss\";\n\n/**\n * Component which will show the unavailable page.\n */\nclass Unavailable extends AsyncComponent<RouteComponentProps<never>> {\n    /**\n     * Create a new instance of Unavailable.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps<never>) {\n        super(props);\n\n        this.state = {};\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"unavailable\">\n                <div className=\"content\">\n                    <Link\n                        to=\"/explorer\"\n                        className=\"row middle inline\"\n                    >\n                        <ChevronLeftIcon className=\"secondary\" />\n                        <h3 className=\"secondary margin-l-s\">Back to Explorer</h3>\n                    </Link>\n\n                    <div className=\"card margin-t-m padding-l\">\n                        <h2 className=\"margin-b-m\">Service Unavailable</h2>\n                        <p>The node is currently unavailable or is not synced, please try again later.</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Unavailable;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPause(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 3H8C8.53043 3 9.03914 3.21071 9.41421 3.58579C9.78929 3.96086 10 4.46957 10 5V19C10 19.5304 9.78929 20.0391 9.41421 20.4142C9.03914 20.7893 8.53043 21 8 21H6C5.46957 21 4.96086 20.7893 4.58579 20.4142C4.21071 20.0391 4 19.5304 4 19V5C4 4.46957 4.21071 3.96086 4.58579 3.58579C4.96086 3.21071 5.46957 3 6 3V3ZM6 5V19H8V5H6ZM16 3H18C18.5304 3 19.0391 3.21071 19.4142 3.58579C19.7893 3.96086 20 4.46957 20 5V19C20 19.5304 19.7893 20.0391 19.4142 20.4142C19.0391 20.7893 18.5304 21 18 21H16C15.4696 21 14.9609 20.7893 14.5858 20.4142C14.2107 20.0391 14 19.5304 14 19V5C14 4.46957 14.2107 3.96086 14.5858 3.58579C14.9609 3.21071 15.4696 3 16 3V3ZM16 5V19H18V5H16Z\",\n    fill: \"#9AADCE\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPause);\nexport default __webpack_public_path__ + \"static/media/pause.8f183526.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.78205 4.3598L19.2432 11.5176L7.92341 18.8969L7.78205 4.3598Z\",\n    stroke: \"#9AADCE\",\n    strokeWidth: 2,\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlay);\nexport default __webpack_public_path__ + \"static/media/play.0cc752a2.svg\";\nexport { ForwardRef as ReactComponent };","import { TAGGED_DATA_PAYLOAD_TYPE, MILESTONE_PAYLOAD_TYPE, BASIC_OUTPUT_TYPE, TRANSACTION_PAYLOAD_TYPE, UnitsHelper } from \"@iota/iota.js\";\nimport { Converter } from \"@iota/util.js\";\nimport classNames from \"classnames\";\nimport React, { ReactNode } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Viva from \"vivagraphjs\";\nimport { ReactComponent as CloseIcon } from \"../../assets/close.svg\";\nimport { ReactComponent as PauseIcon } from \"../../assets/pause.svg\";\nimport { ReactComponent as PlayIcon } from \"../../assets/play.svg\";\nimport { ServiceFactory } from \"../../factories/serviceFactory\";\nimport { IVisualizerCounts } from \"../../models/visualizer/IVisualizerCounts\";\nimport { IVisualizerVertex } from \"../../models/visualizer/IVisualizerVertex\";\nimport { IBpsMetrics } from \"../../models/websocket/IBpsMetrics\";\nimport { WebSocketTopic } from \"../../models/websocket/webSocketTopic\";\nimport { EventAggregator } from \"../../services/eventAggregator\";\nimport { MetricsService } from \"../../services/metricsService\";\nimport { TangleService } from \"../../services/tangleService\";\nimport { ThemeService } from \"../../services/themeService\";\nimport { VisualizerService } from \"../../services/visualizerService\";\nimport { FormatHelper } from \"../../utils/formatHelper\";\nimport AsyncComponent from \"../components/layout/AsyncComponent\";\nimport \"./Visualizer.scss\";\nimport { VisualizerState } from \"./VisualizerState\";\n\n/**\n * Visualizer panel.\n */\nclass Visualizer extends AsyncComponent<RouteComponentProps, VisualizerState> {\n    /**\n     * Map the vetex states to colors.\n     */\n    private static readonly STATE_COLOR_MAP: { [id: string]: number } = {\n        Solid: 0x4CAAFFFF,\n        Unsolid: 0x8FE6FAFF,\n        Referenced: 0x61E884FF,\n        Conflicting: 0xFF8B5CFF,\n        Transaction: 0xC061E8FF,\n        Milestone: 0xD92121FF,\n        Tip: 0xFFCA62FF,\n        Unknown: 0x9AADCEFF\n    };\n\n    /**\n     * Color for connection between vertices.\n     */\n    private static readonly THEME_COLOR_LINKS: { [theme: string]: number } = {\n        dark: 0xFFFFFF22,\n        light: 0xDDDDDDFF\n    };\n\n    /**\n     * Children link color.\n     */\n    private static readonly COLOR_LINK_CHILDREN = 0xFF5AAAFF;\n\n    /**\n     * Parent link color.\n     */\n    private static readonly COLOR_LINK_PARENTS = 0x0000FFFF;\n\n    /**\n     * The graph element.\n     */\n    private _graphElement: HTMLElement | null;\n\n    /**\n     * The graph instance.\n     */\n    private _graph?: Viva.Graph.IGraph<IVisualizerVertex, unknown>;\n\n    /**\n     * The renderer instance.\n     */\n    private _renderer?: Viva.Graph.View.IRenderer;\n\n    /**\n     * The graphics instance.\n     */\n    private _graphics?: Viva.Graph.View.IWebGLGraphics<IVisualizerVertex, unknown>;\n\n    /**\n     * The visualizer service.\n     */\n    private readonly _vizualizerService: VisualizerService;\n\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The tangle service.\n     */\n    private readonly _tangleService: TangleService;\n\n    /**\n     * The theme service.\n     */\n    private readonly _themeService: ThemeService;\n\n    /**\n     * The bps metrics subscription id.\n     */\n    private _bpsMetricsSubscription?: string;\n\n    /**\n     * The resize method\n     */\n    private readonly _resize: () => void;\n\n    /**\n     * Entered vertex.\n     */\n    private _enteredVertexId?: string;\n\n    /**\n     * Create a new instance of Visualizer.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps) {\n        super(props);\n\n        this._graphElement = null;\n        this._resize = () => this.resize();\n        this._vizualizerService = ServiceFactory.get<VisualizerService>(\"visualizer\");\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n        this._tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n        this._themeService = ServiceFactory.get<ThemeService>(\"theme\");\n\n        this.state = {\n            bps: \"-\",\n            total: \"-\",\n            tips: \"-\",\n            referenced: \"-\",\n            transactions: \"-\",\n            conflicting: \"-\",\n            solid: \"-\",\n            isActive: true,\n            theme: this._themeService.get()\n        };\n    }\n\n    /**\n     * The component will mount.\n     */\n    public componentDidMount(): void {\n        super.componentDidMount();\n\n        window.addEventListener(\"resize\", this._resize);\n\n        this._vizualizerService.subscribe(\n            (vertex, op) => {\n                if (op === \"add\" || op === \"update\") {\n                    this.updateVertex(vertex);\n                } else if (op === \"delete\") {\n                    this.deleteVertex(vertex);\n                }\n            },\n            counts => {\n                if (this.state.isActive) {\n                    this.setState({\n                        total: counts.total.toString(),\n                        tips: counts.tips.toString(),\n                        referenced: counts.total > 0\n                            ? `${(counts.referenced / counts.total * 100).toFixed(2)}%`\n                            : \"-\",\n                        transactions: counts.total > 0\n                            ? `${(counts.transactions / counts.total * 100).toFixed(2)}%`\n                            : \"-\",\n                        conflicting: counts.total > 0\n                            ? `${(counts.conflicting / counts.total * 100).toFixed(2)}%`\n                            : \"-\",\n                        solid: counts.total > 0 ? `${(counts.solid / counts.total * 100).toFixed(2)}%` : \"-\"\n                    });\n                }\n            },\n            (referencedId, excludedIds, counts) => this.referenceVertex(referencedId, excludedIds, counts)\n        );\n\n        this._bpsMetricsSubscription = this._metricsService.subscribe<IBpsMetrics>(\n            WebSocketTopic.BPSMetrics, data => {\n                if (data && this.state.isActive) {\n                    this.setState({ bps: data.new.toString() });\n                }\n            });\n\n        EventAggregator.subscribe(\"theme\", \"visualizer\", theme => {\n            this.setState({\n                theme\n            }, () => this.styleAllLinks());\n        });\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n\n        if (this._bpsMetricsSubscription) {\n            this._metricsService.unsubscribe(this._bpsMetricsSubscription);\n            this._bpsMetricsSubscription = undefined;\n        }\n\n        this._vizualizerService.unsubscribe();\n\n        EventAggregator.unsubscribe(\"theme\", \"visualizer\");\n\n        this._graph = undefined;\n        this._graphics = undefined;\n        this._renderer = undefined;\n        this._graphElement = null;\n        window.removeEventListener(\"resize\", this._resize);\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        return (\n            <div className=\"visualizer\">\n                <div\n                    className=\"canvas\"\n                    ref={r => this.setupGraph(r)}\n                />\n                <div className=\"action-panel-container\">\n                    <div className=\"card padding-0\">\n                        <button\n                            className=\"icon-button\"\n                            type=\"button\"\n                            onClick={() => this.toggleActivity()}\n                        >\n                            {this.state.isActive ? <PauseIcon /> : <PlayIcon />}\n                        </button>\n                    </div>\n                </div>\n                <div className=\"stats-panel-container\">\n                    <div className=\"card stats-panel\">\n                        <div className=\"card--label\">\n                            Blocks\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.total}\n                        </div>\n                        <div className=\"card--label\">\n                            BPS\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.bps}\n                        </div>\n                        <div className=\"card--label\">\n                            Tips\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.tips}\n                        </div>\n                        <div className=\"card--label\">\n                            Referenced\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.referenced}\n                        </div>\n                        <div className=\"card--label\">\n                            Transactions\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.transactions}\n                        </div>\n                        <div className=\"card--label\">\n                            Conflicting\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.conflicting}\n                        </div>\n                        <div className=\"card--label\">\n                            Solid\n                        </div>\n                        <div className=\"card--value\">\n                            {this.state.solid}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"key-panel-container\">\n                    <div className=\"card key-panel\">\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--solid\" />\n                            <div className=\"key-label\">Solid</div>\n                        </div>\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--unsolid\" />\n                            <div className=\"key-label\">Unsolid</div>\n                        </div>\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--referenced\" />\n                            <div className=\"key-label\">Referenced</div>\n                        </div>\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--transaction\" />\n                            <div className=\"key-label\">Transaction</div>\n                        </div>\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--conflicting\" />\n                            <div className=\"key-label\">Conflicting</div>\n                        </div>\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--milestone\" />\n                            <div className=\"key-label\">Milestone</div>\n                        </div>\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--unknown\" />\n                            <div className=\"key-label\">Unknown</div>\n                        </div>\n                        <div className=\"key-panel-item\">\n                            <div className=\"key-marker vertex-state--tip\" />\n                            <div className=\"key-label\">Tip</div>\n                        </div>\n                    </div>\n                </div>\n                {this.state.selected && this._graphElement && (\n                    <div\n                        className=\"info-panel-container\"\n                    >\n                        <div className=\"card fill padding-m\">\n                            <div className=\"row middle spread\">\n                                <div className=\"row middle\">\n                                    <div className={\n                                        classNames(\n                                            \"info-panel--key\",\n                                            `vertex-state--${this.state.selected.state.toLowerCase()}`\n                                        )\n                                    }\n                                    />\n                                    <h3>{this.state.selected.state}{this.state.selected.title}</h3>\n                                </div>\n                                <button\n                                    type=\"button\"\n                                    className=\"icon-button\"\n                                    onClick={() => this.selectNode()}\n                                >\n                                    <CloseIcon />\n                                </button>\n                            </div>\n                            <div className=\"col\">\n                                {this.state.selected.vertex.fullId && (\n                                    <React.Fragment>\n                                        <div className=\"card--label\">\n                                            Block Id\n                                        </div>\n                                        <div className=\"card--value\">\n                                            <a\n                                                href={this.calculateBlockLink(this.state.selected.vertex)}\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                {this.state.selected.vertex.fullId}\n                                            </a>\n                                        </div>\n                                    </React.Fragment>\n                                )}\n                                {this.state.selected.payload &&\n                                    this.state.selected.payload.type === TRANSACTION_PAYLOAD_TYPE && (\n                                        <React.Fragment>\n                                            <div className=\"card--label\">\n                                                Total\n                                            </div>\n                                            <div className=\"card--value\">\n                                                {UnitsHelper.formatBest(this.calculateTotal())}\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                {this.state.selected.payload &&\n                                    this.state.selected.payload.type === MILESTONE_PAYLOAD_TYPE && (\n                                        <React.Fragment>\n                                            <div className=\"card--label\">\n                                                Index\n                                            </div>\n                                            <div className=\"card--value\">\n                                                {this.state.selected.payload.index}\n                                            </div>\n                                            <div className=\"card--label\">\n                                                Date\n                                            </div>\n                                            <div className=\"card--value\">\n                                                {FormatHelper.date(this.state.selected.payload.timestamp, false)}\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                                {this.state.selected.payload &&\n                                    this.state.selected.payload.type === TAGGED_DATA_PAYLOAD_TYPE &&\n                                    this.state.selected.payload.tag && (\n                                        <React.Fragment>\n                                            <div className=\"card--label\">\n                                                Tag UTF8\n                                            </div>\n                                            <div className=\"card--value\">\n                                                {Converter.hexToUtf8(this.state.selected.payload.tag)}\n                                            </div>\n                                            <div className=\"card--label\">\n                                                Tag Hex\n                                            </div>\n                                            <div className=\"card--value\">\n                                                {this.state.selected.payload.tag}\n                                            </div>\n                                        </React.Fragment>\n                                    )}\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    /**\n     * Setup the graph.\n     * @param graphElement The element to use.\n     */\n    private setupGraph(graphElement: HTMLElement | null): void {\n        this._graphElement = graphElement;\n\n        if (graphElement && !this._graph) {\n            this._graph = Viva.Graph.graph();\n\n            this._graphics = Viva.Graph.View.webglGraphics();\n\n            const layout = Viva.Graph.Layout.forceDirected(this._graph, {\n                springLength: 10,\n                springCoeff: 0.0001,\n                stableThreshold: 0.15,\n                gravity: -2,\n                dragCoeff: 0.02,\n                timeStep: 20,\n                theta: 0.8\n            });\n\n            this._graphics.node(node => Viva.Graph.View.webglSquare(\n                this.calculateSize(node.data),\n                `#${Visualizer.STATE_COLOR_MAP[this.calculateState(node.data)].toString(16)}`\n            ));\n\n            this._graphics.link(() => Viva.Graph.View.webglLine(\n                `#${Visualizer.THEME_COLOR_LINKS[this.state.theme].toString(16)}`));\n\n            this._renderer = Viva.Graph.View.renderer(this._graph, {\n                container: graphElement,\n                graphics: this._graphics,\n                layout,\n                renderLinks: true\n            });\n\n            const events = Viva.Graph.webglInputEvents(this._graphics, this._graph);\n\n            events.click(node => this.selectNode(node));\n            events.dblClick(node => {\n                this.selectNode();\n                window.open(\n                    this.calculateBlockLink(node.data),\n                    \"_blank\"\n                );\n            });\n\n            events.mouseEnter(node => {\n                if (!this.state.selected) {\n                    if (this._enteredVertexId) {\n                        this.connectedLinkStyle(this._enteredVertexId, false);\n                        this._enteredVertexId = undefined;\n                    }\n                    if (node) {\n                        this._enteredVertexId = node.data?.shortId ?? node.id.slice(0, 10);\n                        this.connectedLinkStyle(this._enteredVertexId, true);\n                    }\n                }\n            });\n\n            events.mouseLeave(node => {\n                if (this._enteredVertexId) {\n                    this.connectedLinkStyle(this._enteredVertexId, false);\n                    this._enteredVertexId = undefined;\n                }\n            });\n\n            this._renderer.run();\n\n            this._graphics.scale(1, { x: graphElement.clientWidth / 2, y: graphElement.clientHeight / 2 });\n\n            for (let i = 0; i < 12; i++) {\n                this._renderer.zoomOut();\n            }\n        }\n    }\n\n    /**\n     * Draw a vertex.\n     * @param vertex The vertex to draw.\n     */\n    private updateVertex(vertex: IVisualizerVertex): void {\n        if (this._graph) {\n            let node = this.updateNodeUI(vertex.shortId);\n            if (!node) {\n                node = this._graph.addNode(vertex.shortId, vertex);\n            }\n            if (vertex.parents) {\n                const added: string[] = [];\n                for (let i = 0; i < vertex.parents.length; i++) {\n                    const parent = vertex.parents[i];\n                    if (!added.includes(parent) &&\n                        (!node.links || !node.links.some(link => link.toId === parent))) {\n                        added.push(parent);\n                        this._graph.addLink(vertex.shortId, parent);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Update node style.\n     * @param id The node id.\n     * @returns The updated node.\n     */\n    private updateNodeUI(id: string): Viva.Graph.INode<IVisualizerVertex, unknown> | undefined {\n        if (this._graphics && this._graph) {\n            const node = this._graph?.getNode(id);\n\n            if (node) {\n                const nodeUI = this._graphics.getNodeUI(id);\n                if (nodeUI) {\n                    nodeUI.color = Visualizer.STATE_COLOR_MAP[this.calculateState(node.data)];\n                    nodeUI.size = this.calculateSize(node.data);\n                }\n            }\n\n            return node;\n        }\n    }\n\n    /**\n     * Calculate the state for the vertex.\n     * @param vertex The vertex to calculate the state for.\n     * @returns The state.\n     */\n    private calculateState(vertex?: IVisualizerVertex): string {\n        if (!vertex || !vertex.parents) {\n            return \"Unknown\";\n        }\n        if (vertex.isMilestone) {\n            return \"Milestone\";\n        }\n        if (vertex.isTip) {\n            return \"Tip\";\n        }\n        if (vertex.isConflicting) {\n            return \"Conflicting\";\n        }\n        if (vertex.isReferenced) {\n            if (vertex.isTransaction) {\n                return \"Transaction\";\n            }\n            return \"Referenced\";\n        }\n        if (vertex.isSolid) {\n            return \"Solid\";\n        }\n        return \"Unsolid\";\n    }\n\n    /**\n     * Calulate the size for the vertex.\n     * @param vertex The vertex to calculate the size for.\n     * @returns The size.\n     */\n    private calculateSize(vertex?: IVisualizerVertex): number {\n        if (!vertex || !vertex.parents) {\n            return 10;\n        }\n        if (vertex.isSelected || vertex.isMilestone) {\n            return 30;\n        }\n        return 20;\n    }\n\n    /**\n     * Delete a vertex.\n     * @param vertex The vertex to delete.\n     */\n    private deleteVertex(vertex: IVisualizerVertex): void {\n        if (this._graph) {\n            this._graph.removeNode(vertex.shortId);\n\n            if (this.state.selected &&\n                this.state.selected.vertex.shortId === vertex.shortId) {\n                this.setState({ selected: undefined });\n                this.connectedLinkStyle(this.state.selected.vertex.shortId, false);\n            }\n\n            if (this._enteredVertexId &&\n                this._enteredVertexId === vertex.shortId) {\n                this.connectedLinkStyle(this._enteredVertexId, false);\n                this._enteredVertexId = undefined;\n            }\n        }\n    }\n\n    /**\n     * Update the referenced information.\n     * @param referencedId The vertex that has been referenced.\n     * @param excludedIds Excluded ids.\n     * @param counts The visualizer counts.\n     */\n    private referenceVertex(referencedId: string, excludedIds: string[], counts: IVisualizerCounts): void {\n        if (this._graph) {\n            const startNode = this._graph.getNode(referencedId);\n\n            if (startNode) {\n                const seenBackwards: Viva.Graph.INode<IVisualizerVertex, unknown>[] = [];\n                this.dfsIterator(\n                    startNode,\n                    nodeId => {\n                        if (this._graph) {\n                            const parent = this._graph.getNode(nodeId);\n                            if (!parent || !parent.data) {\n                                return true;\n                            }\n\n                            if (!parent.data.isReferenced && !parent.data.isConflicting) {\n                                if (excludedIds.includes(parent.data.shortId)) {\n                                    counts.conflicting++;\n                                    parent.data.isConflicting = true;\n                                    this.updateVertex(parent.data);\n                                    return false;\n                                }\n\n                                counts.referenced++;\n                                parent.data.isReferenced = true;\n                                this.updateVertex(parent.data);\n                                return false;\n                            }\n                        }\n\n                        return true;\n                    },\n                    undefined,\n                    false,\n                    seenBackwards\n                );\n            }\n        }\n    }\n\n    /**\n     * Walk the graph.\n     * @param startNode The node to start with.\n     * @param nodeCallback The iterator method to call on each node.\n     * @param linkCallback The iterator method to call on each link.\n     * @param up Are we walking up or down.\n     * @param seenNodes The nodes we have already seen.\n     */\n    private dfsIterator(\n        startNode: Viva.Graph.INode<IVisualizerVertex, unknown>,\n        nodeCallback: ((nodeId: string) => boolean) | undefined,\n        linkCallback: ((linkId: string) => void) | undefined,\n        up: boolean,\n        seenNodes: Viva.Graph.INode<IVisualizerVertex, unknown>[]): void {\n        if (this._graph) {\n            seenNodes.push(startNode);\n            let pointer = 0;\n\n            while (seenNodes.length > pointer) {\n                const node = seenNodes[pointer++];\n                const nodeId = node.data?.shortId ?? node.id.slice(0, 10);\n\n                if (nodeCallback?.(nodeId)) {\n                    continue;\n                }\n\n                for (const link of node.links) {\n                    if (!up && link.fromId === nodeId) {\n                        if (linkCallback) {\n                            linkCallback(link.id);\n                        }\n                        const linkNode = this._graph.getNode(link.toId);\n                        if (linkNode && !seenNodes.includes(linkNode)) {\n                            seenNodes.push(linkNode);\n                        }\n                    }\n\n                    if (up && link.toId === nodeId) {\n                        if (linkCallback) {\n                            linkCallback(link.id);\n                        }\n                        const linkNode = this._graph.getNode(link.fromId);\n                        if (linkNode && !seenNodes.includes(linkNode)) {\n                            seenNodes.push(linkNode);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * The window was resized.\n     */\n    private resize(): void {\n        if (this._graphics && this._graphElement) {\n            this._graphics.updateSize();\n            this._graphics.scale(1, {\n                x: this._graphElement.clientWidth / 2,\n                y: this._graphElement.clientHeight / 2\n            });\n        }\n    }\n\n    /**\n     * Toggle if the visualizer is active.\n     */\n    private toggleActivity(): void {\n        if (this._renderer) {\n            if (this.state.isActive) {\n                this._renderer.pause();\n            } else {\n                this._renderer.resume();\n            }\n        }\n\n        this.setState({ isActive: !this.state.isActive });\n    }\n\n    /**\n     * Select a node.\n     * @param node The node to select\n     */\n    private selectNode(node?: Viva.Graph.INode<IVisualizerVertex, unknown>): void {\n        if (this.state.selected) {\n            this.state.selected.vertex.isSelected = false;\n            this.updateNodeUI(this.state.selected.vertex.shortId);\n            this.connectedLinkStyle(this.state.selected.vertex.shortId, false);\n        }\n\n        if (node) {\n            if (!node.data) {\n                node.data = {\n                    shortId: node.id\n                };\n            }\n            node.data.isSelected = true;\n            this.updateNodeUI(node.id);\n\n            if (this._enteredVertexId) {\n                this.connectedLinkStyle(this._enteredVertexId, false);\n                this._enteredVertexId = undefined;\n            }\n            this.connectedLinkStyle(node.data.shortId, true);\n\n            this.setState({\n                selected: {\n                    vertex: node?.data,\n                    state: this.calculateState(node.data)\n                }\n            },\n                async () => {\n                    if (node.data?.fullId) {\n                        const payload = await this._tangleService.payload(node.data.fullId);\n                        let payloadTitle = \"\";\n\n                        if (payload) {\n                            if (payload.type === TRANSACTION_PAYLOAD_TYPE) {\n                                payloadTitle = \" - Transaction\";\n                            } else if (payload.type === MILESTONE_PAYLOAD_TYPE) {\n                                payloadTitle = \"\";\n                            } else if (payload.type === TAGGED_DATA_PAYLOAD_TYPE) {\n                                payloadTitle = \" - Tagged data\";\n                            }\n                        } else if (node.data.isMilestone) {\n                            payloadTitle = \" - Checkpoint\";\n                        }\n\n                        this.setState({\n                            selected: {\n                                vertex: node?.data,\n                                state: this.calculateState(node.data),\n                                payload,\n                                title: payloadTitle\n                            }\n                        });\n                    }\n                });\n        } else {\n            this.setState({ selected: undefined });\n        }\n    }\n\n    /**\n     * Calculate the link for the block.\n     * @param vertex The vertex id.\n     * @returns The url for the block.\n     */\n    private calculateBlockLink(vertex?: IVisualizerVertex): string {\n        return vertex?.fullId\n            ? `${window.location.protocol}//${window.location.host}/explorer/block/${vertex.fullId}`\n            : \"\";\n    }\n\n    /**\n     * Highlight the forward and backwards cones.\n     * @param vertexId The node to highlight.\n     * @param highlight Highlight or clear the coloring.\n     */\n    private connectedLinkStyle(vertexId: string, highlight: boolean): void {\n        if (this._graph) {\n            const startNode = this._graph.getNode(vertexId);\n\n            if (startNode) {\n                const seenForward: Viva.Graph.INode<IVisualizerVertex, unknown>[] = [];\n                const seenBackwards: Viva.Graph.INode<IVisualizerVertex, unknown>[] = [];\n\n                this.dfsIterator(\n                    startNode,\n                    undefined,\n                    linkId => {\n                        if (this._graphics) {\n                            const linkUI = this._graphics.getLinkUI(linkId);\n                            if (linkUI) {\n                                linkUI.color = highlight\n                                    ? Visualizer.COLOR_LINK_CHILDREN : Visualizer.THEME_COLOR_LINKS[this.state.theme];\n                            }\n                        }\n                    },\n                    true,\n                    seenBackwards\n                );\n                this.dfsIterator(\n                    startNode,\n                    undefined,\n                    linkId => {\n                        if (this._graphics) {\n                            const linkUI = this._graphics.getLinkUI(linkId);\n                            if (linkUI) {\n                                linkUI.color = highlight\n                                    ? Visualizer.COLOR_LINK_PARENTS : Visualizer.THEME_COLOR_LINKS[this.state.theme];\n                            }\n                        }\n                    },\n                    false,\n                    seenForward\n                );\n            }\n        }\n    }\n\n    /**\n     * Style all the links.\n     */\n    private styleAllLinks(): void {\n        if (this._graph && this._graphics) {\n            this._graph.forEachLink(link => {\n                if (this._graphics) {\n                    const linkUI = this._graphics.getLinkUI(link.id);\n                    if (linkUI) {\n                        linkUI.color = Visualizer.THEME_COLOR_LINKS[this.state.theme];\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Calculate the total of outputs for a transaction payload.\n     * @returns The total.\n     */\n    private calculateTotal(): number {\n        let total = 0;\n\n        if (this.state.selected?.payload?.type === TRANSACTION_PAYLOAD_TYPE) {\n            for (const output of this.state.selected.payload.essence.outputs) {\n                if (output.type === BASIC_OUTPUT_TYPE) {\n                    total += Number(output.amount);\n                }\n            }\n        }\n\n        return total;\n    }\n}\n\nexport default Visualizer;\n","import React, { ReactNode } from \"react\";\nimport { Redirect, Route, RouteComponentProps, Switch, withRouter } from \"react-router-dom\";\nimport { ReactComponent as ExplorerIcon } from \"../assets/explorer.svg\";\nimport { ReactComponent as HomeIcon } from \"../assets/home.svg\";\nimport { ReactComponent as MoonIcon } from \"../assets/moon.svg\";\nimport { ReactComponent as PadlockUnlockedIcon } from \"../assets/padlock-unlocked.svg\";\nimport { ReactComponent as PadlockIcon } from \"../assets/padlock.svg\";\nimport { ReactComponent as PeersIcon } from \"../assets/peers.svg\";\nimport { ReactComponent as PluginsIcon } from \"../assets/plugins.svg\";\nimport { ReactComponent as SunIcon } from \"../assets/sun.svg\";\nimport { ReactComponent as VisualizerIcon } from \"../assets/visualizer.svg\";\nimport { ServiceFactory } from \"../factories/serviceFactory\";\nimport { INodeStatus } from \"../models/websocket/INodeStatus\";\nimport { IPublicNodeStatus } from \"../models/websocket/IPublicNodeStatus\";\nimport { ISyncStatus } from \"../models/websocket/ISyncStatus\";\nimport { WebSocketTopic } from \"../models/websocket/webSocketTopic\";\nimport { AuthService } from \"../services/authService\";\nimport { EventAggregator } from \"../services/eventAggregator\";\nimport { MetricsService } from \"../services/metricsService\";\nimport { ThemeService } from \"../services/themeService\";\nimport { BrandHelper } from \"../utils/brandHelper\";\nimport \"./App.scss\";\nimport { AppState } from \"./AppState\";\nimport AsyncComponent from \"./components/layout/AsyncComponent\";\nimport Breakpoint from \"./components/layout/Breakpoint\";\nimport Header from \"./components/layout/Header\";\nimport HealthIndicator from \"./components/layout/HealthIndicator\";\nimport NavMenu from \"./components/layout/NavMenu\";\nimport NavPanel from \"./components/layout/NavPanel\";\nimport Explorer from \"./routes/Explorer\";\nimport Address from \"./routes/explorer/Address\";\nimport { AddressRouteProps } from \"./routes/explorer/AddressRouteProps\";\nimport Block from \"./routes/explorer/Block\";\nimport { BlockRouteProps } from \"./routes/explorer/BlockRouteProps\";\nimport Milestone from \"./routes/explorer/Milestone\";\nimport { MilestoneRouteProps } from \"./routes/explorer/MilestoneRouteProps\";\nimport OutputRoute from \"./routes/explorer/OutputRoute\";\nimport { OutputRouteProps } from \"./routes/explorer/OutputRouteProps\";\nimport Home from \"./routes/Home\";\nimport Login from \"./routes/Login\";\nimport Peer from \"./routes/Peer\";\nimport { PeerRouteProps } from \"./routes/PeerRouteProps\";\nimport Peers from \"./routes/Peers\";\nimport Plugins from \"./routes/Plugins\";\nimport Search from \"./routes/Search\";\nimport { SearchRouteProps } from \"./routes/SearchRouteProps\";\nimport Unavailable from \"./routes/Unavailable\";\nimport Visualizer from \"./routes/Visualizer\";\n\n/**\n * Main application class.\n */\nclass App extends AsyncComponent<RouteComponentProps, AppState> {\n    /**\n     * The theme service.\n     */\n    private readonly _themeService: ThemeService;\n\n    /**\n     * The auth service.\n     */\n    private readonly _authService: AuthService;\n\n    /**\n     * The metrics service.\n     */\n    private readonly _metricsService: MetricsService;\n\n    /**\n     * The public node status subscription id.\n     */\n    private _publicNodeStatusSubscription?: string;\n\n    /**\n     * The status subscription id.\n     */\n    private _statusSubscription?: string;\n\n    /**\n     * The sync status metrics subscription id.\n     */\n    private _syncStatusSubscription?: string;\n\n    /**\n     * The node alias.\n     */\n    private _alias?: string;\n\n    /**\n     * The lastest milestone index.\n     */\n    private _lmi?: string;\n\n    /**\n     * The confirmed milestone index.\n     */\n    private _cmi?: string;\n\n    /**\n     * The time of the last status update.\n     */\n    private _lastStatus: number;\n\n    /**\n     * The status timer.\n     */\n    private _statusTimer?: NodeJS.Timer;\n\n    /**\n     * Create a new instance of App.\n     * @param props The props.\n     */\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this._themeService = ServiceFactory.get<ThemeService>(\"theme\");\n        this._authService = ServiceFactory.get<AuthService>(\"auth\");\n        this._metricsService = ServiceFactory.get<MetricsService>(\"metrics\");\n        this._lastStatus = 0;\n\n        this.state = {\n            isLoggedIn: Boolean(this._authService.isLoggedIn()),\n            theme: this._themeService.get(),\n            online: false,\n            syncHealth: false,\n            nodeHealth: false\n        };\n\n        this.updateTitle();\n    }\n\n    /**\n     * The component mounted.\n     */\n    public async componentDidMount(): Promise<void> {\n        super.componentDidMount();\n\n        EventAggregator.subscribe(\"auth-state\", \"app\", isLoggedIn => {\n            this.setState({\n                isLoggedIn\n            });\n        });\n\n        EventAggregator.subscribe(\"theme\", \"app\", theme => {\n            this.setState({ theme });\n        });\n\n        this._statusSubscription = this._metricsService.subscribe<INodeStatus>(\n            WebSocketTopic.NodeStatus,\n            data => {\n                if (data && data.nodeAlias !== this._alias) {\n                    this._alias = data.nodeAlias;\n                    this.updateTitle();\n                }\n            });\n\n        this._syncStatusSubscription = this._metricsService.subscribe<ISyncStatus>(\n            WebSocketTopic.SyncStatus,\n            data => {\n                if (data) {\n                    const lmi = data.lmi ? data.lmi.toString() : \"\";\n                    const smi = data.cmi ? data.cmi.toString() : \"\";\n\n                    if (lmi !== this._lmi || smi !== this._cmi) {\n                        this._cmi = smi;\n                        this._lmi = lmi;\n                        this.updateTitle();\n                    }\n                }\n            });\n\n        this._publicNodeStatusSubscription = this._metricsService.subscribe<IPublicNodeStatus>(\n            WebSocketTopic.PublicNodeStatus,\n            data => {\n                if (data) {\n                    this._lastStatus = Date.now();\n                    if (!this.state.online) {\n                        EventAggregator.publish(\"online\", true);\n                        this.setState({\n                            online: true\n                        });\n                    }\n                    if (data.isHealthy !== this.state.nodeHealth) {\n                        this.setState({ nodeHealth: data.isHealthy });\n                    }\n                    if (data.isSynced !== this.state.syncHealth) {\n                        this.setState({ syncHealth: data.isSynced });\n                    }\n                }\n            });\n\n        this._statusTimer = setInterval(() => {\n            if (Date.now() - this._lastStatus > 30000 && this.state.online) {\n                this.setState({\n                    online: false\n                });\n\n                EventAggregator.publish(\"online\", false);\n            }\n        }, 1000);\n    }\n\n    /**\n     * The component will unmount.\n     */\n    public componentWillUnmount(): void {\n        super.componentWillUnmount();\n\n        EventAggregator.unsubscribe(\"auth-state\", \"app\");\n        EventAggregator.unsubscribe(\"theme\", \"app\");\n\n        if (this._statusSubscription) {\n            this._metricsService.unsubscribe(this._statusSubscription);\n            this._statusSubscription = undefined;\n        }\n\n        if (this._syncStatusSubscription) {\n            this._metricsService.unsubscribe(this._syncStatusSubscription);\n            this._syncStatusSubscription = undefined;\n        }\n\n        if (this._publicNodeStatusSubscription) {\n            this._metricsService.unsubscribe(this._publicNodeStatusSubscription);\n            this._publicNodeStatusSubscription = undefined;\n        }\n\n        if (this._statusTimer !== undefined) {\n            clearInterval(this._statusTimer);\n            this._statusTimer = undefined;\n        }\n    }\n\n    /**\n     * Render the component.\n     * @returns The node to render.\n     */\n    public render(): ReactNode {\n        const sections = [\n            {\n                label: \"Home\",\n                icon: <HomeIcon />,\n                route: \"/\",\n                hidden: !this.state.isLoggedIn\n            },\n            {\n                label: \"Peers\",\n                icon: <PeersIcon />,\n                route: \"/peers\",\n                hidden: !this.state.isLoggedIn\n            },\n            {\n                label: \"Explorer\",\n                icon: <ExplorerIcon />,\n                route: \"/explorer\"\n            },\n            {\n                label: \"Visualizer\",\n                icon: <VisualizerIcon />,\n                route: \"/visualizer\"\n            },\n            {\n                label: \"Plugins\",\n                icon: <PluginsIcon />,\n                route: \"/plugins\",\n                hidden: !this.state.isLoggedIn\n            },\n            {\n                label: \"Login\",\n                icon: <PadlockIcon />,\n                route: \"/login\",\n                hidden: this.state.isLoggedIn\n            },\n            {\n                label: \"Logout\",\n                icon: <PadlockUnlockedIcon />,\n                function: () => this._authService.logout(),\n                hidden: !this.state.isLoggedIn\n            }\n        ];\n\n        const endSections = [\n            {\n                label: \"Light\",\n                icon: <SunIcon />,\n                function: () => this._themeService.apply(\"light\", true),\n                hidden: this.state.theme === \"light\"\n            },\n            {\n                label: \"Dark\",\n                icon: <MoonIcon />,\n                function: () => this._themeService.apply(\"dark\", true),\n                hidden: this.state.theme === \"dark\"\n            }\n        ];\n\n        return (\n            <div className=\"app\">\n                <Breakpoint size=\"phone\" aboveBelow=\"above\">\n                    <NavPanel\n                        fullWidth={false}\n                        middle={this.state.online ? sections : []}\n                        end={this.state.online ? endSections : []}\n                    />\n                </Breakpoint>\n                <div className=\"col fill\">\n                    <Header>\n                        <Breakpoint size=\"phone\" aboveBelow=\"below\">\n                            <NavMenu>\n                                <NavPanel\n                                    fullWidth={true}\n                                    middle={this.state.online ? sections : []}\n                                    end={this.state.online ? endSections : []}\n                                />\n                            </NavMenu>\n                        </Breakpoint>\n                    </Header>\n                    <div className=\"fill scroll-content\">\n                        {!this.state.online && (\n                            <p className=\"padding-l\">The node is offline or loading.</p>\n                        )}\n                        {this.state.online && (\n                            <React.Fragment>\n                                <Breakpoint size=\"tablet\" aboveBelow=\"below\">\n                                    <div className=\"card card__flat row middle health-indicators\">\n                                        <HealthIndicator\n                                            label=\"Health\"\n                                            healthy={this.state.nodeHealth}\n                                            className=\"child margin-r-l\"\n                                        />\n                                        <HealthIndicator\n                                            label=\"Sync\"\n                                            healthy={this.state.syncHealth}\n                                            className=\"child\"\n                                        />\n                                    </div>\n                                </Breakpoint>\n                                <Switch>\n                                    {this.state.isLoggedIn && [\n                                        <Route\n                                            exact={true}\n                                            path=\"/\"\n                                            component={() => (<Home />)}\n                                            key=\"home\"\n                                        />,\n                                        <Route\n                                            exact={true}\n                                            path=\"/peers\"\n                                            component={() => (<Peers />)}\n                                            key=\"peers\"\n                                        />,\n                                        <Route\n                                            path=\"/peers/:id\"\n                                            component={(props: RouteComponentProps<PeerRouteProps>) =>\n                                                (<Peer {...props} />)}\n                                            key=\"peer\"\n                                        />\n                                    ]}\n                                    {!this.state.isLoggedIn && (\n                                        <Route\n                                            path=\"/\"\n                                            exact={true}\n                                            component={() => (<Explorer />)}\n                                        />\n                                    )}\n                                    <Route\n                                        path=\"/explorer\"\n                                        exact={true}\n                                        component={() => (<Explorer />)}\n                                    />\n                                    <Route\n                                        path=\"/explorer/search/:query?\"\n                                        component={(props: RouteComponentProps<SearchRouteProps>) =>\n                                            (<Search {...props} />)}\n                                    />\n                                    <Route\n                                        path=\"/explorer/unavailable\"\n                                        component={(props: RouteComponentProps<never>) => (<Unavailable {...props} />)}\n                                    />\n                                    <Route\n                                        path=\"/explorer/block/:blockId\"\n                                        component={(props: RouteComponentProps<BlockRouteProps>) =>\n                                            (<Block {...props} />)}\n                                    />\n                                    <Route\n                                        path=\"/explorer/milestone/:milestoneIndex\"\n                                        component={(props: RouteComponentProps<MilestoneRouteProps>) =>\n                                            (<Milestone {...props} />)}\n                                    />\n                                    <Route\n                                        path=\"/explorer/address/:address\"\n                                        component={(props: RouteComponentProps<AddressRouteProps>) =>\n                                            (<Address {...props} />)}\n                                    />\n                                    <Route\n                                        path=\"/explorer/output/:outputId\"\n                                        component={(props: RouteComponentProps<OutputRouteProps>) =>\n                                            (<OutputRoute {...props} />)}\n                                    />\n                                    <Route\n                                        path=\"/visualizer\"\n                                        component={(props: RouteComponentProps) => (<Visualizer {...props} />)}\n                                    />\n                                    <Route\n                                        path=\"/plugins\"\n                                        component={() => (<Plugins />)}\n                                    />\n                                    <Route\n                                        path=\"/login\"\n                                        component={() => (<Login />)}\n                                    />\n                                    <Route\n                                        exact={true}\n                                        path=\"*\"\n                                        component={() => (<Redirect to=\"/\" />)}\n                                    />\n                                </Switch>\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    /**\n     * Update the window title.\n     */\n    private updateTitle(): void {\n        let title = BrandHelper.getConfiguration().name;\n\n        if (this._alias) {\n            title += ` (${this._alias})`;\n        }\n        if (this._lmi && this._cmi) {\n            title += ` ${this._cmi} / ${this._lmi}`;\n        }\n\n        document.title = title;\n    }\n}\n\nexport default withRouter(App);\n","import { ServiceFactory } from \"../factories/serviceFactory\";\nimport { FetchHelper } from \"../utils/fetchHelper\";\nimport { EventAggregator } from \"./eventAggregator\";\nimport { LocalStorageService } from \"./localStorageService\";\n\n/**\n * Service to handle authentication.\n */\nexport class AuthService {\n    /**\n     * The jwt if authenticated.\n     */\n    private _jwt?: string;\n\n    /**\n     * The csrf cookie from the login operation.\n     */\n    private readonly _csrf?: string;\n\n    /**\n     * Create a new instance of AuthService.\n     */\n    constructor() {\n        this._jwt = undefined;\n\n        if (document.cookie) {\n            const cookies = document.cookie.split(\";\");\n\n            const csrf = cookies.find(c => c.trim().startsWith(\"_csrf\"));\n\n            if (csrf) {\n                const parts = csrf.split(\"=\");\n                if (parts.length === 2) {\n                    this._csrf = parts[1];\n                }\n            }\n        }\n    }\n\n    /**\n     * Initialise service.\n     */\n    public async initialize(): Promise<void> {\n        const storageService = ServiceFactory.get<LocalStorageService>(\"local-storage\");\n\n        const jwt = storageService.load<string>(\"dashboard-jwt\");\n\n        if (jwt) {\n            await this.login(undefined, undefined, jwt);\n        }\n    }\n\n    /**\n     * Try performing a login.\n     * @param user The username to login with.\n     * @param password The password to login with.\n     * @param jwt The jwt to login with.\n     * @returns True if the login was successful.\n     */\n    public async login(\n        user: string | undefined,\n        password: string | undefined,\n        jwt?: string): Promise<boolean> {\n        this.logout();\n\n        try {\n            const headers: Record<string, string> = {};\n            if (this._csrf) {\n                headers[\"X-CSRF-Token\"] = this._csrf;\n            }\n\n            const response = await FetchHelper.json<{\n                user?: string;\n                password?: string;\n                jwt?: string;\n            }, {\n                jwt?: string;\n            }>(\n                `${window.location.protocol}//${window.location.host}`,\n                \"/dashboard/auth\",\n                \"post\",\n                {\n                    user,\n                    password,\n                    jwt\n                },\n                headers);\n\n            if (response.jwt) {\n                const storageService = ServiceFactory.get<LocalStorageService>(\"local-storage\");\n                this._jwt = response.jwt;\n                storageService.save<string>(\"dashboard-jwt\", this._jwt);\n                EventAggregator.publish(\"auth-state\", true);\n            }\n        } catch (err) {\n            console.error(err);\n        }\n\n        return this._jwt !== undefined;\n    }\n\n    /**\n     * Logout.\n     */\n    public logout(): void {\n        if (this._jwt) {\n            const storageService = ServiceFactory.get<LocalStorageService>(\"local-storage\");\n            storageService.remove(\"dashboard-jwt\");\n            this._jwt = undefined;\n            EventAggregator.publish(\"auth-state\", false);\n        }\n    }\n\n    /**\n     * Get the jwt.\n     * @returns The jwt if logged in.\n     */\n    public isLoggedIn(): string | undefined {\n        return this._jwt;\n    }\n\n    /**\n     * Get the csrf.\n     * @returns The csrf.\n     */\n    public csrf(): string | undefined {\n        return this._csrf;\n    }\n}\n","/**\n * Class to use local storage.\n */\nexport class LocalStorageService {\n    /**\n     * Load an item from local storage.\n     * @param key The key of the item to load.\n     * @returns The item loaded.\n     */\n    public load<T>(key: string): T {\n        let obj;\n        if (window.localStorage) {\n            try {\n                const json = window.localStorage.getItem(key);\n\n                if (json) {\n                    obj = JSON.parse(json);\n                }\n            } catch {\n                // Nothing to do\n            }\n        }\n\n        return obj as T;\n    }\n\n    /**\n     * Save an item to local storage.\n     * @param key The key of the item to store.\n     * @param item The item to store.\n     */\n    public save<T>(key: string, item: T): void {\n        if (window.localStorage) {\n            try {\n                const json = JSON.stringify(item);\n                window.localStorage.setItem(key, json);\n            } catch {\n                // Nothing to do\n            }\n        }\n    }\n\n    /**\n     * Delete an item in local storage.\n     * @param key The key of the item to store.\n     */\n    public remove(key: string): void {\n        if (window.localStorage) {\n            try {\n                window.localStorage.removeItem(key);\n            } catch {\n                // Nothing to do\n            }\n        }\n    }\n\n    /**\n     * Clear the local storage.\n     * @param rootKey Clear all items that start with the root key, if undefined clear everything.\n     */\n    public clear(rootKey: string): void {\n        if (window.localStorage) {\n            try {\n                if (rootKey) {\n                    const keysToRemove = [];\n                    const len = window.localStorage.length;\n                    for (let i = 0; i < len; i++) {\n                        const key = window.localStorage.key(i);\n                        if (key?.startsWith(rootKey)) {\n                            keysToRemove.push(key);\n                        }\n                    }\n                    for (const key of keysToRemove) {\n                        window.localStorage.removeItem(key);\n                    }\n                } else {\n                    window.localStorage.clear();\n                }\n            } catch {\n                // Nothing to do\n            }\n        }\n    }\n}\n","import { Converter, RandomHelper } from \"@iota/util.js\";\nimport { ServiceFactory } from \"../factories/serviceFactory\";\nimport { WebSocketTopic } from \"../models/websocket/webSocketTopic\";\nimport { WebSocketService } from \"../services/webSocketService\";\n\n/**\n * Service to handle the websocket connection.\n */\nexport class MetricsService {\n    /**\n     * The web socket service.\n     */\n    private readonly _webSocketService: WebSocketService;\n\n    /**\n     * The web socket subscriptions.\n     */\n    private _webSocketSubscriptions: string[];\n\n    /**\n     * The cached data.\n     */\n    private _cached: {\n        [topic: number]: unknown[];\n    };\n\n    /**\n     * Subscribers to the messages.\n     */\n    private readonly _subscriptions: {\n        [topic: number]: {\n            subscriptionId: string;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            singleCallback?: (data: any) => void;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            multipleCallback?: (data: any[]) => void;\n        }[];\n    };\n\n    /**\n     * Create a new instance of MetricsService.\n     */\n    constructor() {\n        this._webSocketService = ServiceFactory.get<WebSocketService>(\"web-socket\");\n        this._webSocketSubscriptions = [];\n        this._subscriptions = {};\n        this._cached = {};\n    }\n\n    /**\n     * Initialise the service.\n     */\n    public initialize(): void {\n        const topics: { topic: WebSocketTopic; isPublic: boolean }[] = [\n            { topic: WebSocketTopic.SyncStatus, isPublic: true },\n            { topic: WebSocketTopic.NodeStatus, isPublic: false },\n            { topic: WebSocketTopic.PublicNodeStatus, isPublic: true },\n            { topic: WebSocketTopic.BPSMetrics, isPublic: true },\n            { topic: WebSocketTopic.DBSizeMetric, isPublic: false },\n            { topic: WebSocketTopic.PeerMetric, isPublic: false },\n            { topic: WebSocketTopic.Milestone, isPublic: true },\n            { topic: WebSocketTopic.ConfirmedMsMetrics, isPublic: true }\n        ];\n\n        for (const t of topics) {\n            this._webSocketSubscriptions.push(\n                this._webSocketService.subscribe(\n                    t.topic,\n                    !t.isPublic,\n                    data => {\n                        this.triggerCallbacks(t.topic, data);\n                    }));\n        }\n    }\n\n    /**\n     * Closedown the service.\n     */\n    public closedown(): void {\n        for (let i = 0; i < this._webSocketSubscriptions.length; i++) {\n            this._webSocketService.unsubscribe(this._webSocketSubscriptions[i]);\n        }\n        this._webSocketSubscriptions = [];\n    }\n\n    /**\n     * Subscribe to a topic.\n     * @param topic The topic to subscribe to.\n     * @param singleCallback The callback to send the data to.\n     * @param multipleCallback The callback to send the data to.\n     * @returns The subscription id.\n     */\n    public subscribe<T>(\n        topic: WebSocketTopic,\n        singleCallback?: (data: T) => void, multipleCallback?: (dataAll: T[]) => void): string {\n        if (!this._subscriptions[topic]) {\n            this._subscriptions[topic] = [];\n        }\n\n        const subscriptionId = Converter.bytesToHex(RandomHelper.generate(32));\n\n        this._subscriptions[topic].push({\n            subscriptionId,\n            singleCallback,\n            multipleCallback\n        });\n\n        if (this._cached[topic] && this._cached[topic].length > 0) {\n            if (multipleCallback) {\n                multipleCallback(this._cached[topic] as T[]);\n            }\n            if (singleCallback) {\n                singleCallback((this._cached[topic][this._cached[topic].length - 1] as T));\n            }\n        }\n\n        return subscriptionId;\n    }\n\n    /**\n     * Unsubscribe from a topic.\n     * @param subscriptionId The subscription to unsubscribe.\n     */\n    public unsubscribe(subscriptionId: string): void {\n        for (const topic of Object.keys(this._subscriptions).map(k => Number(k))) {\n            const subscriptionIdx = this._subscriptions[topic].findIndex(s => s.subscriptionId === subscriptionId);\n            if (subscriptionIdx >= 0) {\n                this._subscriptions[topic].splice(subscriptionIdx, 1);\n\n                if (this._subscriptions[topic].length === 0) {\n                    delete this._subscriptions[topic];\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Trigger the callback handlers for the subscribers.\n     * @param topic The message topic.\n     * @param data The message data.\n     */\n    private triggerCallbacks(topic: WebSocketTopic, data: unknown): void {\n        if (!this._cached[topic]) {\n            this._cached[topic] = [];\n        }\n        if (topic === WebSocketTopic.DBSizeMetric || topic === WebSocketTopic.ConfirmedMsMetrics) {\n            if (Array.isArray(data)) {\n                this._cached[topic].push(...data as unknown[]);\n            } else {\n                this._cached[topic].push(data);\n            }\n        } else {\n            this._cached[topic].push(data);\n        }\n        this._cached[topic] = this._cached[topic].slice(-60);\n\n        if (this._subscriptions[topic]) {\n            for (const subscriber of this._subscriptions[topic]) {\n                if (subscriber.singleCallback) {\n                    subscriber.singleCallback(this._cached[topic][this._cached[topic].length - 1]);\n                }\n                if (subscriber.multipleCallback) {\n                    subscriber.multipleCallback(this._cached[topic]);\n                }\n            }\n        }\n    }\n}\n","import { INodeInfoBaseToken } from \"@iota/iota.js\";\nimport { ServiceFactory } from \"../factories/serviceFactory\";\nimport { SessionStorageService } from \"./sessionStorageService\";\nimport { TangleService } from \"./tangleService\";\n\n/**\n * Service to handle getting confiuration from the node.\n */\nexport class NodeConfigService {\n    /**\n     * The network id.\n     */\n    private _networkId: string;\n\n    /**\n     * The bech32 hrp.\n     */\n    private _bech32Hrp: string;\n\n    /**\n     * The bech32 hrp.\n     */\n    private _baseToken: INodeInfoBaseToken;\n\n    /**\n     * The storage servie.\n     */\n    private readonly _storageService: SessionStorageService;\n\n    /**\n     * Create a new instance of NodeConfigService.\n     */\n    constructor() {\n        this._storageService = ServiceFactory.get<SessionStorageService>(\"session-storage\");\n        this._bech32Hrp = \"iota\";\n        this._networkId = \"\";\n        this._baseToken = {\n            name: \"IOTA\",\n            tickerSymbol: \"MIOTA\",\n            unit: \"i\",\n            decimals: 0,\n            subunit: undefined,\n            useMetricPrefix: true\n        };\n    }\n\n    /**\n     * Initialise NodeConfigService.\n     */\n    public async initialize(): Promise<void> {\n        this._bech32Hrp = this._storageService.load<string>(\"bech32Hrp\");\n        this._networkId = this._storageService.load<string>(\"networkId\");\n        this._baseToken = this._storageService.load<INodeInfoBaseToken>(\"baseToken\");\n\n        if (!this._bech32Hrp || !this._networkId || !this._baseToken) {\n            const tangleService = ServiceFactory.get<TangleService>(\"tangle\");\n\n            try {\n                const info = await tangleService.info();\n                this.setBech32Hrp(info.protocol.bech32HRP);\n                this.setNetworkId(info.protocol.networkName);\n                this.setBaseToken(info.baseToken);\n            } catch {}\n        }\n    }\n\n    /**\n     * Get the hrp for bech32 addresses.\n     * @returns The bech32 hrp.\n     */\n    public getBech32Hrp(): string {\n        return this._bech32Hrp;\n    }\n\n    /**\n     * Get the netwoork id.\n     * @returns The network id.\n     */\n    public getNetworkId(): string {\n        return this._networkId;\n    }\n\n    /**\n     * Get the node base token.\n     * @returns The node base token.\n     */\n    public getBaseToken(): INodeInfoBaseToken {\n        return this._baseToken;\n    }\n\n    /**\n     * Set the hrp for bech32 addresses.\n     * @param bech32Hrp The new blind mode.\n     */\n    public setBech32Hrp(bech32Hrp: string): void {\n        this._bech32Hrp = bech32Hrp;\n        this._storageService.save<string>(\"bech32Hrp\", this._bech32Hrp);\n    }\n\n    /**\n     * Set the network id.\n     * @param networkId The new blind mode.\n     */\n    public setNetworkId(networkId: string): void {\n        this._networkId = networkId;\n        this._storageService.save<string>(\"networkId\", this._networkId);\n    }\n\n    /**\n     * Set the base token.\n     * @param baseToken The new blind mode.\n     */\n    public setBaseToken(baseToken: INodeInfoBaseToken): void {\n        this._baseToken = baseToken;\n        this._storageService.save(\"baseToken\", this._baseToken);\n    }\n}\n","/**\n * Class to use session storage.\n */\n export class SessionStorageService {\n    /**\n     * Load an item from session storage.\n     * @param key The key of the item to load.\n     * @returns The item loaded.\n     */\n    public load<T>(key: string): T {\n        let obj;\n        if (window.sessionStorage) {\n            try {\n                const json = window.sessionStorage.getItem(key);\n\n                if (json) {\n                    obj = JSON.parse(json);\n                }\n            } catch {\n                // Nothing to do\n            }\n        }\n\n        return obj as T;\n    }\n\n    /**\n     * Save an item to session storage.\n     * @param key The key of the item to store.\n     * @param item The item to store.\n     */\n    public save<T>(key: string, item: T): void {\n        if (window.sessionStorage) {\n            try {\n                const json = JSON.stringify(item);\n                window.sessionStorage.setItem(key, json);\n            } catch {\n                // Nothing to do\n            }\n        }\n    }\n\n    /**\n     * Delete an item in session storage.\n     * @param key The key of the item to store.\n     */\n    public remove(key: string): void {\n        if (window.sessionStorage) {\n            try {\n                window.sessionStorage.removeItem(key);\n            } catch {\n                // Nothing to do\n            }\n        }\n    }\n\n    /**\n     * Clear the session storage.\n     * @param rootKey Clear all items that start with the root key, if undefined clear everything.\n     */\n    public clear(rootKey: string): void {\n        if (window.sessionStorage) {\n            try {\n                if (rootKey) {\n                    const keysToRemove = [];\n                    const len = window.sessionStorage.length;\n                    for (let i = 0; i < len; i++) {\n                        const key = window.sessionStorage.key(i);\n                        if (key?.startsWith(rootKey)) {\n                            keysToRemove.push(key);\n                        }\n                    }\n                    for (const key of keysToRemove) {\n                        window.sessionStorage.removeItem(key);\n                    }\n                } else {\n                    window.sessionStorage.clear();\n                }\n            } catch {\n                // Nothing to do\n            }\n        }\n    }\n}\n","import { ServiceFactory } from \"../factories/serviceFactory\";\nimport { EventAggregator } from \"./eventAggregator\";\nimport { LocalStorageService } from \"./localStorageService\";\n\n/**\n * Class to use for storing settings.\n */\nexport class SettingsService {\n    /**\n     * The blind mode setting.\n     */\n    private _blindMode: boolean;\n\n    /**\n     * The storage servie.\n     */\n    private readonly _storageService: LocalStorageService;\n\n    /**\n     * Create a new instance of SettingsService.\n     */\n    constructor() {\n        this._storageService = ServiceFactory.get<LocalStorageService>(\"local-storage\");\n        this._blindMode = false;\n    }\n\n    /**\n     * Initialize the service.\n     */\n    public initialize(): void {\n        this._blindMode = this._storageService.load<boolean>(\"blindMode\") ?? false;\n    }\n\n    /**\n     * Get the blind mode setting.\n     * @returns The blind mode.\n     */\n    public getBlindMode(): boolean {\n        return this._blindMode;\n    }\n\n    /**\n     * Set the blind mode setting.\n     * @param blindMode The new blind mode.\n     */\n    public setBlindMode(blindMode: boolean): void {\n        this._blindMode = blindMode;\n        this._storageService.save<boolean>(\"blindMode\", this._blindMode);\n        EventAggregator.publish(\"settings.blindMode\", this._blindMode);\n    }\n}\n","import { addressBalance, Bech32Helper, ClientError, IClient, ITaggedDataPayload, IBlockMetadata, IMilestonePayload, IRoutesResponse, INodeInfo, IOutputResponse, ITransactionPayload, SingleNodeClient, IndexerPluginClient, ED25519_ADDRESS_TYPE, ALIAS_ADDRESS_TYPE, NFT_ADDRESS_TYPE, ALIAS_OUTPUT_TYPE, NFT_OUTPUT_TYPE } from \"@iota/iota.js\";\nimport { Converter, HexHelper } from \"@iota/util.js\";\nimport { ServiceFactory } from \"../factories/serviceFactory\";\nimport { IAddressDetails } from \"../models/IAddressDetails\";\nimport { ISearchResponse } from \"../models/tangle/ISearchResponse\";\nimport { Bech32AddressHelper } from \"../utils/bech32AddressHelper\";\nimport { FormatHelper } from \"../utils/formatHelper\";\nimport { AuthService } from \"./authService\";\n/**\n * Service to handle api requests.\n */\nexport class TangleService {\n    /**\n     * The node info.\n     */\n    private _nodeInfo?: INodeInfo;\n\n    /**\n     * The auth service.\n     */\n    private readonly _authService: AuthService;\n\n    /**\n     * Create a new instance of TangleService.\n     */\n    constructor() {\n        this._authService = ServiceFactory.get<AuthService>(\"auth\");\n    }\n\n    /**\n     * Get the routes the node exposes.\n     * @returns The routes.\n     */\n     public async routes(): Promise<IRoutesResponse> {\n        const client = this.buildClient();\n        const routes = await client.routes();\n        return routes;\n    }\n\n    /**\n     * Get the node info.\n     * @returns The node info.\n     */\n    public async info(): Promise<INodeInfo> {\n        const client = this.buildClient();\n        this._nodeInfo = await client.info();\n        return this._nodeInfo;\n    }\n\n    /**\n     * Query the node.\n     * @param query The query to search for.\n     * @returns The response data.\n     */\n    public async search(query: string): Promise<ISearchResponse & { unavailable?: boolean }> {\n        const queryLower = query.toLowerCase();\n        const queryLowerNoPrefix = HexHelper.stripPrefix(queryLower);\n\n        const client = this.buildClient();\n        const indexerPlugin = new IndexerPluginClient(client);\n\n        if (!this._nodeInfo) {\n            await this.info();\n        }\n        const bech32HRP = this._nodeInfo ? this._nodeInfo.protocol.bech32HRP : Bech32Helper.BECH32_DEFAULT_HRP_MAIN;\n\n        // If the query is an integer then lookup a milestone\n        if (/^\\d+$/.test(query)) {\n            try {\n                const milestone = await client.milestoneByIndex(Number.parseInt(query, 10));\n\n                return {\n                    milestone\n                };\n            } catch (err) {\n                if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                    return {\n                        unavailable: true\n                    };\n                }\n            }\n        }\n\n        // Address bech32\n        if (Bech32Helper.matches(queryLowerNoPrefix, bech32HRP)) {\n            try {\n                const address = Bech32AddressHelper.buildAddress(queryLowerNoPrefix, bech32HRP);\n\n                if (address.type === 0) {\n                    // ed\n                    const addrBalance = await this.addressBalance(queryLowerNoPrefix);\n                    const basicOutputs = await indexerPlugin.outputs({ addressBech32: queryLowerNoPrefix });\n                    const aliasOutputs = await indexerPlugin.aliases({ stateControllerBech32: queryLowerNoPrefix });\n                    const nftOutputs = await indexerPlugin.nfts({ addressBech32: queryLowerNoPrefix });\n                    const addressOutputIds = basicOutputs.items.concat(aliasOutputs.items, nftOutputs.items);\n\n                    return {\n                        address: { ...address, ...addrBalance },\n                        addressOutputIds\n                    };\n                }\n\n                if (address.type === 8 && address.hex) {\n                     // Address alias\n                    const aliasOutput = await indexerPlugin.alias(HexHelper.addPrefix(address.hex));\n                    if (aliasOutput.items.length > 0) {\n                        const foundryOutputs = await indexerPlugin.foundries({ aliasAddressBech32: address.bech32 });\n\n                        return {\n                            address,\n                            addressOutputIds: [...aliasOutput.items, ...foundryOutputs.items]\n                        };\n                    }\n                }\n\n                if (address.type === 16 && address.hex) {\n                    const nftOutput = await indexerPlugin.nft(HexHelper.addPrefix(address.hex));\n\n                    if (nftOutput.items.length > 0) {\n                        return {\n                            address,\n                            addressOutputIds: nftOutput.items\n                        };\n                    }\n                }\n            } catch (err) {\n                if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                    return {\n                        unavailable: true\n                    };\n                }\n            }\n        }\n\n        if (Converter.isHex(queryLowerNoPrefix)) {\n            if (queryLowerNoPrefix.length === 64) {\n                // search for a block\n                try {\n                    const block = await client.block(HexHelper.addPrefix(queryLowerNoPrefix));\n\n                    return {\n                        block\n                    };\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n\n                // search for a transaction included block\n                try {\n                    const block = await client.transactionIncludedBlock(HexHelper.addPrefix(queryLowerNoPrefix));\n                    return {\n                        block\n                    };\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n\n                // search for a milestone by id\n                try {\n                    const milestone = await client.milestoneById(HexHelper.addPrefix(queryLowerNoPrefix));\n\n                    return {\n                        milestone\n                    };\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n            }\n\n           // Address ed25519/NftId/AliasId\n            if (queryLowerNoPrefix.length === 64 || queryLowerNoPrefix.length === 66) {\n                 // remove type byte\n                 const queryLowerNoType = queryLowerNoPrefix.length === 66\n                 ? queryLowerNoPrefix.slice(2) : queryLowerNoPrefix;\n\n                // Address ed25519\n                try {\n                    const address = Bech32AddressHelper.buildAddress(queryLowerNoType, bech32HRP, ED25519_ADDRESS_TYPE);\n                    if (address.bech32) {\n                        const addrBalance = await this.addressBalance(address.bech32);\n\n                        const basicOutputs = await indexerPlugin.outputs({ addressBech32: address.bech32 });\n                        const aliasOutputs = await indexerPlugin.aliases({ stateControllerBech32: address.bech32 });\n                        const nftOutputs = await indexerPlugin.nfts({ addressBech32: address.bech32 });\n                        const addressOutputIds = basicOutputs.items.concat(aliasOutputs.items, nftOutputs.items);\n\n                        if (addressOutputIds.length > 0) {\n                            return {\n                                address: { ...address, ...addrBalance },\n                                addressOutputIds\n                            };\n                        }\n                    }\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n                // Address alias\n                try {\n                    const aliasOutput = await indexerPlugin.alias(HexHelper.addPrefix(queryLowerNoType));\n                    if (aliasOutput.items.length > 0) {\n                        const address = Bech32AddressHelper\n                                        .buildAddress(queryLowerNoType, bech32HRP, ALIAS_ADDRESS_TYPE);\n                        const foundryOutputs = await indexerPlugin.foundries({ aliasAddressBech32: address.bech32 });\n\n                        return {\n                            address,\n                            addressOutputIds: [...aliasOutput.items, ...foundryOutputs.items]\n                        };\n                    }\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n                // Address nft\n                try {\n                    const nftOutput = await indexerPlugin.nft(HexHelper.addPrefix(queryLowerNoType));\n\n                    if (nftOutput.items.length > 0) {\n                        const address = Bech32AddressHelper.buildAddress(queryLowerNoType, bech32HRP, NFT_ADDRESS_TYPE);\n\n                        return {\n                            address,\n                            addressOutputIds: nftOutput.items\n                        };\n                    }\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n            }\n\n            // If the query is 68 bytes hex, try and look for an output\n            if (queryLowerNoPrefix.length === 68) {\n                try {\n                    const outputResponse = await client.output(HexHelper.addPrefix(queryLowerNoPrefix));\n\n                    if (outputResponse.output) {\n                        if (outputResponse.output.type === ALIAS_OUTPUT_TYPE) {\n                            const address = Bech32AddressHelper\n                                        .buildAddress(\n                                            FormatHelper.resolveId(outputResponse.output.aliasId, queryLowerNoPrefix),\n                                            bech32HRP, ALIAS_ADDRESS_TYPE\n                                        );\n                            const foundryOutputs = await indexerPlugin\n                                                        .foundries({ aliasAddressBech32: address.bech32 });\n                            return {\n                                address,\n                                addressOutputIds: [HexHelper.addPrefix(queryLowerNoPrefix), ...foundryOutputs.items]\n                            };\n                        }\n                        if (outputResponse.output.type === NFT_OUTPUT_TYPE) {\n                            const address = Bech32AddressHelper\n                                            .buildAddress(\n                                                FormatHelper.resolveId(outputResponse.output.nftId, queryLowerNoPrefix),\n                                                bech32HRP, NFT_ADDRESS_TYPE\n                                            );\n                            return {\n                                address,\n                                addressOutputIds: [HexHelper.addPrefix(queryLowerNoPrefix)]\n                            };\n                        }\n                        return {\n                            outputId: HexHelper.addPrefix(queryLowerNoPrefix),\n                            output: outputResponse\n                        };\n                    }\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n            }\n\n            if (queryLowerNoPrefix.length === 76 || queryLowerNoPrefix.length === 100) {\n                try {\n                    // Foundry lookup by foundry id or token id\n                    const foundryId = queryLowerNoPrefix.length === 100\n                            ? queryLowerNoPrefix.slice(0, 76) : queryLowerNoPrefix;\n                    const foundryOutputs = await indexerPlugin.foundry(HexHelper.addPrefix(foundryId));\n\n                    if (foundryOutputs.items.length > 0) {\n                        return {\n                            outputId: foundryOutputs.items[0]\n                        };\n                    }\n                } catch (err) {\n                    if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                        return {\n                            unavailable: true\n                        };\n                    }\n                }\n            }\n\n            // Basic output tag search\n            try {\n                // search outputs by tag\n                const outputs = await indexerPlugin.outputs({ tagHex: HexHelper.addPrefix(queryLowerNoPrefix) });\n\n                if (outputs.items.length > 0) {\n                    const output = await client.output(outputs.items[0]);\n                    return {\n                        output\n                    };\n                }\n            } catch (err) {\n                if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                    return {\n                        unavailable: true\n                    };\n                }\n            }\n        }\n\n        return {};\n    }\n\n    /**\n     * Get the block payload.\n     * @param blockId The block to get.\n     * @returns The response data.\n     */\n    public async payload(\n        blockId: string): Promise<ITransactionPayload | ITaggedDataPayload | IMilestonePayload | undefined> {\n        try {\n            const client = this.buildClient();\n\n            const block = await client.block(blockId);\n\n            return block?.payload;\n        } catch {}\n    }\n\n    /**\n     * Get the output details.\n     * @param outputId The output to get the details for.\n     * @returns The details response.\n     */\n    public async outputDetails(\n        outputId: string): Promise<IOutputResponse | undefined> {\n        try {\n            const client = this.buildClient();\n\n            return await client.output(outputId);\n        } catch {}\n    }\n\n    /**\n     * Get the balance for an address.\n     * @param addressBech32 The address to get the balances for.\n     * @returns The balance.\n     */\n    public async addressBalance(\n        addressBech32: string): Promise<IAddressDetails | undefined> {\n        try {\n            const client = this.buildClient();\n            const address = await addressBalance(client, addressBech32) as unknown as IAddressDetails;\n\n            return address;\n        } catch {}\n    }\n\n    /**\n     * Get the miletsone details.\n     * @param milestoneIndex The miletsone to get the details for.\n     * @returns The details response.\n     */\n    public async milestoneDetails(\n        milestoneIndex: number): Promise<IMilestonePayload | undefined> {\n        try {\n            const client = this.buildClient();\n\n            return await client.milestoneByIndex(milestoneIndex);\n        } catch {}\n    }\n\n    /**\n     * Get the block metadata.\n     * @param blockId The block if to get the metadata for.\n     * @returns The details response.\n     */\n    public async blockDetails(blockId: string): Promise<{\n        metadata?: IBlockMetadata;\n        unavailable?: boolean;\n    } | undefined> {\n        try {\n            const client = this.buildClient();\n\n            const metadata = await client.blockMetadata(blockId);\n\n            return {\n                metadata\n            };\n        } catch (err) {\n            if (err instanceof ClientError && this.checkForUnavailable(err)) {\n                return {\n                    unavailable: true\n                };\n            }\n        }\n    }\n\n    /**\n     * Add a peer.\n     * @param peerAddress The peer address.\n     * @param peerAlias The peer alias.\n     */\n    public async peerAdd(peerAddress: string, peerAlias: string): Promise<void> {\n        const client = this.buildClient();\n\n        await client.peerAdd(peerAddress, peerAlias);\n    }\n\n    /**\n     * Delete a peer.\n     * @param peerId The peer to delete.\n     */\n    public async peerDelete(peerId: string): Promise<void> {\n        const client = this.buildClient();\n\n        await client.peerDelete(peerId);\n    }\n\n\n    /**\n     * Build a client with auth header.\n     * @returns The client.\n     */\n    private buildClient(): IClient {\n        const jwt = this._authService.isLoggedIn();\n        const headers: { [id: string]: string } = {};\n\n        if (jwt) {\n            headers.Authorization = `Bearer ${jwt}`;\n        }\n\n        const csrf = this._authService.csrf();\n        if (csrf) {\n            headers[\"X-CSRF-Token\"] = csrf;\n        }\n\n        return new SingleNodeClient(\n            `${window.location.protocol}//${window.location.host}`,\n            {\n                basePath: \"/dashboard/api/\",\n                headers\n            });\n    }\n\n    /**\n     * Check for the node being unavaialable.\n     * @param error The error.\n     * @returns unavailable if detected.\n     */\n    private checkForUnavailable(error: ClientError): boolean {\n        return error.httpStatus === 503;\n    }\n}\n","import { ServiceFactory } from \"../factories/serviceFactory\";\nimport { EventAggregator } from \"./eventAggregator\";\nimport { LocalStorageService } from \"./localStorageService\";\n\n/**\n * Class the help with themes.\n */\nexport class ThemeService {\n    /**\n     * The theme.\n     */\n    private _theme: string;\n\n    /**\n     * Create a new instance of ThemeService.\n     */\n    constructor() {\n        this._theme = \"light\";\n    }\n\n    /**\n     * Initialize the theme.\n     */\n    public initialize(): void {\n        const storageService = ServiceFactory.get<LocalStorageService>(\"local-storage\");\n\n        const theme = storageService.load<string>(\"theme\");\n\n        this.apply(theme, false);\n    }\n\n    /**\n     * Apply a theme.\n     * @param theme The theme to apply.\n     * @param save Save the theme.\n     */\n    public apply(theme: string, save: boolean): void {\n        const currentTheme = this._theme;\n        this._theme = theme ?? \"light\";\n\n        document.body.classList.remove(`theme-${currentTheme}`);\n        document.body.classList.add(`theme-${this._theme}`);\n\n        EventAggregator.publish(\"theme\", this._theme);\n\n        if (save) {\n            this.save();\n        }\n    }\n\n    /**\n     * Get the theme.\n     * @returns The theme.\n     */\n    public get(): string {\n        return this._theme;\n    }\n\n    /**\n     * Save theme.\n     */\n    public save(): void {\n        const storageService = ServiceFactory.get<LocalStorageService>(\"local-storage\");\n        storageService.save(\"theme\", this._theme);\n    }\n}\n","import { ServiceFactory } from \"../factories/serviceFactory\";\nimport { IVisualizerCounts } from \"../models/visualizer/IVisualizerCounts\";\nimport { IVisualizerVertex } from \"../models/visualizer/IVisualizerVertex\";\nimport { VisualizerVertexOperation } from \"../models/visualizer/visualizerVertexOperation\";\nimport { IConfirmedInfo } from \"../models/websocket/IConfirmedInfo\";\nimport { IMilestoneInfo } from \"../models/websocket/IMilestoneInfo\";\nimport { ISolidInfo } from \"../models/websocket/ISolidInfo\";\nimport { ITipInfo } from \"../models/websocket/ITipInfo\";\nimport { IVertex } from \"../models/websocket/IVertex\";\nimport { WebSocketTopic } from \"../models/websocket/webSocketTopic\";\nimport { WebSocketService } from \"./webSocketService\";\n\n/**\n * Visualizer Service.\n */\nexport class VisualizerService {\n    /**\n     * The web socket service.\n     */\n    private readonly _webSocketService: WebSocketService;\n\n    /**\n     * Web socket subscriptions.\n     */\n    private _subscriptions: string[];\n\n    /**\n     * The known vertices.\n     */\n    private _vertices: {\n        [id: string]: IVisualizerVertex;\n    };\n\n    /**\n     * The ordered vertices.\n     */\n    private _verticesOrder: string[];\n\n    /**\n     * The counts.\n     */\n    private readonly _counts: IVisualizerCounts;\n\n    /**\n     * The maximum number of vertices.\n     */\n    private readonly _verticesLimit: number;\n\n    /**\n     * The vertex update callback.\n     */\n    private _vertexCallback?: (vertex: IVisualizerVertex, operation: VisualizerVertexOperation) => void;\n\n    /**\n     * The counts were updated callback.\n     */\n    private _countsCallback?: (counts: IVisualizerCounts) => void;\n\n    /**\n     * The referenced callback.\n     */\n    private _referencedCallback?: (id: string, excluded: string[], count: IVisualizerCounts) => void;\n\n    /**\n     * Create a new instance of VisualizerService.\n     */\n    constructor() {\n        this._subscriptions = [];\n        this._vertices = {};\n        this._verticesOrder = [];\n        this._verticesLimit = 5000;\n        this._counts = {\n            total: 0,\n            solid: 0,\n            referenced: 0,\n            transactions: 0,\n            conflicting: 0,\n            tips: 0\n        };\n        this._webSocketService = ServiceFactory.get<WebSocketService>(\"web-socket\");\n    }\n\n    /**\n     * The callback triggered with vertex updates.\n     * @param vertexCallback The vertex callback.\n     * @param countsCallback The counts callback.\n     * @param referencedCallback The referenced callback.\n     */\n    public subscribe(\n        vertexCallback: (vertex: IVisualizerVertex, operation: VisualizerVertexOperation) => void,\n        countsCallback: (counts: IVisualizerCounts) => void,\n        referencedCallback: (id: string, excluded: string[], count: IVisualizerCounts) => void): void {\n        this._subscriptions.push(\n            this._webSocketService.subscribe<IVertex>(\n                WebSocketTopic.Vertex,\n                false,\n                data => this.updateVertices(data)\n            ),\n            this._webSocketService.subscribe<IMilestoneInfo>(\n                WebSocketTopic.MilestoneInfo,\n                false,\n                data => this.updateMilestoneInfo(data)\n            ),\n            this._webSocketService.subscribe<ITipInfo>(\n                WebSocketTopic.TipInfo,\n                false,\n                data => this.updateTipInfo(data)\n            ),\n            this._webSocketService.subscribe<IConfirmedInfo>(\n                WebSocketTopic.ConfirmedInfo,\n                false,\n                data => this.updateConfirmedInfo(data)\n            ),\n            this._webSocketService.subscribe<ISolidInfo>(\n                WebSocketTopic.SolidInfo,\n                false,\n                data => this.updateSolidInfo(data)\n            ));\n\n        this._vertexCallback = vertexCallback;\n        this._countsCallback = countsCallback;\n        this._referencedCallback = referencedCallback;\n    }\n\n    /**\n     * Unsubscribe and cleanup.\n     */\n    public unsubscribe(): void {\n        for (const subscription of this._subscriptions) {\n            this._webSocketService.unsubscribe(subscription);\n        }\n        this._subscriptions = [];\n        this._vertices = {};\n        this._verticesOrder = [];\n\n        // reset counts\n        this._counts.total = 0;\n        this._counts.solid = 0;\n        this._counts.referenced = 0;\n        this._counts.transactions = 0;\n        this._counts.conflicting = 0;\n        this._counts.tips = 0;\n    }\n\n    /**\n     * Add a new vertex.\n     * @param vert The vertex to add.\n     */\n    private updateVertices(vert?: IVertex): void {\n        if (vert) {\n            const shortVertId = vert.id.slice(0, 10);\n\n            let vertex = this._vertices[shortVertId];\n\n            let op: VisualizerVertexOperation = \"add\";\n\n            if (vertex) {\n                op = \"update\";\n                // can only go from unsolid to solid\n                if (!vertex.isSolid && vert.isSolid) {\n                    this._counts.solid++;\n                }\n                if (!vertex.isReferenced && vert.isReferenced) {\n                    this._counts.referenced++;\n                }\n                if (!vertex.isConflicting && vert.isConflicting) {\n                    this._counts.conflicting++;\n                }\n                if (!vertex.isTip && vert.isTip) {\n                    this._counts.tips++;\n                }\n            } else {\n                if (vert.isSolid) {\n                    this._counts.solid++;\n                }\n                if (vert.isReferenced) {\n                    this._counts.referenced++;\n                }\n                if (vert.isTransaction) {\n                    this._counts.transactions++;\n                }\n                if (vert.isConflicting) {\n                    this._counts.conflicting++;\n                }\n                if (vert.isTip) {\n                    this._counts.tips++;\n                }\n\n                this._verticesOrder.push(shortVertId);\n                this.checkLimit();\n\n                vertex = {\n                    fullId: vert.id,\n                    shortId: shortVertId\n                };\n            }\n\n            vertex.parents = vert.parents;\n            vertex.isSolid = vert.isSolid;\n            vertex.isReferenced = vert.isReferenced;\n            vertex.isTransaction = vert.isTransaction;\n            vertex.isConflicting = vert.isConflicting;\n            vertex.isMilestone = vert.isMilestone;\n            vertex.isTip = vert.isTip;\n            vertex.isSelected = vert.isSelected;\n\n            this._vertices[shortVertId] = vertex;\n\n            this._counts.total = this._verticesOrder.length;\n\n            if (this._vertexCallback) {\n                this._vertexCallback(vertex, op);\n            }\n            if (this._countsCallback) {\n                this._countsCallback(this._counts);\n            }\n        }\n    }\n\n    /**\n     * Check the number of vertices.\n     */\n    private checkLimit(): void {\n        while (this._verticesOrder.length > this._verticesLimit) {\n            const deleteId = this._verticesOrder.shift();\n\n            if (deleteId) {\n                const vertex = this.removeVertex(deleteId);\n\n                if (vertex?.parents) {\n                    for (const parent of vertex.parents) {\n                        this.removeVertex(parent);\n                    }\n                }\n            }\n        }\n\n        if (this._countsCallback) {\n            this._countsCallback(this._counts);\n        }\n    }\n\n    /**\n     * Delete a vertex.\n     * @param vertexId The id of the vertex to delete.\n     * @returns The deleted vertex.\n     */\n    private removeVertex(vertexId: string | undefined): IVisualizerVertex | undefined {\n        if (!vertexId) {\n            return;\n        }\n        let vertex = this._vertices[vertexId];\n        if (vertex) {\n            if (vertex.isSolid) {\n                this._counts.solid--;\n            }\n            if (vertex.isReferenced) {\n                this._counts.referenced--;\n            }\n            if (vertex.isTransaction) {\n                this._counts.transactions--;\n            }\n            if (vertex.isConflicting) {\n                this._counts.conflicting--;\n            }\n            if (vertex.isTip) {\n                this._counts.tips--;\n            }\n            delete this._vertices[vertexId];\n        } else {\n            vertex = { shortId: vertexId };\n        }\n\n        if (this._vertexCallback) {\n            this._vertexCallback(vertex, \"delete\");\n        }\n\n        return vertex;\n    }\n\n    /**\n     * Update the tip information.\n     * @param data The tip info data.\n     */\n    private updateTipInfo(data?: ITipInfo) {\n        if (data) {\n            const vertex = this._vertices[data.id];\n            if (vertex) {\n                this._counts.tips += data.isTip ? 1 : (vertex.isTip ? -1 : 0);\n                vertex.isTip = data.isTip;\n                if (this._vertexCallback) {\n                    this._vertexCallback(vertex, \"update\");\n                }\n                if (this._countsCallback) {\n                    this._countsCallback(this._counts);\n                }\n            }\n        }\n    }\n\n    /**\n     * Update the milestone information.\n     * @param data The milestone info data.\n     */\n    private updateMilestoneInfo(data?: IMilestoneInfo) {\n        if (data) {\n            const vertex = this._vertices[data.id];\n            if (vertex) {\n                vertex.isMilestone = true;\n                if (this._vertexCallback) {\n                    this._vertexCallback(vertex, \"update\");\n                }\n            }\n        }\n    }\n\n    /**\n     * Update the confirmed information.\n     * @param data The confirmed info data.\n     */\n    private updateConfirmedInfo(data?: IConfirmedInfo) {\n        if (data) {\n            for (const id of data.ids) {\n                const vertex = this._vertices[id];\n                if (vertex && !vertex.isReferenced) {\n                    if (this._referencedCallback) {\n                        this._referencedCallback(id, data.excludedIds ?? [], this._counts);\n                    }\n\n                    if (this._countsCallback) {\n                        this._countsCallback(this._counts);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Update the solid information.\n     * @param data The solid info data.\n     */\n    private updateSolidInfo(data?: ISolidInfo) {\n        if (data) {\n            const vertex = this._vertices[data.id];\n            if (vertex && !vertex.isSolid) {\n                vertex.isSolid = true;\n                this._counts.solid++;\n\n                if (this._vertexCallback) {\n                    this._vertexCallback(vertex, \"update\");\n                }\n\n                if (this._countsCallback) {\n                    this._countsCallback(this._counts);\n                }\n            }\n        }\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./app/App\";\nimport Participation from \"./app/components/plugins/Participation\";\nimport Spammer from \"./app/components/plugins/Spammer\";\nimport { ServiceFactory } from \"./factories/serviceFactory\";\nimport \"./index.scss\";\nimport { IBrandConfiguration } from \"./models/IBrandConfiguration\";\nimport { AuthService } from \"./services/authService\";\nimport { EventAggregator } from \"./services/eventAggregator\";\nimport { LocalStorageService } from \"./services/localStorageService\";\nimport { MetricsService } from \"./services/metricsService\";\nimport { NodeConfigService } from \"./services/nodeConfigService\";\nimport { SessionStorageService } from \"./services/sessionStorageService\";\nimport { SettingsService } from \"./services/settingsService\";\nimport { TangleService } from \"./services/tangleService\";\nimport { ThemeService } from \"./services/themeService\";\nimport { VisualizerService } from \"./services/visualizerService\";\nimport { WebSocketService } from \"./services/webSocketService\";\nimport { BrandHelper } from \"./utils/brandHelper\";\n\ninitServices()\n    .then(brandConfiguration => {\n        ReactDOM.render(\n            !brandConfiguration\n                ? (<div>REACT_APP_BRAND_ID is not set</div>)\n                : (\n                    <BrowserRouter>\n                        <App />\n                    </BrowserRouter>\n                ),\n            document.querySelector(\"#root\")\n        );\n    })\n    .catch(err => console.error(err));\n\n/**\n * Initialise the services.\n * @returns The brand configuration.\n */\nasync function initServices(): Promise<IBrandConfiguration | undefined> {\n    ServiceFactory.register(\"local-storage\", () => new LocalStorageService());\n    ServiceFactory.register(\"session-storage\", () => new SessionStorageService());\n    const settingsService = new SettingsService();\n    ServiceFactory.register(\"settings\", () => settingsService);\n\n    const authService = new AuthService();\n    await authService.initialize();\n    ServiceFactory.register(\"auth\", () => authService);\n\n    const webSocketService = new WebSocketService();\n    ServiceFactory.register(\"web-socket\", () => webSocketService);\n    ServiceFactory.register(\"tangle\", () => new TangleService());\n\n    const themeService = new ThemeService();\n    themeService.initialize();\n    ServiceFactory.register(\"theme\", () => themeService);\n\n    const nodeConfigService = new NodeConfigService();\n    await nodeConfigService.initialize();\n    ServiceFactory.register(\"node-config\", () => nodeConfigService);\n\n    const metricsService = new MetricsService();\n    ServiceFactory.register(\"metrics\", () => metricsService);\n    metricsService.initialize();\n\n    ServiceFactory.register(\"visualizer\", () => new VisualizerService());\n\n    EventAggregator.subscribe(\"auth-state\", \"init\", async () => {\n        webSocketService.resubscribe();\n        await Spammer.initPlugin();\n        await Participation.initPlugin();\n    });\n\n    EventAggregator.subscribe(\"online\", \"init\", async o => {\n        if (o) {\n            await nodeConfigService.initialize();\n            webSocketService.resubscribe();\n        }\n    });\n\n    await Spammer.initPlugin();\n    await Participation.initPlugin();\n\n    settingsService.initialize();\n\n    return BrandHelper.initialize();\n}\n"],"sourceRoot":""}